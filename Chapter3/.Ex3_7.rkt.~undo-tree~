(undo-tree-save-format-version . 1)
"0abc2bb020aa3fdcbe139966cf28a6f9253827e2"
[nil nil nil nil (25293 33211 857444 0) 0 nil]
([nil nil ((1 . 2) (t . -1)) nil (25293 33211 857443 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 2) nil (25293 33211 857442 0) 0 nil])
([nil nil ((1 . 13)) nil (25293 33211 857429 0) 0 nil])
([nil nil ((13 . 15)) nil (25293 33211 857428 0) 0 nil])
([nil nil ((15 . 17)) nil (25293 33211 857427 0) 0 nil])
([nil nil ((16 . 24)) nil (25293 33211 857426 0) 0 nil])
([nil nil ((24 . 26)) nil (25293 33211 857426 0) 0 nil])
([nil nil ((25 . 34)) nil (25293 33211 857424 0) 0 nil])
([nil nil ((36 . 37) 34) nil (25293 33230 551712 0) 0 nil])
([nil nil ((36 . 38) (t 25293 33211 0 0)) nil (25293 33286 304805 0) 0 nil] [nil nil ((34 . 35) (t 25293 33211 0 0)) ((#("
" 0 1 (face font-lock-string-face fontified t)) . 34) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . 1) (undo-tree-id5 . -1)) (25293 33230 551054 0) 0 nil])
([nil nil ((38 . 40)) nil (25293 33286 304804 0) 0 nil])
nil
([nil nil ((39 . 46)) nil (25293 33286 304803 0) 0 nil])
([nil nil ((46 . 55)) nil (25293 33286 304802 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -53) (undo-tree-id20 . -1) (#("u" 0 1 (fontified t)) . -54) (undo-tree-id21 . -1) 55) nil (25293 33286 304801 0) 0 nil])
([nil nil ((53 . 57)) nil (25293 33286 304798 0) 0 nil])
([nil nil ((47 . 63) (#("make-accum" 0 10 (fontified t)) . -47) (undo-tree-id19 . -10) 57) nil (25293 33286 304797 0) 0 nil])
([nil nil ((64 . 65)) nil (25293 33286 304795 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 90 . 91) (nil fontified nil 90 . 91) (nil fontified nil 74 . 90) (nil fontified nil 73 . 74) (nil fontified nil 66 . 73) (nil fontified nil 65 . 66) (65 . 91)) nil (25293 33286 304794 0) 0 nil])
([nil nil ((91 . 92)) nil (25293 33286 304792 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 117 . 118) (nil fontified nil 117 . 118) (nil fontified nil 101 . 117) (nil fontified nil 100 . 101) (nil fontified nil 93 . 100) (nil fontified nil 92 . 93) (92 . 118)) nil (25293 33286 304791 0) 0 nil])
([nil nil ((#("accumulator" 0 11 (fontified t)) . -79) (undo-tree-id18 . -11) 90) nil (25293 33286 304788 0) 0 nil])
([nil nil ((#("make-" 0 5 (fontified t)) . -74) (undo-tree-id17 . -5) 79) nil (25293 33286 304786 0) 0 nil])
([nil nil ((74 . 86)) nil (25293 33286 304784 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -102) (undo-tree-id6 . -1) (#("c" 0 1 (fontified t)) . -103) (undo-tree-id7 . -1) (#("c" 0 1 (fontified t)) . -104) (undo-tree-id8 . -1) (#("u" 0 1 (fontified t)) . -105) (undo-tree-id9 . -1) (#("m" 0 1 (fontified t)) . -106) (undo-tree-id10 . -1) (#("u" 0 1 (fontified t)) . -107) (undo-tree-id11 . -1) (#("l" 0 1 (fontified t)) . -108) (undo-tree-id12 . -1) (#("a" 0 1 (fontified t)) . -109) (undo-tree-id13 . -1) (#("t" 0 1 (fontified t)) . -110) (undo-tree-id14 . -1) (#("o" 0 1 (fontified t)) . -111) (undo-tree-id15 . -1) (#("r" 0 1 (fontified t)) . -112) (undo-tree-id16 . -1) 113) nil (25293 33286 304780 0) 0 nil])
([nil nil ((102 . 109)) nil (25293 33306 7493 0) 0 nil])
([nil nil ((#("(provide make-accumulator)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t)) . 38) (undo-tree-id841 . -26) (undo-tree-id842 . -25) (undo-tree-id843 . -26) (undo-tree-id844 . -26) (undo-tree-id845 . -26) (t 25293 33286 0 0)) nil (25293 33352 860423 0) 0 nil] [nil nil ((110 . 112) (t 25293 33286 0 0)) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 110) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2)) (25293 33305 679716 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 37) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) 38) nil (25293 33352 860418 0) 0 nil])
([nil nil ((112 . 114)) ((#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 112) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . 1) (undo-tree-id671 . 1) (undo-tree-id672 . -1) (undo-tree-id673 . 1) (undo-tree-id674 . 1) (undo-tree-id675 . -1) (undo-tree-id676 . 1) (undo-tree-id677 . 1) (undo-tree-id678 . -1) (undo-tree-id679 . 1) (undo-tree-id680 . 1) (undo-tree-id681 . -1) (undo-tree-id682 . 1) (undo-tree-id683 . 1) (undo-tree-id684 . -1) (undo-tree-id685 . 1) (undo-tree-id686 . 1) (undo-tree-id687 . -1) (undo-tree-id688 . 1) (undo-tree-id689 . 1) (undo-tree-id690 . -1) (undo-tree-id691 . 1) (undo-tree-id692 . 1) (undo-tree-id693 . -1) (undo-tree-id694 . 1) (undo-tree-id695 . 1) (undo-tree-id696 . -1) (undo-tree-id697 . 1) (undo-tree-id698 . 1) (undo-tree-id699 . -1) (undo-tree-id700 . 1) (undo-tree-id701 . 1) (undo-tree-id702 . -1) (undo-tree-id703 . 1) (undo-tree-id704 . 1) (undo-tree-id705 . -1) (undo-tree-id706 . 1) (undo-tree-id707 . 1) (undo-tree-id708 . -1) (undo-tree-id709 . 1) (undo-tree-id710 . 1) (undo-tree-id711 . -1) (undo-tree-id712 . 1) (undo-tree-id713 . 1) (undo-tree-id714 . -1) (undo-tree-id715 . 1) (undo-tree-id716 . 1) (undo-tree-id717 . -1) (undo-tree-id718 . 1) (undo-tree-id719 . 1) (undo-tree-id720 . -1) (undo-tree-id721 . 1) (undo-tree-id722 . 1) (undo-tree-id723 . -1) (undo-tree-id724 . 1) (undo-tree-id725 . 1) (undo-tree-id726 . -1) (undo-tree-id727 . 1) (undo-tree-id728 . 1) (undo-tree-id729 . -1) (undo-tree-id730 . 1) (undo-tree-id731 . 1) (undo-tree-id732 . -1) (undo-tree-id733 . 1) (undo-tree-id734 . 1) (undo-tree-id735 . -1) (undo-tree-id736 . 1) (undo-tree-id737 . 1) (undo-tree-id738 . -1) (undo-tree-id739 . 1) (undo-tree-id740 . 1) (undo-tree-id741 . -1) (undo-tree-id742 . 1) (undo-tree-id743 . 1) (undo-tree-id744 . -1) (undo-tree-id745 . 1) (undo-tree-id746 . 1) (undo-tree-id747 . -1) (undo-tree-id748 . 1) (undo-tree-id749 . 1) (undo-tree-id750 . -1) (undo-tree-id751 . 1) (undo-tree-id752 . -1) (undo-tree-id753 . 1) (undo-tree-id754 . 1) (undo-tree-id755 . -1) (undo-tree-id756 . 1) (undo-tree-id757 . 1) (undo-tree-id758 . -1) (undo-tree-id759 . 1) (undo-tree-id760 . 1) (undo-tree-id761 . -1) (undo-tree-id762 . 1) (undo-tree-id763 . 1) (undo-tree-id764 . -1) (undo-tree-id765 . 1) (undo-tree-id766 . 1) (undo-tree-id767 . -1) (undo-tree-id768 . 1) (undo-tree-id769 . 1) (undo-tree-id770 . -1) (undo-tree-id771 . 1) (undo-tree-id772 . 1) (undo-tree-id773 . -1)) (25293 33305 479351 0) 0 nil])
([nil nil ((37 . 38)) nil (25293 33352 860412 0) 0 nil])
([nil nil ((113 . 121)) ((#("define s" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (face font-lock-function-name-face fontified t)) . 113) (undo-tree-id631 . -8) (undo-tree-id632 . -7) (undo-tree-id633 . -7) (undo-tree-id634 . -7) (undo-tree-id635 . -7) (undo-tree-id636 . -7) (undo-tree-id637 . -7) (undo-tree-id638 . -7) (undo-tree-id639 . -7) (undo-tree-id640 . -7) (undo-tree-id641 . -7) (undo-tree-id642 . -7) (undo-tree-id643 . -7) (undo-tree-id644 . -7) (undo-tree-id645 . -7) (undo-tree-id646 . -7) (undo-tree-id647 . -7) (undo-tree-id648 . -7) (undo-tree-id649 . -7) (undo-tree-id650 . -7) (undo-tree-id651 . -7) (undo-tree-id652 . -7) (undo-tree-id653 . -7) (undo-tree-id654 . -6) (undo-tree-id655 . -5) (undo-tree-id656 . -4) (undo-tree-id657 . -3) (undo-tree-id658 . -2) (undo-tree-id659 . -1) (undo-tree-id660 . -3) (undo-tree-id661 . -7) (undo-tree-id662 . -7) (undo-tree-id663 . -7) (undo-tree-id664 . -7) (undo-tree-id665 . -8) (undo-tree-id666 . -8)) (25293 33304 902951 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -37) (undo-tree-id831 . -1) 38) nil (25293 33352 860411 0) 0 nil])
([nil nil ((121 . 125)) ((#("am-a" 0 4 (face font-lock-function-name-face fontified t)) . 121) (undo-tree-id629 . -4) (undo-tree-id630 . -4)) (25293 33304 706388 0) 0 nil])
([nil nil ((#("(provide make-counter)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (face font-lock-keyword-face fontified t) 8 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 38)) nil (25293 33352 860409 0) 0 nil])
([nil nil ((120 . 127) (#("sam-a" 0 5 (face font-lock-function-name-face fontified t)) . -120) (undo-tree-id529 . -5) 125) ((120 . 125) (#("sam-acc" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 3 (face font-lock-function-name-face fontified t) 3 4 (face font-lock-function-name-face fontified t) 4 5 (face font-lock-function-name-face fontified t) 5 6 (face font-lock-function-name-face fontified t) 6 7 (face font-lock-function-name-face fontified t)) . 120) (undo-tree-id604 . -7) (undo-tree-id605 . -7) (undo-tree-id606 . -7) (undo-tree-id607 . -7) (undo-tree-id608 . -7) (undo-tree-id609 . -7) (undo-tree-id610 . -7) (undo-tree-id611 . -7) (undo-tree-id612 . -7) (undo-tree-id613 . -7) (undo-tree-id614 . -7) (undo-tree-id615 . -7) (undo-tree-id616 . -7) (undo-tree-id617 . -7) (undo-tree-id618 . -7) (undo-tree-id619 . -6) (undo-tree-id620 . -5) (undo-tree-id621 . -4) (undo-tree-id622 . -3) (undo-tree-id623 . -2) (undo-tree-id624 . -1) (undo-tree-id625 . -7) (undo-tree-id626 . -7) (undo-tree-id627 . -7) (undo-tree-id628 . -7)) (25293 33304 487085 0) 0 nil])
([nil nil ((38 . 39)) nil (25293 33352 860408 0) 0 nil])
([nil nil ((127 . 128)) ((#(" " 0 1 (fontified t)) . 127) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1)) (25293 33304 289778 0) 0 nil])
([nil nil ((#("(provide make-account)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 40) (undo-tree-id830 . -22)) nil (25293 33352 860407 0) 0 nil])
([nil nil ((128 . 130)) ((#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . 128) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . 1) (undo-tree-id549 . 1) (undo-tree-id550 . -1) (undo-tree-id551 . 1) (undo-tree-id552 . 1) (undo-tree-id553 . -1) (undo-tree-id554 . 1) (undo-tree-id555 . 1) (undo-tree-id556 . -1) (undo-tree-id557 . 1) (undo-tree-id558 . 1) (undo-tree-id559 . -1) (undo-tree-id560 . 1) (undo-tree-id561 . 1) (undo-tree-id562 . -1) (undo-tree-id563 . 1) (undo-tree-id564 . 1) (undo-tree-id565 . -1) (undo-tree-id566 . 1) (undo-tree-id567 . 1) (undo-tree-id568 . -1) (undo-tree-id569 . 1) (undo-tree-id570 . 1) (undo-tree-id571 . -1) (undo-tree-id572 . 1) (undo-tree-id573 . 1) (undo-tree-id574 . -1) (undo-tree-id575 . 1) (undo-tree-id576 . 1) (undo-tree-id577 . -1) (undo-tree-id578 . 1) (undo-tree-id579 . 1) (undo-tree-id580 . -1) (undo-tree-id581 . 1) (undo-tree-id582 . 1) (undo-tree-id583 . -1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . -1)) (25293 33303 943517 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 87 . 88) (nil fontified nil 87 . 88) (nil fontified nil 86 . 87) (nil fontified nil 53 . 86) (nil fontified nil 52 . 53) (nil fontified nil 51 . 52) (nil fontified nil 48 . 51) (nil fontified nil 47 . 48) (nil fontified nil 41 . 47) (nil fontified nil 40 . 41) (40 . 88)) nil (25293 33352 860405 0) 0 nil])
([nil nil ((129 . 137)) ((#("make-acc" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 129) (undo-tree-id530 . -8) (undo-tree-id531 . -5) (undo-tree-id532 . 3) (undo-tree-id533 . -6) (undo-tree-id534 . 2) (undo-tree-id535 . -7) (undo-tree-id536 . 1) (undo-tree-id537 . -8) (undo-tree-id538 . -7) (undo-tree-id539 . -6) (undo-tree-id540 . -5) (undo-tree-id541 . -4) (undo-tree-id542 . -3) (undo-tree-id543 . -2) (undo-tree-id544 . -1) (undo-tree-id545 . -8)) (25293 33303 431320 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 39) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . 1) (undo-tree-id829 . -1)) nil (25293 33352 860502 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -116) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("n" 0 1 (fontified t)) . -117) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -118) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t)) . -119) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -120) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -121) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -122) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("-" 0 1 (face font-lock-function-name-face fontified t)) . -123) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -124) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -125) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -126) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#(" " 0 1 (fontified t)) . -127) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 128) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . 1) (undo-tree-id445 . 1) (undo-tree-id446 . 1) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (undo-tree-id449 . 1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -128) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (#("m" 0 1 (fontified t)) . -129) (undo-tree-id463 . -1) (undo-tree-id464 . 1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("a" 0 1 (fontified t)) . -130) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("k" 0 1 (fontified t)) . -131) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("e" 0 1 (fontified t)) . -132) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("-" 0 1 (fontified t)) . -133) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("a" 0 1 (fontified t)) . -134) (undo-tree-id514 . -1) (undo-tree-id515 . 1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("c" 0 1 (fontified t)) . -135) (undo-tree-id521 . -1) (undo-tree-id522 . 1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (#("c" 0 1 (fontified t)) . -136) (undo-tree-id526 . -1) (undo-tree-id527 . 1) (undo-tree-id528 . -1) 137) ((128 . 137) (116 . 129)) (25293 33302 424924 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 38) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . 1) (undo-tree-id857 . -1)) nil (25293 33354 786460 0) 0 nil] [nil nil ((#("(define acc (make-account 100 'secret-password))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 11 (face font-lock-function-name-face fontified t) 11 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-2-face) fontified t) 13 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t)) . 39) (undo-tree-id814 . 48) (undo-tree-id815 . -48) (undo-tree-id816 . 48) (undo-tree-id817 . 48) (undo-tree-id818 . 48) (undo-tree-id819 . -48)) ((39 . 87)) (25293 33352 860389 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 112) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . 1) (undo-tree-id26 . 1) (undo-tree-id27 . 1) (undo-tree-id28 . 1) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (undo-tree-id37 . 1) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1) (undo-tree-id41 . 1) (undo-tree-id42 . 1) (undo-tree-id43 . 1) (undo-tree-id44 . 1) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . 1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1) (undo-tree-id56 . 1) (undo-tree-id57 . 1) (undo-tree-id58 . 1) (undo-tree-id59 . 1) (undo-tree-id60 . 1) (undo-tree-id61 . 1) (undo-tree-id62 . 1) (undo-tree-id63 . 1) (undo-tree-id64 . 1) (undo-tree-id65 . 1) (undo-tree-id66 . 1) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -112) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("d" 0 1 (fontified t)) . -113) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("e" 0 1 (fontified t)) . -114) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("f" 0 1 (fontified t)) . -115) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 116) ((112 . 116) (112 . 113)) (25293 33302 424223 0) 0 nil])
([nil nil ((87 . 88) (t 25293 33354 0 0)) nil (25293 33437 193369 0) 0 nil])
nil
nil
([nil nil ((88 . 90)) nil (25293 33437 193368 0) 0 nil])
([nil nil ((89 . 90)) nil (25293 33437 193367 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 88) (undo-tree-id903 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -88) (undo-tree-id904 . -1) (#("a" 0 1 (fontified t)) . -89) (undo-tree-id905 . -1) 90) nil (25293 33437 193366 0) 0 nil])
([nil nil ((88 . 90)) nil (25293 33437 193363 0) 0 nil])
([nil nil ((89 . 91)) nil (25293 33437 193362 0) 0 nil])
([nil nil ((90 . 100)) nil (25293 33437 193361 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -95) (undo-tree-id898 . -1) (#("i" 0 1 (fontified t)) . -96) (undo-tree-id899 . -1) (#("t" 0 1 (fontified t)) . -97) (undo-tree-id900 . -1) (#("h" 0 1 (fontified t)) . -98) (undo-tree-id901 . -1) (#("d" 0 1 (fontified t)) . -99) (undo-tree-id902 . -1) 100) nil (25293 33437 193359 0) 0 nil])
([nil nil ((95 . 110)) nil (25293 33437 193354 0) 0 nil])
([nil nil ((111 . 113)) nil (25293 33437 193353 0) 0 nil])
([nil nil ((113 . 121)) nil (25293 33437 193352 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -109) (undo-tree-id887 . -1) (#(" " 0 1 (fontified t)) . -111) (undo-tree-id888 . -1) (#("'" 0 1 (fontified t)) . -112) (undo-tree-id889 . -1) (#("w" 0 1 (fontified t)) . -113) (undo-tree-id890 . -1) (#("i" 0 1 (fontified t)) . -114) (undo-tree-id891 . -1) (#("t" 0 1 (fontified t)) . -115) (undo-tree-id892 . -1) (#("h" 0 1 (fontified t)) . -116) (undo-tree-id893 . -1) (#("d" 0 1 (fontified t)) . -117) (undo-tree-id894 . -1) (#("r" 0 1 (fontified t)) . -118) (undo-tree-id895 . -1) (#("a" 0 1 (fontified t)) . -119) (undo-tree-id896 . -1) (#("w" 0 1 (fontified t)) . -120) (undo-tree-id897 . -1) 121) nil (25293 33437 193349 0) 0 nil])
([nil nil ((109 . 114)) nil (25293 33437 193339 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -111) (undo-tree-id876 . -1) (undo-tree-id877 . 1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (#("i" 0 1 (fontified t)) . -112) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (#("t" 0 1 (fontified t)) . -113) (undo-tree-id884 . -1) (undo-tree-id885 . 1) (undo-tree-id886 . -1) 114) nil (25293 33437 193337 0) 0 nil])
([nil nil ((111 . 116)) nil (25293 33437 193328 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -113) (undo-tree-id861 . -1) (undo-tree-id862 . 1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (#("i" 0 1 (fontified t)) . -114) (undo-tree-id868 . -1) (undo-tree-id869 . 1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (#("t" 0 1 (fontified t)) . -115) (undo-tree-id873 . -1) (undo-tree-id874 . 1) (undo-tree-id875 . -1) 116) nil (25293 33437 193326 0) 0 nil])
([nil nil ((113 . 120)) nil (25293 33437 193313 0) 0 nil])
([nil nil ((121 . 123)) nil (25293 33437 193312 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -122) (undo-tree-id858 . -1) (undo-tree-id859 . 1) (undo-tree-id860 . -1) 123) nil (25293 33437 193310 0) 0 nil])
([nil nil ((122 . 124)) nil (25293 33437 193300 0) 0 nil])
([nil nil ((125 . 126) 124) nil (25293 33437 193295 0) 0 nil])
([nil nil ((126 . 128) (t 25293 33437 0 0)) nil (25293 40205 243484 0) 0 nil])
([nil nil ((128 . 130)) nil (25293 40205 243483 0) 0 nil])
([nil nil ((129 . 136)) nil (25293 40205 243482 0) 0 nil])
([nil nil ((136 . 138)) nil (25293 40205 243481 0) 0 nil])
([nil nil ((137 . 156)) nil (25293 40205 243481 0) 0 nil])
([nil nil ((156 . 170)) nil (25293 40205 243480 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -169) (undo-tree-id1033 . -1) 170) nil (25293 40205 243479 0) 0 nil])
([nil nil ((169 . 170)) nil (25293 40205 243477 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -155) (undo-tree-id1018 . -1) (#("'" 0 1 (fontified t)) . -156) (undo-tree-id1019 . -1) (#("p" 0 1 (fontified t)) . -157) (undo-tree-id1020 . -1) (#("a" 0 1 (fontified t)) . -158) (undo-tree-id1021 . -1) (#("s" 0 1 (fontified t)) . -159) (undo-tree-id1022 . -1) (#("s" 0 1 (fontified t)) . -160) (undo-tree-id1023 . -1) (#("w" 0 1 (fontified t)) . -161) (undo-tree-id1024 . -1) (#("o" 0 1 (fontified t)) . -162) (undo-tree-id1025 . -1) (#("r" 0 1 (fontified t)) . -163) (undo-tree-id1026 . -1) (#("d" 0 1 (fontified t)) . -164) (undo-tree-id1027 . -1) (#(" " 0 1 (fontified t)) . -165) (undo-tree-id1028 . -1) (#("n" 0 1 (fontified t)) . -166) (undo-tree-id1029 . -1) (#("e" 0 1 (fontified t)) . -167) (undo-tree-id1030 . -1) (#("w" 0 1 (fontified t)) . -168) (undo-tree-id1031 . -1) (#("-" 0 1 (fontified t)) . -169) (undo-tree-id1032 . -1) 170) nil (25293 40205 243474 0) 0 nil])
([nil nil ((155 . 159)) nil (25293 40205 243461 0) 0 nil])
([nil nil ((159 . 177)) nil (25293 40205 243460 0) 0 nil])
([nil nil ((178 . 181)) nil (25293 40205 243459 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . -46) (undo-tree-id1015 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -47) (undo-tree-id1016 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -48) (undo-tree-id1017 . -1) 49) nil (25293 40205 243458 0) 0 nil])
([nil nil ((46 . 55)) nil (25293 40205 243454 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -75) (undo-tree-id1000 . -1) (#("e" 0 1 (fontified t)) . -76) (undo-tree-id1001 . -1) (#("c" 0 1 (fontified t)) . -77) (undo-tree-id1002 . -1) (#("r" 0 1 (fontified t)) . -78) (undo-tree-id1003 . -1) (#("e" 0 1 (fontified t)) . -79) (undo-tree-id1004 . -1) (#("t" 0 1 (fontified t)) . -80) (undo-tree-id1005 . -1) (#("-" 0 1 (fontified t)) . -81) (undo-tree-id1006 . -1) (#("p" 0 1 (fontified t)) . -82) (undo-tree-id1007 . -1) (#("a" 0 1 (fontified t)) . -83) (undo-tree-id1008 . -1) (#("s" 0 1 (fontified t)) . -84) (undo-tree-id1009 . -1) (#("s" 0 1 (fontified t)) . -85) (undo-tree-id1010 . -1) (#("w" 0 1 (fontified t)) . -86) (undo-tree-id1011 . -1) (#("o" 0 1 (fontified t)) . -87) (undo-tree-id1012 . -1) (#("r" 0 1 (fontified t)) . -88) (undo-tree-id1013 . -1) (#("d" 0 1 (fontified t)) . -89) (undo-tree-id1014 . -1) 90) nil (25293 40205 243451 0) 0 nil])
([nil nil ((75 . 86)) nil (25293 40205 243438 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 90 . 91) (nil fontified nil 90 . 91) (90 . 91)) nil (25293 40292 665988 0) 0 nil])
([nil nil ((93 . 98)) nil (25293 40302 782218 0) 0 nil] [nil nil ((#("((acc 'secret-password 'withdraw) 40)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t) 2 7 (fontified t) 7 24 (fontified t) 24 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t)) . 91) (undo-tree-id990 . -37) (undo-tree-id991 . -36) (undo-tree-id992 . -37) (undo-tree-id993 . -37) (undo-tree-id994 . -37) (undo-tree-id995 . 37) (undo-tree-id996 . 37) (undo-tree-id997 . 37) (undo-tree-id998 . 37) (undo-tree-id999 . -37)) ((91 . 128)) (25293 40292 313700 0) 0 nil])
([nil nil ((102 . 103)) nil (25293 40302 782216 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 91) (undo-tree-id974 . -1) (undo-tree-id975 . 1) (undo-tree-id976 . 1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . 1) (undo-tree-id982 . 1) (undo-tree-id983 . 1) (undo-tree-id984 . 1) (undo-tree-id985 . 1) (undo-tree-id986 . 1) (undo-tree-id987 . 1) (undo-tree-id988 . 1) (undo-tree-id989 . -1)) ((91 . 92)) (25293 40291 969450 0) 0 nil])
([nil nil ((191 . 192) 103) nil (25293 40302 782210 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 91) (undo-tree-id952 . -1) (undo-tree-id953 . 1) (undo-tree-id954 . 1) (undo-tree-id955 . 1) (undo-tree-id956 . 1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . 1) (undo-tree-id960 . 1) (undo-tree-id961 . 1) (undo-tree-id962 . 1) (undo-tree-id963 . 1) (undo-tree-id964 . 1) (undo-tree-id965 . 1) (undo-tree-id966 . 1) (undo-tree-id967 . 1) (undo-tree-id968 . 1) (undo-tree-id969 . 1) (undo-tree-id970 . 1) (undo-tree-id971 . 1) (undo-tree-id972 . 1) (undo-tree-id973 . -1)) ((91 . 92)) (25293 40291 635126 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -102) (undo-tree-id1037 . -1) (undo-tree-id1038 . 1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) 103 (t 25293 40302 0 0)) nil (25293 40312 797947 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 91) (undo-tree-id926 . -1) (undo-tree-id927 . 1) (undo-tree-id928 . 1) (undo-tree-id929 . 1) (undo-tree-id930 . 1) (undo-tree-id931 . 1) (undo-tree-id932 . 1) (undo-tree-id933 . 1) (undo-tree-id934 . 1) (undo-tree-id935 . 1) (undo-tree-id936 . 1) (undo-tree-id937 . 1) (undo-tree-id938 . 1) (undo-tree-id939 . 1) (undo-tree-id940 . 1) (undo-tree-id941 . 1) (undo-tree-id942 . 1) (undo-tree-id943 . 1) (undo-tree-id944 . 1) (undo-tree-id945 . 1) (undo-tree-id946 . 1) (undo-tree-id947 . 1) (undo-tree-id948 . 1) (undo-tree-id949 . 1) (undo-tree-id950 . 1) (undo-tree-id951 . -1)) ((91 . 92)) (25293 40291 209824 0) 0 nil])
([nil nil ((98 . 99)) nil (25293 40312 797941 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 90) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . 1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . 1) (undo-tree-id925 . -1)) ((90 . 91)) (25293 40290 727959 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -98) (undo-tree-id1034 . -1) (undo-tree-id1035 . 1) (undo-tree-id1036 . -1) 99) nil (25293 40312 797938 0) 0 nil])
([nil nil ((144 . 145) 90) ((#("
" 0 1 (fontified t)) . 144) (t 25293 40205 0 0)) (25293 40205 243350 0) 0 nil])
([nil nil ((98 . 99)) nil (25293 40312 797925 0) 0 nil])
nil
([nil nil ((191 . 194) (137 . 140) (t 25293 40312 0 0)) nil (25293 40909 445158 0) 0 nil])
([nil nil ((134 . 136)) nil (25293 40909 445157 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 173 . 174) (nil fontified nil 173 . 174) (nil fontified nil 165 . 173) (nil fontified nil 148 . 165) (nil fontified nil 143 . 148) (nil fontified nil 137 . 143) (nil fontified nil 136 . 137) (136 . 174)) nil (25293 40909 445156 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -165) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (#("i" 0 1 (fontified t)) . -166) (undo-tree-id1060 . -1) (#("t" 0 1 (fontified t)) . -167) (undo-tree-id1061 . -1) (#("h" 0 1 (fontified t)) . -168) (undo-tree-id1062 . -1) (#("d" 0 1 (fontified t)) . -169) (undo-tree-id1063 . -1) (#("r" 0 1 (fontified t)) . -170) (undo-tree-id1064 . -1) (#("a" 0 1 (fontified t)) . -171) (undo-tree-id1065 . -1) (#("w" 0 1 (fontified t)) . -172) (undo-tree-id1066 . -1) 173) nil (25293 40909 445152 0) 0 nil])
([nil nil ((165 . 168)) nil (25293 40909 445143 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -165) (undo-tree-id1043 . -1) (undo-tree-id1044 . 1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (#("l" 0 1 (fontified t)) . -166) (undo-tree-id1050 . -1) (undo-tree-id1051 . 1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (#("a" 0 1 (fontified t)) . -167) (undo-tree-id1055 . -1) (undo-tree-id1056 . 1) (undo-tree-id1057 . -1) 168) nil (25293 40909 445139 0) 0 nil])
([nil nil ((165 . 172)) nil (25293 40909 445115 0) 0 nil])
([nil nil ((#("password" 0 8 (fontified t)) . 111) (undo-tree-id1091 . 8) (undo-tree-id1092 . -8) (t 25293 40909 0 0)) nil (25293 40942 988967 0) 0 nil])
([nil nil ((#("secret" 0 6 (fontified t)) . 104) (undo-tree-id1089 . 6) (undo-tree-id1090 . -6)) nil (25293 40942 989064 0) 0 nil])
([nil nil ((104 . 108)) nil (25293 40959 568507 0) 0 nil] [nil nil ((#("- 'withdraw" 0 3 (fontified t) 3 11 (fontified t)) . 104) (undo-tree-id1067 . 2) (undo-tree-id1068 . -9) (undo-tree-id1069 . 3) (undo-tree-id1070 . 2) (undo-tree-id1071 . -8) (undo-tree-id1072 . 4) (undo-tree-id1073 . 3) (undo-tree-id1074 . -7) (undo-tree-id1075 . 8) (undo-tree-id1076 . 4) (undo-tree-id1077 . -3) (undo-tree-id1078 . 10) (undo-tree-id1079 . 8) (undo-tree-id1080 . -1) (undo-tree-id1081 . 10) (undo-tree-id1082 . 10) (undo-tree-id1083 . -1) (undo-tree-id1084 . 11) (undo-tree-id1085 . 10) (undo-tree-id1086 . 11) (undo-tree-id1087 . 11) (undo-tree-id1088 . -11)) ((104 . 115)) (25293 40942 988957 0) 0 nil])
([nil nil ((109 . 111)) nil (25293 40959 568506 0) 0 nil])
nil
([nil nil ((111 . 112)) nil (25293 40959 568505 0) 0 nil])
([nil nil ((104 . 115) (#("open-ses" 0 4 (fontified t) 4 8 (fontified t)) . -104) (undo-tree-id1114 . -8) 112) nil (25293 40959 568504 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -144) (undo-tree-id1099 . -1) (#("e" 0 1 (fontified t)) . -145) (undo-tree-id1100 . -1) (#("c" 0 1 (fontified t)) . -146) (undo-tree-id1101 . -1) (#("r" 0 1 (fontified t)) . -147) (undo-tree-id1102 . -1) (#("e" 0 1 (fontified t)) . -148) (undo-tree-id1103 . -1) (#("t" 0 1 (fontified t)) . -149) (undo-tree-id1104 . -1) (#("-" 0 1 (fontified t)) . -150) (undo-tree-id1105 . -1) (#("p" 0 1 (fontified t)) . -151) (undo-tree-id1106 . -1) (#("a" 0 1 (fontified t)) . -152) (undo-tree-id1107 . -1) (#("s" 0 1 (fontified t)) . -153) (undo-tree-id1108 . -1) (#("s" 0 1 (fontified t)) . -154) (undo-tree-id1109 . -1) (#("w" 0 1 (fontified t)) . -155) (undo-tree-id1110 . -1) (#("o" 0 1 (fontified t)) . -156) (undo-tree-id1111 . -1) (#("r" 0 1 (fontified t)) . -157) (undo-tree-id1112 . -1) (#("d" 0 1 (fontified t)) . -158) (undo-tree-id1113 . -1) 159) nil (25293 40959 568500 0) 0 nil])
([nil nil ((144 . 148)) nil (25293 40959 568485 0) 0 nil])
([nil nil ((144 . 149) (#("open" 0 4 (fontified t)) . -144) (undo-tree-id1097 . -4) (undo-tree-id1098 . 4) 148) nil (25293 40959 568484 0) 0 nil])
([nil nil ((149 . 150)) nil (25293 40959 568480 0) 0 nil])
([nil nil ((144 . 155) (#("open-s" 0 6 (fontified t)) . -144) (undo-tree-id1093 . -6) (undo-tree-id1094 . -5) (undo-tree-id1095 . 1) (undo-tree-id1096 . -6) 150) nil (25293 40959 568475 0) 0 nil])
([nil nil ((228 . 230) (t 25293 40959 0 0)) nil (25293 41906 44907 0) 0 nil])
([nil nil ((230 . 232)) nil (25293 41906 44906 0) 0 nil])
([nil nil ((231 . 238)) nil (25293 41906 44905 0) 0 nil])
([nil nil ((238 . 240)) nil (25293 41906 44905 0) 0 nil])
([nil nil ((239 . 247)) nil (25293 41906 44904 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -245) (undo-tree-id1185 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -246) (undo-tree-id1186 . -1) 247) nil (25293 41906 44903 0) 0 nil])
([nil nil ((245 . 249)) nil (25293 41906 44901 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-function-name-face fontified t)) . -243) (undo-tree-id1179 . -1) (#("w" 0 1 (face font-lock-function-name-face fontified t)) . -244) (undo-tree-id1180 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -245) (undo-tree-id1181 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -246) (undo-tree-id1182 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -247) (undo-tree-id1183 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -248) (undo-tree-id1184 . -1) 249) nil (25293 41906 44899 0) 0 nil])
([nil nil ((243 . 247)) nil (25293 41906 44895 0) 0 nil])
([nil nil ((247 . 248)) nil (25293 41906 44894 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . -239) (undo-tree-id1170 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -240) (undo-tree-id1171 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -241) (undo-tree-id1172 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -242) (undo-tree-id1173 . -1) (#("w" 0 1 (face font-lock-function-name-face fontified t)) . -243) (undo-tree-id1174 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -244) (undo-tree-id1175 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -245) (undo-tree-id1176 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -246) (undo-tree-id1177 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -247) (undo-tree-id1178 . -1) 248) nil (25293 41906 44892 0) 0 nil])
([nil nil ((239 . 247)) nil (25293 41906 44885 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . -239) (undo-tree-id1162 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -240) (undo-tree-id1163 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -241) (undo-tree-id1164 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -242) (undo-tree-id1165 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -243) (undo-tree-id1166 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -244) (undo-tree-id1167 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -245) (undo-tree-id1168 . -1) (#("-" 0 1 (face font-lock-function-name-face fontified t)) . -246) (undo-tree-id1169 . -1) 247) nil (25293 41906 44883 0) 0 nil])
([nil nil ((239 . 247)) nil (25293 41906 44877 0) 0 nil])
([nil nil ((247 . 266)) nil (25293 41906 44876 0) 0 nil])
([nil nil ((267 . 270)) nil (25293 41906 44875 0) 0 nil])
([nil nil ((270 . 272)) nil (25293 41906 44875 0) 0 nil])
([nil nil ((271 . 274)) nil (25293 41906 44874 0) 0 nil])
([nil nil ((274 . 276)) nil (25293 41906 44873 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -271) (undo-tree-id1158 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -272) (undo-tree-id1159 . -1) (#(" " 0 1 (fontified t)) . -273) (undo-tree-id1160 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 274) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -274) (undo-tree-id1161 . -1) 275) nil (25293 41906 44872 0) 0 nil])
([nil nil ((271 . 275)) nil (25293 41906 44868 0) 0 nil])
([nil nil ((275 . 276)) nil (25293 41906 44868 0) 0 nil])
([nil nil ((276 . 278)) nil (25293 41906 44867 0) 0 nil])
([nil nil ((277 . 279)) nil (25293 41906 44866 0) 0 nil])
([nil nil ((278 . 291)) nil (25293 41906 44866 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -278) (undo-tree-id1145 . -1) (#("a" 0 1 (fontified t)) . -279) (undo-tree-id1146 . -1) (#("r" 0 1 (fontified t)) . -280) (undo-tree-id1147 . -1) (#(" " 0 1 (fontified t)) . -281) (undo-tree-id1148 . -1) (#("p" 0 1 (fontified t)) . -282) (undo-tree-id1149 . -1) (#("a" 0 1 (fontified t)) . -283) (undo-tree-id1150 . -1) (#("s" 0 1 (fontified t)) . -284) (undo-tree-id1151 . -1) (#("s" 0 1 (fontified t)) . -285) (undo-tree-id1152 . -1) (#("w" 0 1 (fontified t)) . -286) (undo-tree-id1153 . -1) (#("o" 0 1 (fontified t)) . -287) (undo-tree-id1154 . -1) (#("r" 0 1 (fontified t)) . -288) (undo-tree-id1155 . -1) (#("d" 0 1 (fontified t)) . -289) (undo-tree-id1156 . -1) (#("s" 0 1 (fontified t)) . -290) (undo-tree-id1157 . -1) 291) nil (25293 41906 44863 0) 0 nil])
([nil nil ((278 . 280)) nil (25293 41906 44854 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified nil)) . 278) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -278) (undo-tree-id1144 . -1) 279) nil (25293 41906 44853 0) 0 nil])
([nil nil ((278 . 281)) nil (25293 41906 44851 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -278) (undo-tree-id1141 . -1) (#("q" 0 1 (fontified t)) . -279) (undo-tree-id1142 . -1) (#("?" 0 1 (fontified t)) . -280) (undo-tree-id1143 . -1) 281) nil (25293 41906 44850 0) 0 nil])
([nil nil ((278 . 280)) nil (25293 41906 44848 0) 0 nil])
([nil nil ((279 . 283)) nil (25293 41906 44847 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified nil)) . 278) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -278) (undo-tree-id1136 . -1) (#("e" 0 1 (fontified t)) . -279) (undo-tree-id1137 . -1) (#("q" 0 1 (fontified t)) . -280) (undo-tree-id1138 . -1) (#("?" 0 1 (fontified t)) . -281) (undo-tree-id1139 . -1) (#(" " 0 1 (fontified t)) . -282) (undo-tree-id1140 . -1) 283) nil (25293 41906 44845 0) 0 nil])
([nil nil ((278 . 293)) nil (25293 41906 44841 0) 0 nil])
([nil nil ((296 . 299)) nil (25293 41906 44840 0) 0 nil])
([nil nil ((294 . 295)) nil (25293 41906 44839 0) 0 nil])
([nil nil ((295 . 300)) nil (25293 41906 44838 0) 0 nil])
([nil nil ((301 . 303)) nil (25293 41906 44838 0) 0 nil])
([nil nil ((303 . 305)) nil (25293 41906 44837 0) 0 nil])
([nil nil ((304 . 306)) nil (25293 41906 44836 0) 0 nil])
([nil nil ((305 . 309)) nil (25293 41906 44835 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -307) (undo-tree-id1134 . -1) (#(" " 0 1 (fontified t)) . -308) (undo-tree-id1135 . -1) 309) nil (25293 41906 44835 0) 0 nil])
([nil nil ((307 . 309)) nil (25293 41906 44833 0) 0 nil])
([nil nil ((309 . 311)) nil (25293 41906 44832 0) 0 nil])
([nil nil ((310 . 323)) nil (25293 41906 44831 0) 0 nil])
([nil nil ((324 . 326)) nil (25293 41906 44831 0) 0 nil])
([nil nil ((266 . 268)) nil (25293 41906 44830 0) 0 nil])
([nil nil ((329 . 331)) nil (25293 41906 44829 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -329) (undo-tree-id1132 . -1) (#("r" 0 1 (fontified t)) . -330) (undo-tree-id1133 . -1) 331) nil (25293 41906 44828 0) 0 nil])
([nil nil ((329 . 335)) nil (25293 41906 44826 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -334) (undo-tree-id1131 . -1) 335) nil (25293 41906 44825 0) 0 nil])
([nil nil ((335 . 337)) nil (25293 41906 44824 0) 0 nil])
([nil nil ((337 . 339)) nil (25293 41906 44823 0) 0 nil])
([nil nil ((338 . 342)) nil (25293 41906 44822 0) 0 nil])
([nil nil ((342 . 343)) nil (25293 41906 44822 0) 0 nil])
([nil nil ((343 . 345)) nil (25293 41906 44821 0) 0 nil])
([nil nil ((344 . 361)) nil (25293 41906 44820 0) 0 nil])
([nil nil ((362 . 363)) nil (25293 41906 44820 0) 0 nil])
([nil nil ((363 . 365)) nil (25293 41906 44819 0) 0 nil])
([nil nil ((364 . 377)) nil (25293 41906 44818 0) 0 nil])
([nil nil ((378 . 380)) nil (25293 41906 44817 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -379) (undo-tree-id1128 . -1) (undo-tree-id1129 . 1) (undo-tree-id1130 . -1) 380) nil (25293 41906 44816 0) 0 nil])
([nil nil ((379 . 380)) nil (25293 41906 44813 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -379) (undo-tree-id1125 . -1) (undo-tree-id1126 . 1) (undo-tree-id1127 . -1) 380) nil (25293 41906 44812 0) 0 nil])
([nil nil ((379 . 380)) nil (25293 41906 44808 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -382) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (#(" " 0 1 (fontified t)) . -383) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (#(" " 0 1 (fontified t)) . -384) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) 385) nil (25293 41906 44803 0) 0 nil])
([nil nil ((383 . 385) (t 25293 41906 0 0)) nil (25293 41976 515800 0) 0 nil])
([nil nil ((385 . 387)) nil (25293 41976 515799 0) 0 nil])
([nil nil ((386 . 388)) nil (25293 41976 515799 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 385) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -385) (undo-tree-id1201 . -1) (#("c" 0 1 (fontified t)) . -386) (undo-tree-id1202 . -1) (#("o" 0 1 (fontified t)) . -387) (undo-tree-id1203 . -1) 388) nil (25293 41976 515797 0) 0 nil])
([nil nil ((385 . 387)) nil (25293 41976 515793 0) 0 nil])
([nil nil ((386 . 399)) nil (25293 41976 515792 0) 0 nil])
([nil nil ((399 . 403)) nil (25293 41976 515792 0) 0 nil])
([nil nil ((403 . 405)) nil (25293 41976 515791 0) 0 nil])
([nil nil ((404 . 415)) nil (25293 41976 515790 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -414) (undo-tree-id1200 . -1) 415) nil (25293 41976 515789 0) 0 nil])
([nil nil ((414 . 422)) nil (25293 41976 515787 0) 0 nil])
([nil nil ((422 . 431)) nil (25293 41976 515786 0) 0 nil])
([nil nil ((433 . 435)) nil (25293 41976 515785 0) 0 nil])
([nil nil ((435 . 437)) nil (25293 41976 515785 0) 0 nil])
([nil nil ((436 . 443)) nil (25293 41976 515784 0) 0 nil])
([nil nil ((436 . 453) (#("correct" 0 7 (fontified t)) . -436) (undo-tree-id1199 . -7) 443) nil (25293 41976 515783 0) 0 nil])
([nil nil ((453 . 463)) nil (25293 41976 515781 0) 0 nil])
([nil nil ((463 . 471)) nil (25293 41976 515780 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -469) (undo-tree-id1191 . -1) (undo-tree-id1192 . 1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (#("o" 0 1 (fontified t)) . -470) (undo-tree-id1196 . -1) (undo-tree-id1197 . 1) (undo-tree-id1198 . -1) 471) nil (25293 41976 515778 0) 0 nil])
([nil nil ((469 . 470)) nil (25293 41976 515771 0) 0 nil])
([nil nil ((471 . 472)) nil (25293 41976 515770 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 507 . 508) (nil fontified nil 507 . 508) (nil fontified nil 473 . 507) (nil fontified nil 472 . 473) (472 . 508)) nil (25293 41976 515769 0) 0 nil])
([nil nil ((508 . 509)) nil (25293 41976 515767 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 544 . 545) (nil fontified nil 544 . 545) (nil fontified nil 510 . 544) (nil fontified nil 509 . 510) (509 . 545)) nil (25293 41976 515880 0) 0 nil])
([nil nil ((#("hello" 0 5 (fontified t)) . -502) (undo-tree-id1234 . -5) (undo-tree-id1235 . -5) 507) nil (25293 41996 851964 0) 0 nil] [nil nil ((#("passwords" 0 9 (fontified t)) . 528) (undo-tree-id1187 . 9) (undo-tree-id1188 . 9) (undo-tree-id1189 . 9) (undo-tree-id1190 . -9)) ((528 . 537)) (25293 41976 515759 0) 0 nil])
([nil nil ((502 . 506)) nil (25293 41996 851962 0) 0 nil])
nil
([nil nil ((502 . 513) (#("open" 0 4 (fontified t)) . -502) (undo-tree-id1224 . -4) (undo-tree-id1225 . 4) (undo-tree-id1226 . -1) (undo-tree-id1227 . 4) (undo-tree-id1228 . 3) (undo-tree-id1229 . -2) (undo-tree-id1230 . 2) (undo-tree-id1231 . -3) (undo-tree-id1232 . 1) (undo-tree-id1233 . -4) 506) nil (25293 41996 851961 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -545) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (#("e" 0 1 (fontified t)) . -546) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (#("l" 0 1 (fontified t)) . -547) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (#("l" 0 1 (fontified t)) . -548) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (#("o" 0 1 (fontified t)) . -549) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) 550) nil (25293 41996 851952 0) 0 nil])
([nil nil ((545 . 553)) nil (25293 41996 851925 0) 0 nil])
([nil nil ((379 . 380) (#(")" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -377) (377 . 378) (#(")" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -361) (undo-tree-id1236 . -1) (undo-tree-id1237 . 1) (undo-tree-id1238 . 1) 360 (t 25293 41996 0 0)) nil (25293 42018 547975 0) 0 nil])
([nil nil ((555 . 557) (t 25293 42018 0 0)) nil (25293 43575 837641 0) 0 nil])
([nil nil ((1 . 2) (t 25293 43575 0 0)) nil (25294 63286 695923 0) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -1) (undo-tree-id7 . -1) 2) nil (25294 63287 28853 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 615 . 616) (nil fontified nil 615 . 616) (nil fontified nil 610 . 615) (nil fontified nil 559 . 610) (nil fontified nil 556 . 559) (556 . 616)) nil (25294 63301 480132 0) 0 nil] [nil nil ((nil rear-nonsticky nil 615 . 616) (nil fontified nil 615 . 616) (nil fontified nil 610 . 615) (nil fontified nil 559 . 610) (nil fontified nil 556 . 559) (556 . 616)) ((#(";; (define (make-joint account password new-password)
;;   )" 0 3 (fontified nil face font-lock-comment-delimiter-face) 3 54 (fontified nil face font-lock-comment-face) 54 55 (fontified nil face font-lock-comment-delimiter-face) 55 56 (fontified nil face font-lock-comment-delimiter-face) 56 57 (fontified nil face font-lock-comment-delimiter-face) 57 58 (fontified nil face font-lock-comment-delimiter-face) 58 59 (fontified nil face font-lock-comment-delimiter-face) 59 60 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 556) (undo-tree-id8 . -55) (undo-tree-id9 . -56) (undo-tree-id10 . -54) (undo-tree-id11 . -58) (undo-tree-id12 . -57) (undo-tree-id13 . -55) (undo-tree-id14 . -55) (undo-tree-id15 . -55) (undo-tree-id16 . 1) (undo-tree-id17 . 1) (undo-tree-id18 . -55) (undo-tree-id19 . 4) (undo-tree-id20 . 1) (undo-tree-id21 . -56) (nil fontified t 559 . 610) (nil rear-nonsticky t 615 . 616)) (25294 63286 696046 0) 0 nil])
([nil nil ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -607) (undo-tree-id22 . 3) (undo-tree-id23 . 3) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -556) (undo-tree-id24 . 3) (undo-tree-id25 . 3) (undo-tree-id26 . 3) (undo-tree-id27 . 3)) nil (25294 63301 480126 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -611) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -612) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -613) (undo-tree-id5 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -611) (undo-tree-id6 . -1) 612) ((611 . 612) (611 . 614)) (25294 63286 695913 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1046 . 1047) (nil fontified nil 1046 . 1047) (nil fontified nil 1033 . 1046) (nil fontified nil 1032 . 1033) (nil fontified nil 1031 . 1032) (nil fontified nil 1030 . 1031) (nil fontified nil 1029 . 1030) (nil fontified nil 1027 . 1029) (nil fontified nil 991 . 1027) (nil fontified nil 985 . 991) (nil fontified nil 984 . 985) (nil fontified nil 983 . 984) (nil fontified nil 979 . 983) (nil fontified nil 978 . 979) (nil fontified nil 973 . 978) (nil fontified nil 972 . 973) (nil fontified nil 971 . 972) (nil fontified nil 967 . 971) (nil fontified nil 965 . 967) (nil fontified nil 964 . 965) (nil fontified nil 955 . 964) (nil fontified nil 946 . 955) (nil fontified nil 945 . 946) (nil fontified nil 944 . 945) (nil fontified nil 938 . 944) (nil fontified nil 937 . 938) (nil fontified nil 927 . 937) (nil fontified nil 926 . 927) (nil fontified nil 910 . 926) (nil fontified nil 909 . 910) (nil fontified nil 908 . 909) (nil fontified nil 902 . 908) (nil fontified nil 901 . 902) (nil fontified nil 895 . 901) (nil fontified nil 894 . 895) (nil fontified nil 872 . 894) (nil fontified nil 871 . 872) (nil fontified nil 870 . 871) (nil fontified nil 869 . 870) (nil fontified nil 865 . 869) (nil fontified nil 864 . 865) (nil fontified nil 857 . 864) (nil fontified nil 856 . 857) (nil fontified nil 854 . 856) (nil fontified nil 846 . 854) (nil fontified nil 845 . 846) (nil fontified nil 844 . 845) (nil fontified nil 838 . 844) (nil fontified nil 837 . 838) (nil fontified nil 832 . 837) (nil fontified nil 831 . 832) (nil fontified nil 830 . 831) (nil fontified nil 829 . 830) (nil fontified nil 821 . 829) (nil fontified nil 817 . 821) (nil fontified nil 816 . 817) (nil fontified nil 809 . 816) (nil fontified nil 808 . 809) (nil fontified nil 807 . 808) (nil fontified nil 789 . 807) (nil fontified nil 788 . 789) (nil fontified nil 775 . 788) (nil fontified nil 771 . 775) (nil fontified nil 770 . 771) (nil fontified nil 769 . 770) (nil fontified nil 764 . 769) (nil fontified nil 763 . 764) (nil fontified nil 762 . 763) (nil fontified nil 761 . 762) (nil fontified nil 756 . 761) (nil fontified nil 755 . 756) (nil fontified nil 754 . 755) (nil fontified nil 748 . 754) (nil fontified nil 747 . 748) (nil fontified nil 742 . 747) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 726 . 739) (nil fontified nil 725 . 726) (nil fontified nil 718 . 725) (nil fontified nil 714 . 718) (nil fontified nil 713 . 714) (nil fontified nil 712 . 713) (nil fontified nil 711 . 712) (nil fontified nil 702 . 711) (nil fontified nil 701 . 702) (nil fontified nil 700 . 701) (nil fontified nil 694 . 700) (nil fontified nil 693 . 694) (nil fontified nil 688 . 693) (nil fontified nil 687 . 688) (nil fontified nil 681 . 687) (nil fontified nil 680 . 681) (nil fontified nil 675 . 680) (nil fontified nil 674 . 675) (nil fontified nil 673 . 674) (nil fontified nil 667 . 673) (nil fontified nil 666 . 667) (nil fontified nil 661 . 666) (nil fontified nil 660 . 661) (nil fontified nil 659 . 660) (nil fontified nil 652 . 659) (nil fontified nil 651 . 652) (nil fontified nil 649 . 651) (nil fontified nil 648 . 649) (nil fontified nil 647 . 648) (nil fontified nil 629 . 647) (nil fontified nil 628 . 629) (nil fontified nil 616 . 628) (nil fontified nil 615 . 616) (nil fontified nil 614 . 615) (nil fontified nil 613 . 614) (nil fontified nil 610 . 613) (nil fontified nil 609 . 610) (609 . 1047) (t 25294 63301 0 0)) nil (25294 63351 407043 0) 0 nil])
nil
([nil nil ((#("(define (calls) count)" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-4-face)) 9 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face (rainbow-delimiters-depth-4-face)) 15 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-3-face))) . 666) (undo-tree-id203 . -22) (undo-tree-id204 . 22) (undo-tree-id205 . 22) (undo-tree-id206 . 22) (undo-tree-id207 . 22) (undo-tree-id208 . -22)) nil (25294 63351 407016 0) 0 nil])
([nil nil ((#("(define (increment) (set! count (accumulator 1)))" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-4-face)) 9 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face (rainbow-delimiters-depth-4-face)) 19 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-4-face)) 21 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-5-face)) 33 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-5-face)) 47 48 (fontified t face (rainbow-delimiters-depth-4-face)) 48 49 (fontified t face (rainbow-delimiters-depth-3-face))) . 671) (undo-tree-id201 . 49) (undo-tree-id202 . -49)) nil (25294 63351 407010 0) 0 nil])
([nil nil ((#("(define (reset) (begin (set! accumulator (make-accumulator 0))
			   (set! count 0)))" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-4-face)) 9 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face (rainbow-delimiters-depth-4-face)) 15 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face)) 17 22 (fontified t face font-lock-keyword-face) 22 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-5-face)) 24 28 (fontified t face font-lock-keyword-face) 28 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-6-face)) 42 60 (fontified t) 60 61 (fontified t face (rainbow-delimiters-depth-6-face)) 61 62 (fontified t face (rainbow-delimiters-depth-5-face)) 62 69 (fontified t) 69 70 (fontified t face (rainbow-delimiters-depth-5-face)) 70 74 (fontified t face font-lock-keyword-face) 74 82 (fontified t) 82 83 (fontified t face (rainbow-delimiters-depth-5-face)) 83 84 (fontified t face (rainbow-delimiters-depth-4-face)) 84 85 (fontified t face (rainbow-delimiters-depth-3-face))) . 676) (undo-tree-id194 . -85) (undo-tree-id195 . -63) (undo-tree-id196 . 85) (undo-tree-id197 . 85) (undo-tree-id198 . 85) (undo-tree-id199 . -85) (undo-tree-id200 . -85)) nil (25294 63351 407008 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 676) (undo-tree-id185 . -1) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (undo-tree-id188 . 1) (undo-tree-id189 . 1) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 1) (undo-tree-id193 . -1)) nil (25294 63351 407001 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 671) (undo-tree-id178 . -1) (undo-tree-id179 . 1) (undo-tree-id180 . 1) (undo-tree-id181 . 1) (undo-tree-id182 . 1) (undo-tree-id183 . 1) (undo-tree-id184 . -1)) nil (25294 63351 406993 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 666) (undo-tree-id168 . -1) (undo-tree-id169 . 1) (undo-tree-id170 . 1) (undo-tree-id171 . 1) (undo-tree-id172 . 1) (undo-tree-id173 . 1) (undo-tree-id174 . 1) (undo-tree-id175 . 1) (undo-tree-id176 . 1) (undo-tree-id177 . -1)) nil (25294 63351 406987 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -661) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#(" " 0 1 (fontified t)) . -662) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#(" " 0 1 (fontified t)) . -663) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#(" " 0 1 (fontified t)) . -664) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#(" " 0 1 (fontified t)) . -665) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 666) nil (25294 63351 406976 0) 0 nil])
([nil nil ((662 . 666) (#("            " 0 4 (fontified nil) 4 8 (fontified nil) 8 12 (fontified nil)) . 661) (undo-tree-id28 . -8) (undo-tree-id29 . -12) (undo-tree-id30 . 12) (undo-tree-id31 . 12) (undo-tree-id32 . 12) (undo-tree-id33 . 12) (undo-tree-id34 . 12) (undo-tree-id35 . 12) (undo-tree-id36 . 8) (undo-tree-id37 . 12) (undo-tree-id38 . -4) (undo-tree-id39 . 8) (undo-tree-id40 . 8) (undo-tree-id41 . -4) (undo-tree-id42 . 4) (undo-tree-id43 . 8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . 4) (undo-tree-id47 . 4) (undo-tree-id48 . -8) (undo-tree-id49 . 4) (undo-tree-id50 . 4) (undo-tree-id51 . -8) (undo-tree-id52 . 4) (undo-tree-id53 . -12) (undo-tree-id54 . 4) (undo-tree-id55 . -8) (undo-tree-id56 . 4) (undo-tree-id57 . 4) (undo-tree-id58 . -8) (undo-tree-id59 . 8) (undo-tree-id60 . 4) (undo-tree-id61 . -4) (undo-tree-id62 . 8) (undo-tree-id63 . 8) (undo-tree-id64 . -4) (undo-tree-id65 . 12) (undo-tree-id66 . 8) (undo-tree-id67 . 12) (undo-tree-id68 . 12) (undo-tree-id69 . 12) (undo-tree-id70 . 12) (undo-tree-id71 . 12) (undo-tree-id72 . 12) (undo-tree-id73 . 12) (undo-tree-id74 . 12) (undo-tree-id75 . 12) (undo-tree-id76 . 12) (undo-tree-id77 . 12) (undo-tree-id78 . 12) (undo-tree-id79 . 12) (undo-tree-id80 . 12) (undo-tree-id81 . 11) (undo-tree-id82 . 12) (undo-tree-id83 . -1) (undo-tree-id84 . 10) (undo-tree-id85 . 11) (undo-tree-id86 . -2) (undo-tree-id87 . 9) (undo-tree-id88 . 10) (undo-tree-id89 . -3) (undo-tree-id90 . 8) (undo-tree-id91 . 9) (undo-tree-id92 . -4) (undo-tree-id93 . 7) (undo-tree-id94 . 8) (undo-tree-id95 . -5) (undo-tree-id96 . 6) (undo-tree-id97 . 7) (undo-tree-id98 . -6) (undo-tree-id99 . 5) (undo-tree-id100 . 6) (undo-tree-id101 . -7) (undo-tree-id102 . 4) (undo-tree-id103 . 5) (undo-tree-id104 . -8) (undo-tree-id105 . 3) (undo-tree-id106 . 4) (undo-tree-id107 . -9) (undo-tree-id108 . 2) (undo-tree-id109 . 3) (undo-tree-id110 . -10) (undo-tree-id111 . 1) (undo-tree-id112 . 2) (undo-tree-id113 . -11) (undo-tree-id114 . 1) (undo-tree-id115 . -12) (undo-tree-id116 . -12) (673 . 674)) nil (25294 63351 406926 0) 0 nil])
([nil nil ((#("umulator" 0 8 (fontified t)) . 619) (t 25294 63351 0 0)) nil (25294 63393 714054 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -616) (undo-tree-id230 . -1) (#("c" 0 1 (fontified t)) . -617) (undo-tree-id231 . -1) (#("c" 0 1 (fontified t)) . -618) (undo-tree-id232 . -1) 619) nil (25294 63393 714052 0) 0 nil])
([nil nil ((616 . 624)) nil (25294 63393 714048 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -623) (undo-tree-id229 . -1) 624) nil (25294 63393 714047 0) 0 nil])
([nil nil ((623 . 625)) nil (25294 63393 714045 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -627) (undo-tree-id211 . -1) (#("a" 0 1 (fontified t)) . -628) (undo-tree-id212 . -1) (#("k" 0 1 (fontified t)) . -629) (undo-tree-id213 . -1) (#("e" 0 1 (fontified t)) . -630) (undo-tree-id214 . -1) (#("-" 0 1 (fontified t)) . -631) (undo-tree-id215 . -1) (#("a" 0 1 (fontified t)) . -632) (undo-tree-id216 . -1) (#("c" 0 1 (fontified t)) . -633) (undo-tree-id217 . -1) (#("c" 0 1 (fontified t)) . -634) (undo-tree-id218 . -1) (#("u" 0 1 (fontified t)) . -635) (undo-tree-id219 . -1) (#("m" 0 1 (fontified t)) . -636) (undo-tree-id220 . -1) (#("u" 0 1 (fontified t)) . -637) (undo-tree-id221 . -1) (#("l" 0 1 (fontified t)) . -638) (undo-tree-id222 . -1) (#("a" 0 1 (fontified t)) . -639) (undo-tree-id223 . -1) (#("t" 0 1 (fontified t)) . -640) (undo-tree-id224 . -1) (#("o" 0 1 (fontified t)) . -641) (undo-tree-id225 . -1) (#("r" 0 1 (fontified t)) . -642) (undo-tree-id226 . -1) (#(" " 0 1 (fontified t)) . -643) (undo-tree-id227 . -1) (#("0" 0 1 (fontified t)) . -644) (undo-tree-id228 . -1) 645) nil (25294 63393 714041 0) 0 nil])
([nil nil ((627 . 633)) nil (25294 63393 714021 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -631) (undo-tree-id209 . -1) (#("w" 0 1 (fontified t)) . -632) (undo-tree-id210 . -1) 633) nil (25294 63393 714019 0) 0 nil])
([nil nil ((631 . 648)) nil (25294 63393 714005 0) 0 nil])
([nil nil ((627 . 628) (t 25294 63393 0 0)) nil (25294 63581 37702 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -627) (undo-tree-id233 . -1) (undo-tree-id234 . 1) (undo-tree-id235 . -1) 628) nil (25294 63581 37700 0) 0 nil])
([nil nil ((627 . 632)) nil (25294 63581 37687 0) 0 nil])
([nil nil ((36 . 38) (t 25294 63581 0 0)) nil (25294 63962 673417 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 875 . 876) (nil fontified nil 875 . 876) (nil fontified nil 874 . 875) (nil fontified nil 861 . 874) (nil fontified nil 860 . 861) (nil fontified nil 859 . 860) (nil fontified nil 858 . 859) (nil fontified nil 857 . 858) (nil fontified nil 855 . 857) (nil fontified nil 822 . 855) (nil fontified nil 816 . 822) (nil fontified nil 815 . 816) (nil fontified nil 814 . 815) (nil fontified nil 810 . 814) (nil fontified nil 809 . 810) (nil fontified nil 803 . 809) (nil fontified nil 802 . 803) (nil fontified nil 794 . 802) (nil fontified nil 793 . 794) (nil fontified nil 792 . 793) (nil fontified nil 778 . 792) (nil fontified nil 777 . 778) (nil fontified nil 776 . 777) (nil fontified nil 775 . 776) (nil fontified nil 761 . 775) (nil fontified nil 760 . 761) (nil fontified nil 759 . 760) (nil fontified nil 756 . 759) (nil fontified nil 755 . 756) (nil fontified nil 754 . 755) (nil fontified nil 748 . 754) (nil fontified nil 747 . 748) (nil fontified nil 739 . 747) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 723 . 737) (nil fontified nil 722 . 723) (nil fontified nil 721 . 722) (nil fontified nil 720 . 721) (nil fontified nil 706 . 720) (nil fontified nil 705 . 706) (nil fontified nil 704 . 705) (nil fontified nil 701 . 704) (nil fontified nil 700 . 701) (nil fontified nil 699 . 700) (nil fontified nil 693 . 699) (nil fontified nil 692 . 693) (nil fontified nil 683 . 692) (nil fontified nil 682 . 683) (nil fontified nil 681 . 682) (nil fontified nil 666 . 681) (nil fontified nil 665 . 666) (nil fontified nil 664 . 665) (nil fontified nil 663 . 664) (nil fontified nil 649 . 663) (nil fontified nil 648 . 649) (nil fontified nil 647 . 648) (nil fontified nil 644 . 647) (nil fontified nil 643 . 644) (nil fontified nil 642 . 643) (nil fontified nil 636 . 642) (nil fontified nil 635 . 636) (nil fontified nil 616 . 635) (nil fontified nil 615 . 616) (nil fontified nil 614 . 615) (nil fontified nil 600 . 614) (nil fontified nil 599 . 600) (nil fontified nil 595 . 599) (nil fontified nil 594 . 595) (nil fontified nil 593 . 594) (nil fontified nil 592 . 593) (nil fontified nil 588 . 592) (nil fontified nil 587 . 588) (nil fontified nil 580 . 587) (nil fontified nil 579 . 580) (nil fontified nil 575 . 579) (nil fontified nil 567 . 575) (nil fontified nil 566 . 567) (nil fontified nil 565 . 566) (nil fontified nil 559 . 565) (nil fontified nil 558 . 559) (nil fontified nil 553 . 558) (nil fontified nil 552 . 553) (nil fontified nil 551 . 552) (nil fontified nil 550 . 551) (nil fontified nil 530 . 550) (nil fontified nil 526 . 530) (nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 506 . 524) (nil fontified nil 505 . 506) (nil fontified nil 504 . 505) (nil fontified nil 500 . 504) (nil fontified nil 499 . 500) (nil fontified nil 498 . 499) (nil fontified nil 486 . 498) (nil fontified nil 485 . 486) (nil fontified nil 484 . 485) (nil fontified nil 483 . 484) (nil fontified nil 478 . 483) (nil fontified nil 477 . 478) (nil fontified nil 473 . 477) (nil fontified nil 472 . 473) (nil fontified nil 459 . 472) (nil fontified nil 458 . 459) (nil fontified nil 455 . 458) (nil fontified nil 454 . 455) (nil fontified nil 453 . 454) (nil fontified nil 451 . 453) (nil fontified nil 450 . 451) (nil fontified nil 449 . 450) (nil fontified nil 440 . 449) (nil fontified nil 431 . 440) (nil fontified nil 430 . 431) (nil fontified nil 429 . 430) (nil fontified nil 427 . 429) (nil fontified nil 426 . 427) (nil fontified nil 425 . 426) (nil fontified nil 423 . 425) (nil fontified nil 422 . 423) (nil fontified nil 415 . 422) (nil fontified nil 414 . 415) (nil fontified nil 407 . 414) (nil fontified nil 389 . 407) (nil fontified nil 388 . 389) (nil fontified nil 387 . 388) (nil fontified nil 381 . 387) (nil fontified nil 380 . 381) (nil fontified nil 375 . 380) (nil fontified nil 374 . 375) (nil fontified nil 358 . 374) (nil fontified nil 357 . 358) (nil fontified nil 356 . 357) (nil fontified nil 343 . 356) (nil fontified nil 342 . 343) (nil fontified nil 341 . 342) (nil fontified nil 335 . 341) (nil fontified nil 334 . 335) (nil fontified nil 329 . 334) (nil fontified nil 328 . 329) (nil fontified nil 314 . 328) (nil fontified nil 313 . 314) (nil fontified nil 312 . 313) (nil fontified nil 296 . 312) (nil fontified nil 295 . 296) (nil fontified nil 286 . 295) (nil fontified nil 282 . 286) (nil fontified nil 281 . 282) (nil fontified nil 274 . 281) (nil fontified nil 273 . 274) (nil fontified nil 266 . 273) (nil fontified nil 259 . 266) (nil fontified nil 258 . 259) (nil fontified nil 257 . 258) (nil fontified nil 251 . 257) (nil fontified nil 250 . 251) (nil fontified nil 245 . 250) (nil fontified nil 244 . 245) (nil fontified nil 243 . 244) (nil fontified nil 225 . 243) (nil fontified nil 221 . 225) (nil fontified nil 220 . 221) (nil fontified nil 209 . 220) (nil fontified nil 208 . 209) (nil fontified nil 207 . 208) (nil fontified nil 191 . 207) (nil fontified nil 190 . 191) (nil fontified nil 181 . 190) (nil fontified nil 177 . 181) (nil fontified nil 176 . 177) (nil fontified nil 175 . 176) (nil fontified nil 170 . 175) (nil fontified nil 169 . 170) (nil fontified nil 165 . 169) (nil fontified nil 164 . 165) (nil fontified nil 147 . 164) (nil fontified nil 146 . 147) (nil fontified nil 145 . 146) (nil fontified nil 143 . 145) (nil fontified nil 142 . 143) (nil fontified nil 135 . 142) (nil fontified nil 134 . 135) (nil fontified nil 127 . 134) (nil fontified nil 119 . 127) (nil fontified nil 118 . 119) (nil fontified nil 117 . 118) (nil fontified nil 111 . 117) (nil fontified nil 110 . 111) (nil fontified nil 105 . 110) (nil fontified nil 104 . 105) (nil fontified nil 103 . 104) (nil fontified nil 102 . 103) (nil fontified nil 90 . 102) (nil fontified nil 89 . 90) (nil fontified nil 87 . 89) (nil fontified nil 86 . 87) (nil fontified nil 85 . 86) (nil fontified nil 84 . 85) (nil fontified nil 81 . 84) (nil fontified nil 80 . 81) (nil fontified nil 77 . 80) (nil fontified nil 76 . 77) (nil fontified nil 59 . 76) (nil fontified nil 47 . 59) (nil fontified nil 46 . 47) (nil fontified nil 45 . 46) (nil fontified nil 39 . 45) (nil fontified nil 38 . 39) (38 . 876)) nil (25294 63962 673402 0) 0 nil])
([nil nil ((1733 . 1736) (1669 . 1672) (1632 . 1635) (1593 . 1596) (1545 . 1548) (1517 . 1520) (1502 . 1505) (1450 . 1453) (1396 . 1399) (t 25294 63962 0 0)) nil (25294 63986 639543 0) 0 nil])
([nil nil ((104 . 106) (t 25294 63986 0 0)) nil (25294 64320 836636 0) 0 nil])
([nil nil ((106 . 108)) nil (25294 64320 836635 0) 0 nil])
([nil nil ((107 . 117)) nil (25294 64320 836635 0) 0 nil])
([nil nil ((117 . 119)) nil (25294 64320 836634 0) 0 nil])
([nil nil ((118 . 131)) nil (25294 64320 836633 0) 0 nil])
([nil nil ((134 . 139)) nil (25294 64320 836632 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 291 . 292) (nil fontified nil 291 . 292) (nil fontified nil 290 . 291) (nil fontified nil 289 . 290) (nil fontified nil 288 . 289) (nil fontified nil 286 . 288) (nil fontified nil 285 . 286) (nil fontified nil 272 . 285) (nil fontified nil 271 . 272) (nil fontified nil 253 . 271) (nil fontified nil 252 . 253) (nil fontified nil 251 . 252) (nil fontified nil 247 . 251) (nil fontified nil 246 . 247) (nil fontified nil 244 . 246) (nil fontified nil 243 . 244) (nil fontified nil 238 . 243) (nil fontified nil 237 . 238) (nil fontified nil 235 . 237) (nil fontified nil 234 . 235) (nil fontified nil 221 . 234) (nil fontified nil 220 . 221) (nil fontified nil 216 . 220) (nil fontified nil 215 . 216) (nil fontified nil 214 . 215) (nil fontified nil 213 . 214) (nil fontified nil 212 . 213) (nil fontified nil 211 . 212) (nil fontified nil 206 . 211) (nil fontified nil 205 . 206) (nil fontified nil 204 . 205) (nil fontified nil 189 . 204) (nil fontified nil 188 . 189) (nil fontified nil 187 . 188) (nil fontified nil 186 . 187) (nil fontified nil 182 . 186) (nil fontified nil 181 . 182) (nil fontified nil 178 . 181) (nil fontified nil 177 . 178) (nil fontified nil 165 . 177) (nil fontified nil 148 . 165) (nil fontified nil 147 . 148) (nil fontified nil 146 . 147) (nil fontified nil 140 . 146) (nil fontified nil 139 . 140) (139 . 292)) nil (25294 64320 836628 0) 0 nil])
([nil nil ((181 . 185) 212) nil (25294 64320 836615 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -176) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 177 (t 25294 64320 0 0)) nil (25294 64500 948910 0) 0 nil])
([nil nil ((176 . 177)) nil (25294 64500 948907 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -240) (undo-tree-id239 . -1) 241) nil (25294 64500 948905 0) 0 nil])
([nil nil ((240 . 241)) nil (25294 64500 948903 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -291) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 292) nil (25294 64500 948901 0) 0 nil])
([nil nil ((291 . 292)) nil (25294 64599 238529 0) 0 nil])
([nil nil ((1416 . 1417)) nil (25294 64618 407803 0) 0 nil] [nil nil ((#("o" 0 1 (fontified t)) . -1441) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("p" 0 1 (fontified t)) . -1442) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("e" 0 1 (fontified t)) . -1443) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (#("n" 0 1 (fontified t)) . -1444) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#("-" 0 1 (fontified t)) . -1445) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (#("s" 0 1 (fontified t)) . -1446) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (#("e" 0 1 (fontified t)) . -1447) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#("s" 0 1 (fontified t)) . -1448) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (#("a" 0 1 (fontified t)) . -1449) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (#("m" 0 1 (fontified t)) . -1450) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (#("e" 0 1 (fontified t)) . -1451) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (#(" " 0 1 (fontified t)) . -1452) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (#("'" 0 1 (fontified t)) . -1453) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (#("r" 0 1 (fontified t)) . -1454) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (#("o" 0 1 (fontified t)) . -1455) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (#("s" 0 1 (fontified t)) . -1456) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (#("e" 0 1 (fontified t)) . -1457) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("-" 0 1 (fontified t)) . -1458) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (#("b" 0 1 (fontified t)) . -1459) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (#("u" 0 1 (fontified t)) . -1460) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (#("d" 0 1 (fontified t)) . -1461) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) 1462 (t 25294 64500 0 0)) ((1441 . 1462)) (25294 64598 877079 0) 0 nil])
([nil nil ((1415 . 1416) (t 25294 64618 0 0)) nil (25294 64627 717366 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -1440) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) 1441) ((1440 . 1441)) (25294 64598 488648 0) 0 nil])
([nil nil ((1416 . 1418)) nil (25294 64627 717364 0) 0 nil])
([nil nil ((1440 . 1442)) ((#("nu" 0 1 (fontified t) 1 2 (fontified t)) . 1440) (undo-tree-id833 . -2) (undo-tree-id834 . 2) (undo-tree-id835 . -1) (undo-tree-id836 . 1) (undo-tree-id837 . -2) (undo-tree-id838 . -1) (undo-tree-id839 . -2)) (25294 64597 810189 0) 0 nil])
([nil nil ((1417 . 1432)) nil (25294 64627 717362 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 1434) (undo-tree-id242 . 1) (undo-tree-id243 . 1) (undo-tree-id244 . 1) (undo-tree-id245 . 1) (undo-tree-id246 . 1) (undo-tree-id247 . 1) (undo-tree-id248 . 1) (undo-tree-id249 . 1) (undo-tree-id250 . 1) (undo-tree-id251 . 1) (undo-tree-id252 . 1) (undo-tree-id253 . 1) (undo-tree-id254 . 1) (undo-tree-id255 . 1) (undo-tree-id256 . 1) (undo-tree-id257 . 1) (undo-tree-id258 . 1) (undo-tree-id259 . 1) (undo-tree-id260 . 1) (undo-tree-id261 . 1) (undo-tree-id262 . 1) (undo-tree-id263 . 1) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1) (undo-tree-id269 . 1) (undo-tree-id270 . 1) (undo-tree-id271 . 1) (undo-tree-id272 . 1) (undo-tree-id273 . 1) (undo-tree-id274 . 1) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (undo-tree-id280 . 1) (undo-tree-id281 . 1) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (undo-tree-id284 . 1) (undo-tree-id285 . 1) (undo-tree-id286 . 1) (undo-tree-id287 . 1) (undo-tree-id288 . 1) (undo-tree-id289 . 1) (undo-tree-id290 . 1) (undo-tree-id291 . 1) (undo-tree-id292 . 1) (undo-tree-id293 . 1) (undo-tree-id294 . 1) (undo-tree-id295 . 1) (undo-tree-id296 . 1) (undo-tree-id297 . 1) (undo-tree-id298 . 1) (undo-tree-id299 . 1) (undo-tree-id300 . 1) (undo-tree-id301 . 1) (undo-tree-id302 . 1) (undo-tree-id303 . 1) (undo-tree-id304 . 1) (undo-tree-id305 . 1) (undo-tree-id306 . 1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1434) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("l" 0 1 (fontified t)) . -1435) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("i" 0 1 (fontified t)) . -1436) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("s" 0 1 (fontified t)) . -1437) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#("t" 0 1 (fontified t)) . -1438) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -1439) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("n" 0 1 (fontified t)) . -1440) (undo-tree-id502 . -1) (undo-tree-id503 . 1) (undo-tree-id504 . -1) (undo-tree-id505 . 1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#("u" 0 1 (fontified t)) . -1441) (undo-tree-id508 . -1) (undo-tree-id509 . 1) (undo-tree-id510 . -1) 1442) ((1434 . 1442) (1434 . 1435)) (25294 64597 366180 0) 0 nil])
([nil nil ((1432 . 1438)) nil (25294 64627 717356 0) 0 nil])
([nil nil ((1434 . 1438)) ((#("null" 0 4 (fontified t)) . 1434) (undo-tree-id830 . 1) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (t 25294 64586 0 0)) (25294 64586 33145 0) 0 nil])
([nil nil ((805 . 806) (t 25294 64627 0 0)) nil (25295 503 268553 0) 0 nil])
nil
([nil nil ((855 . 856)) nil (25295 503 268551 0) 0 nil])
([nil nil ((913 . 914)) nil (25295 503 268550 0) 0 nil])
([nil nil ((969 . 970)) nil (25295 503 268549 0) 0 nil])
([nil nil ((806 . 808)) nil (25295 503 268548 0) 0 nil])
([nil nil ((858 . 860)) nil (25295 503 268547 0) 0 nil])
([nil nil ((918 . 920)) nil (25295 503 268546 0) 0 nil])
([nil nil ((976 . 978)) nil (25295 503 268545 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -791) (undo-tree-id865 . -1) (#("q" 0 1 (fontified t)) . -792) (undo-tree-id866 . -1) (#("?" 0 1 (fontified t)) . -793) (undo-tree-id867 . -1) (#(" " 0 1 (fontified t)) . -794) (undo-tree-id868 . -1) (#("p" 0 1 (fontified t)) . -795) (undo-tree-id869 . -1) 796) nil (25295 503 268543 0) 0 nil])
([nil nil ((791 . 799)) nil (25295 503 268537 0) 0 nil])
([nil nil ((791 . 808) (#("correct-" 0 8 (fontified t)) . -791) (undo-tree-id864 . -8) 799) nil (25295 503 268535 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -855) (undo-tree-id861 . -1) (#("q" 0 1 (fontified t)) . -856) (undo-tree-id862 . -1) (#("?" 0 1 (fontified t)) . -857) (undo-tree-id863 . -1) 858) nil (25295 503 268533 0) 0 nil])
([nil nil ((855 . 872)) nil (25295 503 268529 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -929) (undo-tree-id858 . -1) (#("q" 0 1 (fontified t)) . -930) (undo-tree-id859 . -1) (#("?" 0 1 (fontified t)) . -931) (undo-tree-id860 . -1) 932) nil (25295 503 268528 0) 0 nil])
([nil nil ((929 . 941)) nil (25295 503 268524 0) 0 nil])
([nil nil ((941 . 946)) nil (25295 503 268523 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1001) (undo-tree-id855 . -1) (#("q" 0 1 (fontified t)) . -1002) (undo-tree-id856 . -1) (#("?" 0 1 (fontified t)) . -1003) (undo-tree-id857 . -1) 1004) nil (25295 503 268521 0) 0 nil])
([nil nil ((1001 . 1008)) nil (25295 503 268516 0) 0 nil])
([nil nil ((1001 . 1018) (#("correct" 0 7 (fontified t)) . -1001) (undo-tree-id840 . -7) (undo-tree-id841 . -1) (undo-tree-id842 . 7) (undo-tree-id843 . 6) (undo-tree-id844 . -2) (undo-tree-id845 . 5) (undo-tree-id846 . -3) (undo-tree-id847 . 4) (undo-tree-id848 . -4) (undo-tree-id849 . 3) (undo-tree-id850 . -5) (undo-tree-id851 . 2) (undo-tree-id852 . -6) (undo-tree-id853 . 1) (undo-tree-id854 . -7) 1008) nil (25295 503 268510 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -873) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (#(" " 0 1 (fontified t)) . -874) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) 875 (t 25295 503 0 0)) nil (25295 541 995629 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -945) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (#(" " 0 1 (fontified t)) . -946) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) 947) nil (25295 541 995620 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1015) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (#(" " 0 1 (fontified t)) . -1016) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) 1017) nil (25295 541 995608 0) 0 nil])
([nil nil ((598 . 1242) (#(" amount)
      (if (> ((C 'how-many-calls?)) 6)
	  (call-the-cops)
	  (begin ((C 'increment))
		 ((C 'how-many-calls?))
		 \"Incorrect Password\")))
    (define (dispatch p m)
      (cond ((not (correct-password? passwords p)) incorrect-password)
	    ((and (correct-password? passwords p) (eq? m 'withdraw)) withdraw)
	    ((and (correct-password? passwords p) (eq? m 'deposit)) deposit)
	    ((and (correct-password? passwords p) (eq? m 'balance)) balance)
	    (else (error \"Unknown request -- MAKE-ACCOUNT\" m))))
    dispatch))

(define peter-acc (make-account 100 'open-sesame))


((peter-acc 'open-sesame 'withdraw) 40)

(peter-acc 'open-sesame" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-4-face)) 8 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-4-face)) 16 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-5-face)) 20 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-6-face)) 23 24 (fontified t face (rainbow-delimiters-depth-7-face)) 24 33 (fontified t) 33 42 (fontified t) 42 43 (fontified t face (rainbow-delimiters-depth-7-face)) 43 44 (fontified t face (rainbow-delimiters-depth-6-face)) 44 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-5-face)) 47 48 (fontified t) 48 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-5-face)) 52 65 (fontified t) 65 66 (fontified t face (rainbow-delimiters-depth-5-face)) 66 70 (fontified t) 70 71 (fontified t face (rainbow-delimiters-depth-5-face)) 71 76 (fontified t face font-lock-keyword-face) 76 77 (fontified t) 77 78 (fontified t face (rainbow-delimiters-depth-6-face)) 78 79 (fontified t face (rainbow-delimiters-depth-7-face)) 79 81 (fontified t) 81 91 (fontified t) 91 92 (fontified t face (rainbow-delimiters-depth-7-face)) 92 93 (fontified t face (rainbow-delimiters-depth-6-face)) 93 94 (fontified t) 94 97 (fontified t) 97 98 (fontified t face (rainbow-delimiters-depth-6-face)) 98 99 (fontified t face (rainbow-delimiters-depth-7-face)) 99 117 (fontified t) 117 118 (fontified t face (rainbow-delimiters-depth-7-face)) 118 119 (fontified t face (rainbow-delimiters-depth-6-face)) 119 120 (fontified t) 120 123 (fontified t) 123 131 (fontified t face font-lock-string-face) 131 143 (fontified t face font-lock-string-face) 143 144 (fontified t face (rainbow-delimiters-depth-5-face)) 144 145 (fontified t face (rainbow-delimiters-depth-4-face)) 145 146 (fontified t face (rainbow-delimiters-depth-3-face)) 146 147 (fontified t) 147 151 (fontified t) 151 152 (fontified t face (rainbow-delimiters-depth-3-face)) 152 158 (fontified t face font-lock-keyword-face) 158 159 (fontified t) 159 160 (fontified t face (rainbow-delimiters-depth-4-face)) 160 168 (fontified t face font-lock-function-name-face) 168 172 (fontified t) 172 173 (fontified t face (rainbow-delimiters-depth-4-face)) 173 174 (fontified t) 174 180 (fontified t) 180 181 (fontified t face (rainbow-delimiters-depth-4-face)) 181 185 (fontified t face font-lock-keyword-face) 185 186 (fontified t) 186 187 (fontified t face (rainbow-delimiters-depth-5-face)) 187 188 (fontified t face (rainbow-delimiters-depth-6-face)) 188 192 (fontified t) 192 193 (fontified t face (rainbow-delimiters-depth-7-face)) 193 210 (fontified t) 210 211 (fontified t) 211 222 (fontified t) 222 223 (fontified t face (rainbow-delimiters-depth-7-face)) 223 224 (fontified t face (rainbow-delimiters-depth-6-face)) 224 243 (fontified t) 243 244 (fontified t face (rainbow-delimiters-depth-5-face)) 244 245 (fontified t) 245 250 (fontified t) 250 251 (fontified t face (rainbow-delimiters-depth-5-face)) 251 252 (fontified t face (rainbow-delimiters-depth-6-face)) 252 255 (fontified t face font-lock-keyword-face) 255 256 (fontified t) 256 257 (fontified t face (rainbow-delimiters-depth-7-face)) 257 274 (fontified t) 274 286 (fontified t) 286 287 (fontified t face (rainbow-delimiters-depth-7-face)) 287 288 (fontified t) 288 289 (fontified t face (rainbow-delimiters-depth-7-face)) 289 304 (fontified t) 304 305 (fontified t face (rainbow-delimiters-depth-7-face)) 305 306 (fontified t face (rainbow-delimiters-depth-6-face)) 306 315 (fontified t) 315 316 (fontified t face (rainbow-delimiters-depth-5-face)) 316 317 (fontified t) 317 322 (fontified t) 322 323 (fontified t face (rainbow-delimiters-depth-5-face)) 323 324 (fontified t face (rainbow-delimiters-depth-6-face)) 324 327 (fontified t face font-lock-keyword-face) 327 328 (fontified t) 328 329 (fontified t face (rainbow-delimiters-depth-7-face)) 329 346 (fontified t) 346 358 (fontified t) 358 359 (fontified t face (rainbow-delimiters-depth-7-face)) 359 360 (fontified t) 360 361 (fontified t face (rainbow-delimiters-depth-7-face)) 361 375 (fontified t) 375 376 (fontified t face (rainbow-delimiters-depth-7-face)) 376 377 (fontified t face (rainbow-delimiters-depth-6-face)) 377 385 (fontified t) 385 386 (fontified t face (rainbow-delimiters-depth-5-face)) 386 387 (fontified t) 387 392 (fontified t) 392 393 (fontified t face (rainbow-delimiters-depth-5-face)) 393 394 (fontified t face (rainbow-delimiters-depth-6-face)) 394 397 (fontified t face font-lock-keyword-face) 397 398 (fontified t) 398 399 (fontified t face (rainbow-delimiters-depth-7-face)) 399 416 (fontified t) 416 428 (fontified t) 428 429 (fontified t face (rainbow-delimiters-depth-7-face)) 429 430 (fontified t) 430 431 (fontified t face (rainbow-delimiters-depth-7-face)) 431 445 (fontified t) 445 446 (fontified t face (rainbow-delimiters-depth-7-face)) 446 447 (fontified t face (rainbow-delimiters-depth-6-face)) 447 455 (fontified t) 455 456 (fontified t face (rainbow-delimiters-depth-5-face)) 456 457 (fontified t) 457 462 (fontified t) 462 463 (fontified t face (rainbow-delimiters-depth-5-face)) 463 467 (fontified t face font-lock-keyword-face) 467 468 (fontified t) 468 469 (fontified t face (rainbow-delimiters-depth-6-face)) 469 475 (fontified t) 475 508 (fontified t face font-lock-string-face) 508 510 (fontified t) 510 511 (fontified t face (rainbow-delimiters-depth-6-face)) 511 512 (fontified t face (rainbow-delimiters-depth-5-face)) 512 513 (fontified t face (rainbow-delimiters-depth-4-face)) 513 514 (fontified t face (rainbow-delimiters-depth-3-face)) 514 527 (fontified t) 527 528 (fontified t face (rainbow-delimiters-depth-2-face)) 528 529 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 529 530 (fontified t) 530 531 (fontified t) 531 532 (fontified t face (rainbow-delimiters-depth-1-face)) 532 538 (fontified t face font-lock-keyword-face) 538 539 (fontified t) 539 548 (fontified t face font-lock-function-name-face) 548 549 (fontified t) 549 550 (fontified t face (rainbow-delimiters-depth-2-face)) 550 579 (fontified t) 579 580 (fontified t face (rainbow-delimiters-depth-2-face)) 580 581 (fontified t face (rainbow-delimiters-depth-1-face)) 581 584 (fontified t) 584 585 (fontified t face (rainbow-delimiters-depth-1-face)) 585 586 (fontified t face (rainbow-delimiters-depth-2-face)) 586 618 (fontified t) 618 619 (fontified t face (rainbow-delimiters-depth-2-face)) 619 622 (fontified t) 622 623 (fontified t face (rainbow-delimiters-depth-1-face)) 623 625 (fontified t) 625 626 (fontified t face (rainbow-delimiters-depth-1-face)) 626 648 (fontified t)) . 598) (undo-tree-id923 . -417) (undo-tree-id924 . -581) (undo-tree-id925 . -529) (undo-tree-id926 . 119) (undo-tree-id927 . 119) (undo-tree-id928 . -387) (undo-tree-id929 . -457) (undo-tree-id930 . -399) 1015 (t 25295 542 0 0)) nil (25295 753 104381 0) 0 nil])
([nil nil ((835 . 841) (t 25295 620 0 0)) nil (25295 753 104375 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 898 . 899) (nil fontified nil 898 . 899) (nil fontified nil 879 . 898) (nil fontified nil 878 . 879) (nil fontified nil 877 . 878) (nil fontified nil 848 . 877) (nil fontified nil 847 . 848) (nil fontified nil 843 . 847) (nil fontified nil 842 . 843) (nil fontified nil 841 . 842) (841 . 899)) nil (25295 753 104373 0) 0 nil])
([nil nil ((777 . 778)) nil (25295 753 104371 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -881) (undo-tree-id905 . -1) (#("n" 0 1 (fontified t)) . -882) (undo-tree-id906 . -1) (#("c" 0 1 (fontified t)) . -883) (undo-tree-id907 . -1) (#("o" 0 1 (fontified t)) . -884) (undo-tree-id908 . -1) (#("r" 0 1 (fontified t)) . -885) (undo-tree-id909 . -1) (#("r" 0 1 (fontified t)) . -886) (undo-tree-id910 . -1) (#("e" 0 1 (fontified t)) . -887) (undo-tree-id911 . -1) (#("c" 0 1 (fontified t)) . -888) (undo-tree-id912 . -1) (#("t" 0 1 (fontified t)) . -889) (undo-tree-id913 . -1) (#("-" 0 1 (fontified t)) . -890) (undo-tree-id914 . -1) (#("p" 0 1 (fontified t)) . -891) (undo-tree-id915 . -1) (#("a" 0 1 (fontified t)) . -892) (undo-tree-id916 . -1) (#("s" 0 1 (fontified t)) . -893) (undo-tree-id917 . -1) (#("s" 0 1 (fontified t)) . -894) (undo-tree-id918 . -1) (#("w" 0 1 (fontified t)) . -895) (undo-tree-id919 . -1) (#("o" 0 1 (fontified t)) . -896) (undo-tree-id920 . -1) (#("r" 0 1 (fontified t)) . -897) (undo-tree-id921 . -1) (#("d" 0 1 (fontified t)) . -898) (undo-tree-id922 . -1) 899) nil (25295 753 104367 0) 0 nil])
([nil nil ((881 . 883)) nil (25295 753 104351 0) 0 nil])
([nil nil ((882 . 884)) nil (25295 753 104350 0) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -882) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . 1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (#("i" 0 1 (fontified t)) . -883) (undo-tree-id902 . -1) (undo-tree-id903 . 1) (undo-tree-id904 . -1) 884) nil (25295 753 104348 0) 0 nil])
([nil nil ((882 . 890)) nil (25295 753 104336 0) 0 nil])
([nil nil ((890 . 892)) nil (25295 753 104334 0) 0 nil])
([nil nil ((891 . 909)) nil (25295 753 104329 0) 0 nil])
([nil nil ((909 . 911) (t 25295 753 0 0)) nil (25295 763 85113 0) 0 nil])
([nil nil ((1294 . 1295) (t 25295 763 0 0)) nil (25295 779 721117 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1330 . 1331) (nil fontified nil 1330 . 1331) (nil fontified nil 1327 . 1330) (nil fontified nil 1321 . 1327) (nil fontified nil 1296 . 1321) (nil fontified nil 1295 . 1296) (1295 . 1331)) nil (25295 779 721111 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1307) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (#("r" 0 1 (fontified t)) . -1308) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (#("o" 0 1 (fontified t)) . -1309) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (#("n" 0 1 (fontified t)) . -1310) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (#("g" 0 1 (fontified t)) . -1311) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (#("-" 0 1 (fontified t)) . -1312) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (#("p" 0 1 (fontified t)) . -1313) (undo-tree-id1087 . -1) (undo-tree-id1088 . 1) (undo-tree-id1089 . 1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (#("a" 0 1 (fontified t)) . -1314) (undo-tree-id1105 . -1) (undo-tree-id1106 . 1) (undo-tree-id1107 . 1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (#("s" 0 1 (fontified t)) . -1315) (undo-tree-id1121 . -1) (undo-tree-id1122 . 1) (undo-tree-id1123 . 1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (#("s" 0 1 (fontified t)) . -1316) (undo-tree-id1135 . -1) (undo-tree-id1136 . 1) (undo-tree-id1137 . 1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (#("w" 0 1 (fontified t)) . -1317) (undo-tree-id1147 . -1) (undo-tree-id1148 . 1) (undo-tree-id1149 . 1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (#("o" 0 1 (fontified t)) . -1318) (undo-tree-id1157 . -1) (undo-tree-id1158 . 1) (undo-tree-id1159 . 1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (#("r" 0 1 (fontified t)) . -1319) (undo-tree-id1165 . -1) (undo-tree-id1166 . 1) (undo-tree-id1167 . 1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (#("d" 0 1 (fontified t)) . -1320) (undo-tree-id1171 . -1) (undo-tree-id1172 . 1) (undo-tree-id1173 . 1) (undo-tree-id1174 . -1) 1321 (t 25295 779 0 0)) nil (25295 792 20399 0) 0 nil])
([nil nil ((1307 . 1309)) nil (25295 792 20257 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1308) (undo-tree-id961 . -1) (undo-tree-id962 . 1) (undo-tree-id963 . -1) 1309) nil (25295 792 20256 0) 0 nil])
([nil nil ((1308 . 1309)) nil (25295 792 20253 0) 0 nil])
([nil nil ((1309 . 1313)) nil (25295 792 20252 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1311) (undo-tree-id953 . -1) (undo-tree-id954 . 1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (#("-" 0 1 (fontified t)) . -1312) (undo-tree-id958 . -1) (undo-tree-id959 . 1) (undo-tree-id960 . -1) 1313) nil (25295 792 20250 0) 0 nil])
([nil nil ((1311 . 1314)) nil (25295 792 20242 0) 0 nil])
([nil nil ((1307 . 1318) (#("open-se" 0 7 (fontified t)) . -1307) (undo-tree-id931 . -7) (undo-tree-id932 . 7) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . 6) (undo-tree-id937 . -2) (undo-tree-id938 . 5) (undo-tree-id939 . -3) (undo-tree-id940 . 4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . 7) (undo-tree-id947 . 3) (undo-tree-id948 . -5) (undo-tree-id949 . 2) (undo-tree-id950 . -6) (undo-tree-id951 . 1) (undo-tree-id952 . -7) 1314) nil (25295 792 20237 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 571) (746 . 749) (746 . 747) (#("	" 0 1 (fontified nil)) . 746) (742 . 746) (713 . 716) (713 . 714) (#("	" 0 1 (fontified nil)) . 713) (709 . 713) (679 . 682) (679 . 680) (#("	" 0 1 (fontified nil)) . 679) (675 . 679) (653 . 656) (653 . 654) (#("	" 0 1 (fontified nil)) . 653) (649 . 653) (611 . 614) (571 . 578) (t 25295 792 0 0)) nil (25295 853 28421 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1814) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) 1815 (t 25295 853 0 0)) nil (25295 1057 485373 0) 0 nil])
([nil nil ((1813 . 1814)) nil (25295 1057 485370 0) 0 nil])
([nil nil ((#(";; (define (make-joint account password new-password)
;;   (let ((passwords (list password new-password))
;; 	(count 0))
;;     (define (dispatch m)
;;       (cond ((eq? m 'how-many-calls?) calls)
;; 	    ((eq? m 'increment) increment)
;; 	    ((eq? m 'reset-count) reset)
;; 	    (else (error \"Unknown request --MAKE-ACCUMULATOR\" m))))
;;     dispatch))" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-face) 4 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 22 (fontified t face font-lock-comment-face) 22 48 (fontified t face font-lock-comment-face) 48 52 (fontified t face font-lock-comment-face) 52 53 (fontified t face font-lock-comment-face) 53 54 (fontified t face font-lock-comment-face) 54 57 (fontified t face font-lock-comment-delimiter-face) 57 59 (fontified t face font-lock-comment-delimiter-face) 59 60 (fontified t face font-lock-comment-face) 60 63 (fontified t face font-lock-comment-face) 63 64 (fontified t face font-lock-comment-face) 64 65 (fontified t face font-lock-comment-face) 65 66 (fontified t face font-lock-comment-face) 66 75 (fontified t face font-lock-comment-face) 75 76 (fontified t face font-lock-comment-face) 76 77 (fontified t face font-lock-comment-face) 77 82 (fontified t face font-lock-comment-face) 82 85 (fontified t face font-lock-comment-face) 85 103 (fontified t face font-lock-comment-face) 103 104 (fontified t face font-lock-comment-face) 104 105 (fontified t face font-lock-comment-face) 105 106 (fontified t face font-lock-comment-face) 106 109 (fontified t face font-lock-comment-delimiter-face) 109 110 (fontified t face font-lock-comment-delimiter-face) 110 111 (fontified t face font-lock-comment-face) 111 118 (fontified t face font-lock-comment-face) 118 119 (fontified t face font-lock-comment-face) 119 120 (fontified t face font-lock-comment-face) 120 121 (fontified t face font-lock-comment-face) 121 124 (fontified t face font-lock-comment-delimiter-face) 124 128 (fontified t face font-lock-comment-delimiter-face) 128 129 (fontified t face font-lock-comment-face) 129 135 (fontified t face font-lock-comment-face) 135 136 (fontified t face font-lock-comment-face) 136 137 (fontified t face font-lock-comment-face) 137 141 (fontified t face font-lock-comment-face) 141 145 (fontified t face font-lock-comment-face) 145 147 (fontified t face font-lock-comment-face) 147 148 (fontified t face font-lock-comment-face) 148 149 (fontified t face font-lock-comment-face) 149 152 (fontified t face font-lock-comment-delimiter-face) 152 158 (fontified t face font-lock-comment-delimiter-face) 158 159 (fontified t face font-lock-comment-face) 159 163 (fontified t face font-lock-comment-face) 163 164 (fontified t face font-lock-comment-face) 164 165 (fontified t face font-lock-comment-face) 165 166 (fontified t face font-lock-comment-face) 166 188 (fontified t face font-lock-comment-face) 188 189 (fontified t face font-lock-comment-face) 189 195 (fontified t face font-lock-comment-face) 195 196 (fontified t face font-lock-comment-face) 196 197 (fontified t face font-lock-comment-face) 197 200 (fontified t face font-lock-comment-delimiter-face) 200 205 (fontified t face font-lock-comment-delimiter-face) 205 206 (fontified t face font-lock-comment-face) 206 207 (fontified t face font-lock-comment-face) 207 223 (fontified t face font-lock-comment-face) 223 224 (fontified t face font-lock-comment-face) 224 234 (fontified t face font-lock-comment-face) 234 235 (fontified t face font-lock-comment-face) 235 236 (fontified t face font-lock-comment-face) 236 239 (fontified t face font-lock-comment-delimiter-face) 239 244 (fontified t face font-lock-comment-delimiter-face) 244 245 (fontified t face font-lock-comment-face) 245 246 (fontified t face font-lock-comment-face) 246 248 (fontified t face font-lock-comment-face) 248 255 (fontified t face font-lock-comment-face) 255 264 (fontified t face font-lock-comment-face) 264 265 (fontified t face font-lock-comment-face) 265 267 (fontified t face font-lock-comment-face) 267 271 (fontified t face font-lock-comment-face) 271 272 (fontified t face font-lock-comment-face) 272 273 (fontified t face font-lock-comment-face) 273 276 (fontified t face font-lock-comment-delimiter-face) 276 281 (fontified t face font-lock-comment-delimiter-face) 281 282 (fontified t face font-lock-comment-face) 282 286 (fontified t face font-lock-comment-face) 286 287 (fontified t face font-lock-comment-face) 287 288 (fontified t face font-lock-comment-face) 288 294 (fontified t face font-lock-comment-face) 294 303 (fontified t face font-lock-comment-face) 303 328 (fontified t face font-lock-comment-face) 328 330 (fontified t face font-lock-comment-face) 330 332 (fontified t face font-lock-comment-face) 332 333 (fontified t face font-lock-comment-face) 333 334 (fontified t face font-lock-comment-face) 334 335 (fontified t face font-lock-comment-face) 335 336 (fontified t face font-lock-comment-face) 336 337 (fontified t face font-lock-comment-face) 337 340 (fontified t face font-lock-comment-delimiter-face) 340 344 (fontified t face font-lock-comment-delimiter-face) 344 352 (fontified t face font-lock-comment-face) 352 353 (rear-nonsticky t fontified t face font-lock-comment-face) 353 354 (rear-nonsticky t fontified t face font-lock-comment-face)) . 1815) (undo-tree-id1176 . -354) (undo-tree-id1177 . -59) (undo-tree-id1178 . -54) (undo-tree-id1179 . -3) (undo-tree-id1180 . -354) (undo-tree-id1181 . -354)) nil (25295 1057 485369 0) 0 nil])
([nil nil ((566 . 571)) nil (25295 1057 485365 0) 0 nil])
([nil nil ((571 . 573)) nil (25295 1057 485364 0) 0 nil])
([nil nil ((572 . 579)) nil (25295 1057 485364 0) 0 nil])
([nil nil ((579 . 581)) nil (25295 1057 485363 0) 0 nil])
([nil nil ((580 . 582)) nil (25295 1057 485362 0) 0 nil])
([nil nil ((582 . 585)) nil (25295 1057 485362 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-function-name-face)) . -584) (undo-tree-id1175 . -1) 585) nil (25295 1057 485361 0) 0 nil])
([nil nil ((584 . 605)) nil (25295 1057 485353 0) 0 nil])
([nil nil ((605 . 610)) nil (25295 1057 485353 0) 0 nil])
([nil nil ((611 . 618)) nil (25295 1057 485352 0) 0 nil])
([nil nil ((618 . 620)) nil (25295 1057 485351 0) 0 nil])
([nil nil ((619 . 636)) nil (25295 1057 485350 0) 0 nil])
([nil nil ((636 . 646)) nil (25295 1076 553442 0) 0 nil])
([nil nil ((1242 . 1248) (t 25295 1057 0 0)) nil (25295 1083 472952 0) 0 nil] [nil nil ((1033 . 1040) (#("	    " 0 1 (fontified nil face font-lock-comment-face) 1 5 (fontified nil)) . -960) (undo-tree-id1185 . -5) (undo-tree-id1186 . -5) (960 . 961) (#("	" 0 1 (fontified nil)) . 960) (953 . 960) (1030 . 1031) (t 25295 1057 0 0)) ((#("
" 0 1 (fontified nil)) . 1030) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . 1) (undo-tree-id1190 . -1) (#("       " 0 7 (fontified nil)) . 953) (960 . 961) (#("	" 0 1 (fontified nil face font-lock-comment-face)) . 960) (960 . 965) (#("       " 0 7 (fontified t)) . 1033) (undo-tree-id1191 . -7) (undo-tree-id1192 . -7)) (25295 1076 552656 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1313 . 1314) (nil fontified nil 1313 . 1314) (nil fontified nil 1304 . 1313) (nil fontified nil 1303 . 1304) (nil fontified nil 1302 . 1303) (nil fontified nil 1287 . 1302) (nil fontified nil 1286 . 1287) (nil fontified nil 1285 . 1286) (nil fontified nil 1284 . 1285) (nil fontified nil 1255 . 1284) (nil fontified nil 1254 . 1255) (nil fontified nil 1253 . 1254) (nil fontified nil 1250 . 1253) (nil fontified nil 1249 . 1250) (nil fontified nil 1248 . 1249) (1248 . 1314)) nil (25295 1083 472946 0) 0 nil])
nil
([nil nil ((#("w" 0 1 (fontified t)) . -1294) (undo-tree-id1260 . -1) (#("i" 0 1 (fontified t)) . -1295) (undo-tree-id1261 . -1) (#("t" 0 1 (fontified t)) . -1296) (undo-tree-id1262 . -1) (#("h" 0 1 (fontified t)) . -1297) (undo-tree-id1263 . -1) (#("d" 0 1 (fontified t)) . -1298) (undo-tree-id1264 . -1) (#("r" 0 1 (fontified t)) . -1299) (undo-tree-id1265 . -1) (#("a" 0 1 (fontified t)) . -1300) (undo-tree-id1266 . -1) (#("w" 0 1 (fontified t)) . -1301) (undo-tree-id1267 . -1) 1302 (t 25295 1083 0 0)) nil (25295 1111 34868 0) 0 nil])
([nil nil ((1294 . 1304)) nil (25295 1111 34860 0) 0 nil])
([nil nil ((1294 . 1311) (#("additional" 0 10 (fontified t)) . -1294) (undo-tree-id1259 . -10) 1304) nil (25295 1111 34859 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1314) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (#("i" 0 1 (fontified t)) . -1315) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (#("t" 0 1 (fontified t)) . -1316) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (#("h" 0 1 (fontified t)) . -1317) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (#("d" 0 1 (fontified t)) . -1318) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (#("r" 0 1 (fontified t)) . -1319) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (#("a" 0 1 (fontified t)) . -1320) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (#("w" 0 1 (fontified t)) . -1321) (undo-tree-id1258 . -1) 1322) nil (25295 1111 34854 0) 0 nil])
([nil nil ((1314 . 1315)) nil (25295 1111 34825 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1313) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (#("a" 0 1 (fontified t)) . -1314) (undo-tree-id1220 . -1) (undo-tree-id1221 . 1) (undo-tree-id1222 . -1) 1315) nil (25295 1111 34823 0) 0 nil])
([nil nil ((1313 . 1317)) nil (25295 1111 34812 0) 0 nil])
([nil nil ((1314 . 1331) (#("add" 0 3 (fontified t)) . -1314) (undo-tree-id1201 . -3) (undo-tree-id1202 . 3) (undo-tree-id1203 . -1) (undo-tree-id1204 . 3) (undo-tree-id1205 . 2) (undo-tree-id1206 . -2) (undo-tree-id1207 . 1) (undo-tree-id1208 . -3) 1317) nil (25295 1111 34810 0) 0 nil])
([nil nil ((1314 . 1320) (#(" " 0 1 (fontified nil)) . 1313) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . 1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (1314 . 1315)) nil (25295 1111 34799 0) 0 nil])
([nil nil ((1579 . 1580) (t 25295 1111 0 0)) nil (25295 1335 336367 0) 0 nil])
([nil nil ((1579 . 1581)) nil (25295 1335 336366 0) 0 nil])
([nil nil ((1580 . 1588)) nil (25295 1335 336365 0) 0 nil])
([nil nil ((1588 . 1590)) nil (25295 1335 336364 0) 0 nil])
([nil nil ((1589 . 1603)) nil (25295 1335 336363 0) 0 nil])
([nil nil ((1603 . 1624)) nil (25295 1335 336363 0) 0 nil])
([nil nil ((1624 . 1630)) nil (25295 1335 336362 0) 0 nil])
([nil nil ((1632 . 1633)) nil (25295 1335 336361 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1685 . 1686) (nil fontified nil 1685 . 1686) (nil fontified nil 1684 . 1685) (nil fontified nil 1642 . 1684) (nil fontified nil 1634 . 1642) (nil fontified nil 1633 . 1634) (1633 . 1686)) nil (25295 1335 336359 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-string-face)) . -1663) (undo-tree-id1847 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1664) (undo-tree-id1848 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1665) (undo-tree-id1849 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -1666) (undo-tree-id1850 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1667) (undo-tree-id1851 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1668) (undo-tree-id1852 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -1669) (undo-tree-id1853 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -1670) (undo-tree-id1854 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1671) (undo-tree-id1855 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1672) (undo-tree-id1856 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1673) (undo-tree-id1857 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1674) (undo-tree-id1858 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -1675) (undo-tree-id1859 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -1676) (undo-tree-id1860 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -1677) (undo-tree-id1861 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -1678) (undo-tree-id1862 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1679) (undo-tree-id1863 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1680) (undo-tree-id1864 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -1681) (undo-tree-id1865 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1682) (undo-tree-id1866 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -1683) (undo-tree-id1867 . -1) 1684) nil (25295 1335 336354 0) 0 nil])
([nil nil ((#("A" 0 1 (fontified t face font-lock-string-face)) . -1643) (undo-tree-id1827 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1644) (undo-tree-id1828 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1645) (undo-tree-id1829 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1646) (undo-tree-id1830 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -1647) (undo-tree-id1831 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1648) (undo-tree-id1832 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1649) (undo-tree-id1833 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -1650) (undo-tree-id1834 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1651) (undo-tree-id1835 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -1652) (undo-tree-id1836 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1653) (undo-tree-id1837 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1654) (undo-tree-id1838 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1655) (undo-tree-id1839 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1656) (undo-tree-id1840 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1657) (undo-tree-id1841 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -1658) (undo-tree-id1842 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1659) (undo-tree-id1843 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1660) (undo-tree-id1844 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -1661) (undo-tree-id1845 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1662) (undo-tree-id1846 . -1) 1663) nil (25295 1335 336333 0) 0 nil])
([nil nil ((1643 . 1655)) nil (25295 1335 336315 0) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-string-face)) . -1643) (undo-tree-id1815 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1644) (undo-tree-id1816 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1645) (undo-tree-id1817 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1646) (undo-tree-id1818 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1647) (undo-tree-id1819 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -1648) (undo-tree-id1820 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1649) (undo-tree-id1821 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1650) (undo-tree-id1822 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1651) (undo-tree-id1823 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1652) (undo-tree-id1824 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1653) (undo-tree-id1825 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1654) (undo-tree-id1826 . -1) 1655) nil (25295 1335 336312 0) 0 nil])
([nil nil ((1643 . 1656)) nil (25295 1335 336301 0) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-string-face)) . -1643) (undo-tree-id1802 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1644) (undo-tree-id1803 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -1645) (undo-tree-id1804 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1646) (undo-tree-id1805 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -1647) (undo-tree-id1806 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1648) (undo-tree-id1807 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -1649) (undo-tree-id1808 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1650) (undo-tree-id1809 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -1651) (undo-tree-id1810 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1652) (undo-tree-id1811 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1653) (undo-tree-id1812 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1654) (undo-tree-id1813 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1655) (undo-tree-id1814 . -1) 1656) nil (25295 1335 336298 0) 0 nil])
([nil nil ((1643 . 1646)) nil (25295 1335 336257 0) 0 nil])
([nil nil ((1646 . 1667)) nil (25295 1335 336256 0) 0 nil])
([nil nil ((1667 . 1676)) nil (25295 1335 336255 0) 0 nil])
([nil nil ((1676 . 1697)) nil (25295 1335 336255 0) 0 nil])
([nil nil ((1697 . 1716)) nil (25295 1335 336254 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -1715) (undo-tree-id1801 . -1) 1716) nil (25295 1335 336253 0) 0 nil])
([nil nil ((1715 . 1716)) nil (25295 1335 336251 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1708) (undo-tree-id1793 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1709) (undo-tree-id1794 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -1710) (undo-tree-id1795 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -1711) (undo-tree-id1796 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1712) (undo-tree-id1797 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -1713) (undo-tree-id1798 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1714) (undo-tree-id1799 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1715) (undo-tree-id1800 . -1) 1716) nil (25295 1335 336249 0) 0 nil])
([nil nil ((1708 . 1716)) nil (25295 1335 336241 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -1695) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1696) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1697) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1698) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -1699) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -1700) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1701) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -1702) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -1703) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1704) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1705) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -1706) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1707) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1708) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -1709) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1710) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1711) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1712) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1713) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -1714) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1715) (undo-tree-id1790 . -1) (undo-tree-id1791 . 1) (undo-tree-id1792 . -1) 1716) nil (25295 1335 336225 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1686) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -1687) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1688) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1689) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1690) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -1691) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1692) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1693) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1694) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) 1695) nil (25295 1335 336030 0) 0 nil])
([nil nil ((1686 . 1690)) nil (25295 1335 335855 0) 0 nil])
([nil nil ((1690 . 1706)) nil (25295 1335 335850 0) 0 nil])
([nil nil ((1708 . 1710) (t 25295 1335 0 0)) nil (25295 1352 639800 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1748 . 1749) (nil fontified nil 1748 . 1749) (nil fontified nil 1745 . 1748) (nil fontified nil 1744 . 1745) (nil fontified nil 1712 . 1744) (nil fontified nil 1711 . 1712) (nil fontified nil 1710 . 1711) (1710 . 1749)) nil (25295 1352 640057 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1736) (undo-tree-id1921 . -1) (undo-tree-id1922 . 1) (undo-tree-id1923 . 1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (#("i" 0 1 (fontified t)) . -1737) (undo-tree-id1939 . -1) (undo-tree-id1940 . 1) (undo-tree-id1941 . 1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (#("t" 0 1 (fontified t)) . -1738) (undo-tree-id1955 . -1) (undo-tree-id1956 . 1) (undo-tree-id1957 . 1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (#("h" 0 1 (fontified t)) . -1739) (undo-tree-id1969 . -1) (undo-tree-id1970 . 1) (undo-tree-id1971 . 1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (#("d" 0 1 (fontified t)) . -1740) (undo-tree-id1981 . -1) (undo-tree-id1982 . 1) (undo-tree-id1983 . 1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (#("r" 0 1 (fontified t)) . -1741) (undo-tree-id1991 . -1) (undo-tree-id1992 . 1) (undo-tree-id1993 . 1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (#("a" 0 1 (fontified t)) . -1742) (undo-tree-id1999 . -1) (undo-tree-id2000 . 1) (undo-tree-id2001 . 1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (#("w" 0 1 (fontified t)) . -1743) (undo-tree-id2005 . -1) (undo-tree-id2006 . 1) (undo-tree-id2007 . 1) (undo-tree-id2008 . -1) 1744) nil (25295 1372 607177 0) 0 nil] [nil nil ((#("p" 0 1 (fontified t)) . -1724) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (#("e" 0 1 (fontified t)) . -1725) (undo-tree-id1870 . -1) (#("n" 0 1 (fontified t)) . -1726) (undo-tree-id1871 . -1) (#("-" 0 1 (fontified t)) . -1727) (undo-tree-id1872 . -1) (#("s" 0 1 (fontified t)) . -1728) (undo-tree-id1873 . -1) (#("e" 0 1 (fontified t)) . -1729) (undo-tree-id1874 . -1) (#("s" 0 1 (fontified t)) . -1730) (undo-tree-id1875 . -1) (#("a" 0 1 (fontified t)) . -1731) (undo-tree-id1876 . -1) (#("m" 0 1 (fontified t)) . -1732) (undo-tree-id1877 . -1) (#("e" 0 1 (fontified t)) . -1733) (undo-tree-id1878 . -1) 1734) ((1724 . 1734)) (25295 1352 639790 0) 0 nil])
([nil nil ((1736 . 1745)) nil (25295 1372 607113 0) 0 nil])
nil
([nil nil ((1736 . 1753) (#("additiona" 0 9 (fontified t)) . -1736) (undo-tree-id1901 . -9) (undo-tree-id1902 . 9) (undo-tree-id1903 . -1) (undo-tree-id1904 . 9) (undo-tree-id1905 . 8) (undo-tree-id1906 . -2) (undo-tree-id1907 . 7) (undo-tree-id1908 . -3) (undo-tree-id1909 . 6) (undo-tree-id1910 . -4) (undo-tree-id1911 . 5) (undo-tree-id1912 . -5) (undo-tree-id1913 . 4) (undo-tree-id1914 . -6) (undo-tree-id1915 . 3) (undo-tree-id1916 . -7) (undo-tree-id1917 . 2) (undo-tree-id1918 . -8) (undo-tree-id1919 . 1) (undo-tree-id1920 . -9) 1745) nil (25295 1372 607111 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1755) (undo-tree-id1891 . -1) (undo-tree-id1892 . 1) (undo-tree-id1893 . 1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (#("0" 0 1 (fontified t)) . -1756) (undo-tree-id1897 . -1) (undo-tree-id1898 . 1) (undo-tree-id1899 . 1) (undo-tree-id1900 . -1) 1757) nil (25295 1372 607096 0) 0 nil])
([nil nil ((1755 . 1761)) nil (25295 1372 607087 0) 0 nil])
([nil nil ((1756 . 1770) (#("wrong" 0 5 (fontified t)) . -1756) (undo-tree-id1879 . -5) (undo-tree-id1880 . 5) (undo-tree-id1881 . -1) (undo-tree-id1882 . 5) (undo-tree-id1883 . 4) (undo-tree-id1884 . -2) (undo-tree-id1885 . 3) (undo-tree-id1886 . -3) (undo-tree-id1887 . 2) (undo-tree-id1888 . -4) (undo-tree-id1889 . 1) (undo-tree-id1890 . -5) 1761) nil (25295 1372 607082 0) 0 nil])
([nil nil ((1771 . 1772) (t 25295 1372 0 0)) nil (25295 1384 564698 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1807 . 1808) (nil fontified nil 1807 . 1808) (nil fontified nil 1804 . 1807) (nil fontified nil 1798 . 1804) (nil fontified nil 1773 . 1798) (nil fontified nil 1772 . 1773) (1772 . 1808)) nil (25295 1384 564691 0) 0 nil])
([nil nil ((1771 . 1772) (t 25295 1384 0 0)) nil (25295 1412 435320 0) 0 nil])
([nil nil ((#("(peter-acc 'wrong-password 'balance)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 26 (fontified t) 26 32 (fontified t) 32 35 (fontified t) 35 36 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 1773) (undo-tree-id2009 . -36) (undo-tree-id2010 . 36) (undo-tree-id2011 . 36) (undo-tree-id2012 . 36) (undo-tree-id2013 . 36) (undo-tree-id2014 . 36) (undo-tree-id2015 . -36) (undo-tree-id2016 . 36) (undo-tree-id2017 . 36) (undo-tree-id2018 . -36) (t 25295 1412 0 0)) nil (25295 1421 215096 0) 0 nil])
([nil nil ((1706 . 1708) (t 25295 1421 0 0)) nil (25295 1456 869044 0) 0 nil])
([nil nil ((36 . 38) (t 25295 1456 0 0)) nil (25295 1542 893315 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1367 . 1368) (nil fontified nil 1367 . 1368) (nil fontified nil 1355 . 1367) (nil fontified nil 1354 . 1355) (nil fontified nil 1353 . 1354) (nil fontified nil 1352 . 1353) (nil fontified nil 1351 . 1352) (nil fontified nil 1350 . 1351) (nil fontified nil 1348 . 1350) (nil fontified nil 1316 . 1348) (nil fontified nil 1315 . 1316) (nil fontified nil 1309 . 1315) (nil fontified nil 1308 . 1309) (nil fontified nil 1307 . 1308) (nil fontified nil 1303 . 1307) (nil fontified nil 1302 . 1303) (nil fontified nil 1297 . 1302) (nil fontified nil 1296 . 1297) (nil fontified nil 1295 . 1296) (nil fontified nil 1278 . 1295) (nil fontified nil 1271 . 1278) (nil fontified nil 1270 . 1271) (nil fontified nil 1269 . 1270) (nil fontified nil 1252 . 1269) (nil fontified nil 1245 . 1252) (nil fontified nil 1244 . 1245) (nil fontified nil 1243 . 1244) (nil fontified nil 1242 . 1243) (nil fontified nil 1213 . 1242) (nil fontified nil 1212 . 1213) (nil fontified nil 1211 . 1212) (nil fontified nil 1208 . 1211) (nil fontified nil 1207 . 1208) (nil fontified nil 1206 . 1207) (nil fontified nil 1201 . 1206) (nil fontified nil 1200 . 1201) (nil fontified nil 1199 . 1200) (nil fontified nil 1191 . 1199) (nil fontified nil 1190 . 1191) (nil fontified nil 1189 . 1190) (nil fontified nil 1175 . 1189) (nil fontified nil 1174 . 1175) (nil fontified nil 1173 . 1174) (nil fontified nil 1172 . 1173) (nil fontified nil 1143 . 1172) (nil fontified nil 1142 . 1143) (nil fontified nil 1141 . 1142) (nil fontified nil 1138 . 1141) (nil fontified nil 1137 . 1138) (nil fontified nil 1136 . 1137) (nil fontified nil 1131 . 1136) (nil fontified nil 1130 . 1131) (nil fontified nil 1129 . 1130) (nil fontified nil 1121 . 1129) (nil fontified nil 1120 . 1121) (nil fontified nil 1119 . 1120) (nil fontified nil 1107 . 1119) (nil fontified nil 1105 . 1107) (nil fontified nil 1104 . 1105) (nil fontified nil 1103 . 1104) (nil fontified nil 1102 . 1103) (nil fontified nil 1073 . 1102) (nil fontified nil 1072 . 1073) (nil fontified nil 1071 . 1072) (nil fontified nil 1068 . 1071) (nil fontified nil 1067 . 1068) (nil fontified nil 1066 . 1067) (nil fontified nil 1060 . 1066) (nil fontified nil 1059 . 1060) (nil fontified nil 1050 . 1059) (nil fontified nil 1049 . 1050) (nil fontified nil 1048 . 1049) (nil fontified nil 1033 . 1048) (nil fontified nil 1032 . 1033) (nil fontified nil 1031 . 1032) (nil fontified nil 1030 . 1031) (nil fontified nil 1001 . 1030) (nil fontified nil 1000 . 1001) (nil fontified nil 999 . 1000) (nil fontified nil 996 . 999) (nil fontified nil 995 . 996) (nil fontified nil 994 . 995) (nil fontified nil 989 . 994) (nil fontified nil 988 . 989) (nil fontified nil 987 . 988) (nil fontified nil 986 . 987) (nil fontified nil 985 . 986) (nil fontified nil 984 . 985) (nil fontified nil 983 . 984) (nil fontified nil 964 . 983) (nil fontified nil 956 . 964) (nil fontified nil 955 . 956) (nil fontified nil 954 . 955) (nil fontified nil 953 . 954) (nil fontified nil 952 . 953) (nil fontified nil 923 . 952) (nil fontified nil 922 . 923) (nil fontified nil 918 . 922) (nil fontified nil 917 . 918) (nil fontified nil 916 . 917) (nil fontified nil 912 . 916) (nil fontified nil 911 . 912) (nil fontified nil 910 . 911) (nil fontified nil 909 . 910) (nil fontified nil 890 . 909) (nil fontified nil 889 . 890) (nil fontified nil 888 . 889) (nil fontified nil 859 . 888) (nil fontified nil 858 . 859) (nil fontified nil 854 . 858) (nil fontified nil 853 . 854) (nil fontified nil 852 . 853) (nil fontified nil 851 . 852) (nil fontified nil 850 . 851) (nil fontified nil 846 . 850) (nil fontified nil 845 . 846) (nil fontified nil 839 . 845) (nil fontified nil 838 . 839) (nil fontified nil 837 . 838) (nil fontified nil 833 . 837) (nil fontified nil 825 . 833) (nil fontified nil 824 . 825) (nil fontified nil 823 . 824) (nil fontified nil 817 . 823) (nil fontified nil 816 . 817) (nil fontified nil 812 . 816) (nil fontified nil 811 . 812) (nil fontified nil 810 . 811) (nil fontified nil 809 . 810) (nil fontified nil 808 . 809) (nil fontified nil 788 . 808) (nil fontified nil 786 . 788) (nil fontified nil 785 . 786) (nil fontified nil 782 . 785) (nil fontified nil 778 . 782) (nil fontified nil 777 . 778) (nil fontified nil 776 . 777) (nil fontified nil 775 . 776) (nil fontified nil 757 . 775) (nil fontified nil 756 . 757) (nil fontified nil 755 . 756) (nil fontified nil 753 . 755) (nil fontified nil 752 . 753) (nil fontified nil 749 . 752) (nil fontified nil 745 . 749) (nil fontified nil 744 . 745) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 730 . 742) (nil fontified nil 729 . 730) (nil fontified nil 728 . 729) (nil fontified nil 727 . 728) (nil fontified nil 722 . 727) (nil fontified nil 721 . 722) (nil fontified nil 719 . 721) (nil fontified nil 718 . 719) (nil fontified nil 715 . 718) (nil fontified nil 711 . 715) (nil fontified nil 710 . 711) (nil fontified nil 709 . 710) (nil fontified nil 696 . 709) (nil fontified nil 695 . 696) (nil fontified nil 693 . 695) (nil fontified nil 692 . 693) (nil fontified nil 689 . 692) (nil fontified nil 685 . 689) (nil fontified nil 684 . 685) (nil fontified nil 683 . 684) (nil fontified nil 681 . 683) (nil fontified nil 680 . 681) (nil fontified nil 679 . 680) (nil fontified nil 661 . 679) (nil fontified nil 660 . 661) (nil fontified nil 659 . 660) (nil fontified nil 657 . 659) (nil fontified nil 656 . 657) (nil fontified nil 655 . 656) (nil fontified nil 653 . 655) (nil fontified nil 652 . 653) (nil fontified nil 650 . 652) (nil fontified nil 647 . 650) (nil fontified nil 643 . 647) (nil fontified nil 642 . 643) (nil fontified nil 641 . 642) (nil fontified nil 623 . 641) (nil fontified nil 622 . 623) (nil fontified nil 621 . 622) (nil fontified nil 615 . 621) (nil fontified nil 614 . 615) (nil fontified nil 611 . 614) (nil fontified nil 607 . 611) (nil fontified nil 606 . 607) (nil fontified nil 605 . 606) (nil fontified nil 604 . 605) (nil fontified nil 577 . 604) (nil fontified nil 576 . 577) (nil fontified nil 570 . 576) (nil fontified nil 569 . 570) (nil fontified nil 568 . 569) (nil fontified nil 555 . 568) (nil fontified nil 538 . 555) (nil fontified nil 537 . 538) (nil fontified nil 536 . 537) (nil fontified nil 530 . 536) (nil fontified nil 529 . 530) (nil fontified nil 525 . 529) (nil fontified nil 524 . 525) (nil fontified nil 523 . 524) (nil fontified nil 507 . 523) (nil fontified nil 506 . 507) (nil fontified nil 505 . 506) (nil fontified nil 492 . 505) (nil fontified nil 491 . 492) (nil fontified nil 490 . 491) (nil fontified nil 484 . 490) (nil fontified nil 483 . 484) (nil fontified nil 479 . 483) (nil fontified nil 478 . 479) (nil fontified nil 477 . 478) (nil fontified nil 463 . 477) (nil fontified nil 462 . 463) (nil fontified nil 461 . 462) (nil fontified nil 445 . 461) (nil fontified nil 444 . 445) (nil fontified nil 435 . 444) (nil fontified nil 431 . 435) (nil fontified nil 430 . 431) (nil fontified nil 423 . 430) (nil fontified nil 422 . 423) (nil fontified nil 415 . 422) (nil fontified nil 408 . 415) (nil fontified nil 407 . 408) (nil fontified nil 406 . 407) (nil fontified nil 400 . 406) (nil fontified nil 399 . 400) (nil fontified nil 394 . 399) (nil fontified nil 393 . 394) (nil fontified nil 392 . 393) (nil fontified nil 374 . 392) (nil fontified nil 370 . 374) (nil fontified nil 369 . 370) (nil fontified nil 358 . 369) (nil fontified nil 357 . 358) (nil fontified nil 356 . 357) (nil fontified nil 340 . 356) (nil fontified nil 339 . 340) (nil fontified nil 330 . 339) (nil fontified nil 326 . 330) (nil fontified nil 325 . 326) (nil fontified nil 324 . 325) (nil fontified nil 319 . 324) (nil fontified nil 318 . 319) (nil fontified nil 314 . 318) (nil fontified nil 313 . 314) (nil fontified nil 296 . 313) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 292 . 294) (nil fontified nil 291 . 292) (nil fontified nil 284 . 291) (nil fontified nil 283 . 284) (nil fontified nil 276 . 283) (nil fontified nil 268 . 276) (nil fontified nil 267 . 268) (nil fontified nil 266 . 267) (nil fontified nil 260 . 266) (nil fontified nil 259 . 260) (nil fontified nil 255 . 259) (nil fontified nil 254 . 255) (nil fontified nil 253 . 254) (nil fontified nil 252 . 253) (nil fontified nil 251 . 252) (nil fontified nil 250 . 251) (nil fontified nil 248 . 250) (nil fontified nil 247 . 248) (nil fontified nil 234 . 247) (nil fontified nil 233 . 234) (nil fontified nil 215 . 233) (nil fontified nil 214 . 215) (nil fontified nil 213 . 214) (nil fontified nil 209 . 213) (nil fontified nil 208 . 209) (nil fontified nil 207 . 208) (nil fontified nil 206 . 207) (nil fontified nil 205 . 206) (nil fontified nil 200 . 205) (nil fontified nil 199 . 200) (nil fontified nil 197 . 199) (nil fontified nil 196 . 197) (nil fontified nil 183 . 196) (nil fontified nil 182 . 183) (nil fontified nil 178 . 182) (nil fontified nil 177 . 178) (nil fontified nil 176 . 177) (nil fontified nil 175 . 176) (nil fontified nil 174 . 175) (nil fontified nil 173 . 174) (nil fontified nil 168 . 173) (nil fontified nil 167 . 168) (nil fontified nil 166 . 167) (nil fontified nil 151 . 166) (nil fontified nil 150 . 151) (nil fontified nil 149 . 150) (nil fontified nil 148 . 149) (nil fontified nil 144 . 148) (nil fontified nil 143 . 144) (nil fontified nil 137 . 143) (nil fontified nil 136 . 137) (nil fontified nil 135 . 136) (nil fontified nil 123 . 135) (nil fontified nil 106 . 123) (nil fontified nil 105 . 106) (nil fontified nil 104 . 105) (nil fontified nil 98 . 104) (nil fontified nil 97 . 98) (nil fontified nil 93 . 97) (nil fontified nil 92 . 93) (nil fontified nil 91 . 92) (nil fontified nil 90 . 91) (nil fontified nil 89 . 90) (nil fontified nil 76 . 89) (nil fontified nil 75 . 76) (nil fontified nil 65 . 75) (nil fontified nil 64 . 65) (nil fontified nil 63 . 64) (nil fontified nil 62 . 63) (nil fontified nil 61 . 62) (nil fontified nil 60 . 61) (nil fontified nil 48 . 60) (nil fontified nil 47 . 48) (nil fontified nil 45 . 47) (nil fontified nil 44 . 45) (nil fontified nil 43 . 44) (nil fontified nil 42 . 43) (nil fontified nil 39 . 42) (nil fontified nil 38 . 39) (38 . 1368)) nil (25295 1543 786171 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -93) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) 94) nil (25295 1650 143981 0) 0 nil] [nil nil ((#("dispatch" 0 8 (fontified t)) . -1359) (undo-tree-id2029 . -8) 1367) ((1359 . 1367)) (25295 1543 363795 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 93)) nil (25295 1650 143978 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -92) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) 93) ((92 . 93)) (25295 1542 893490 0) 0 nil])
([nil nil ((#("(define (dispatch p m)
      (cond ;((not (correct-password? passwords p)) incorrect-password)
	    ((not (correct-password? passwords p)) (display \"Incorrect Password\\n\"))
	    ((and (correct-password? passwords p) (eq? m 'withdraw)) withdraw)
	    ((and (correct-password? passwords p) (eq? m 'deposit)) deposit)
	    ((and (correct-password? passwords p) (eq? m 'balance)) balance)
	    ((and (correct-password? passwords p) (eq? m 'additional-access))
	     additional-access)
	    (else (error \"Unknown request -- MAKE-ACCOUNT\" m))))" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 17 (fontified t face font-lock-function-name-face) 17 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 23 (fontified t) 23 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-3-face)) 30 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 36 (fontified t face font-lock-comment-delimiter-face) 36 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 42 (fontified t face font-lock-comment-face) 42 43 (fontified t face font-lock-comment-face) 43 72 (fontified t face font-lock-comment-face) 72 73 (fontified t face font-lock-comment-face) 73 74 (fontified t face font-lock-comment-face) 74 93 (fontified t face font-lock-comment-face) 93 94 (fontified t face font-lock-comment-face) 94 95 (fontified t face font-lock-comment-face) 95 96 (fontified t) 96 100 (fontified t) 100 101 (fontified t face (rainbow-delimiters-depth-4-face)) 101 102 (fontified t face (rainbow-delimiters-depth-5-face)) 102 106 (fontified t) 106 107 (fontified t face (rainbow-delimiters-depth-6-face)) 107 136 (fontified t) 136 137 (fontified t face (rainbow-delimiters-depth-6-face)) 137 138 (fontified t face (rainbow-delimiters-depth-5-face)) 138 139 (fontified t) 139 140 (fontified t face (rainbow-delimiters-depth-5-face)) 140 148 (fontified t) 148 167 (fontified t face font-lock-string-face) 167 168 (fontified t face font-lock-string-face) 168 169 (fontified t face font-lock-string-face) 169 170 (fontified t face font-lock-string-face) 170 171 (fontified t face (rainbow-delimiters-depth-5-face)) 171 172 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face)) 172 173 (fontified t) 173 178 (fontified t) 178 179 (fontified t face (rainbow-delimiters-depth-4-face)) 179 180 (fontified t face (rainbow-delimiters-depth-5-face)) 180 183 (fontified t face font-lock-keyword-face) 183 184 (fontified t) 184 185 (fontified t face (rainbow-delimiters-depth-6-face)) 185 214 (fontified t) 214 215 (fontified t face (rainbow-delimiters-depth-6-face)) 215 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-6-face)) 217 232 (fontified t) 232 233 (fontified t face (rainbow-delimiters-depth-6-face)) 233 234 (fontified t face (rainbow-delimiters-depth-5-face)) 234 243 (fontified t) 243 244 (fontified t face (rainbow-delimiters-depth-4-face)) 244 250 (fontified t) 250 251 (fontified t face (rainbow-delimiters-depth-4-face)) 251 252 (fontified t face (rainbow-delimiters-depth-5-face)) 252 254 (fontified t face font-lock-keyword-face) 254 255 (fontified t face font-lock-keyword-face) 255 256 (fontified t) 256 257 (fontified t face (rainbow-delimiters-depth-6-face)) 257 286 (fontified t) 286 287 (fontified t face (rainbow-delimiters-depth-6-face)) 287 288 (fontified t) 288 289 (fontified t face (rainbow-delimiters-depth-6-face)) 289 291 (fontified t) 291 303 (fontified t) 303 304 (fontified t face (rainbow-delimiters-depth-6-face)) 304 305 (fontified t face (rainbow-delimiters-depth-5-face)) 305 313 (fontified t) 313 314 (fontified t face (rainbow-delimiters-depth-4-face)) 314 315 (fontified t) 315 320 (fontified t) 320 321 (fontified t face (rainbow-delimiters-depth-4-face)) 321 322 (fontified t face (rainbow-delimiters-depth-5-face)) 322 325 (fontified t face font-lock-keyword-face) 325 326 (fontified t) 326 327 (fontified t face (rainbow-delimiters-depth-6-face)) 327 356 (fontified t) 356 357 (face (rainbow-delimiters-depth-6-face) fontified t) 357 358 (fontified t) 358 359 (face (rainbow-delimiters-depth-6-face) fontified t) 359 373 (fontified t) 373 374 (face (rainbow-delimiters-depth-6-face) fontified t) 374 375 (face (rainbow-delimiters-depth-5-face) fontified t) 375 383 (fontified t) 383 384 (face (rainbow-delimiters-depth-4-face) fontified t) 384 385 (fontified t) 385 390 (fontified t) 390 391 (fontified t face (rainbow-delimiters-depth-4-face)) 391 392 (fontified t face (rainbow-delimiters-depth-5-face)) 392 395 (fontified t face font-lock-keyword-face) 395 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-6-face)) 397 426 (fontified t) 426 427 (fontified t face (rainbow-delimiters-depth-6-face)) 427 428 (fontified t) 428 429 (fontified t face (rainbow-delimiters-depth-6-face)) 429 436 (fontified t) 436 453 (fontified t) 453 454 (fontified t face (rainbow-delimiters-depth-6-face)) 454 455 (fontified t face (rainbow-delimiters-depth-5-face)) 455 462 (fontified t) 462 479 (fontified t) 479 480 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face)) 480 481 (fontified t) 481 486 (fontified t) 486 487 (fontified t face (rainbow-delimiters-depth-4-face)) 487 491 (fontified t face font-lock-keyword-face) 491 492 (fontified t) 492 493 (fontified t face (rainbow-delimiters-depth-5-face)) 493 499 (fontified t) 499 500 (fontified t face font-lock-string-face) 500 532 (fontified t face font-lock-string-face) 532 534 (fontified t) 534 535 (fontified t face (rainbow-delimiters-depth-5-face)) 535 536 (fontified t face (rainbow-delimiters-depth-4-face)) 536 537 (fontified t face (rainbow-delimiters-depth-3-face)) 537 538 (fontified t face (rainbow-delimiters-depth-2-face))) . 814) (undo-tree-id2525 . -538) (undo-tree-id2526 . -23) (undo-tree-id2527 . -538) (undo-tree-id2528 . -538) (undo-tree-id2529 . -538)) nil (25295 1650 143977 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -100) (#("	" 0 1 (fontified nil)) . -69) (69 . 70) (#("	" 0 1 (fontified nil)) . 69) (63 . 69) (92 . 93)) ((#("
" 0 1 (fontified nil)) . 92) (undo-tree-id2030 . -1) (undo-tree-id2031 . 1) (#("      " 0 6 (fontified nil)) . 63) (69 . 70) (#("	" 0 1 (fontified nil)) . 69) (69 . 70) (100 . 102)) (25295 1542 893213 0) 0 nil])
([nil nil ((#("  (define (correct-password? passwords p)
      (cond ((null? passwords) false)
	((eq? (car passwords) p) true)
	(else (correct-password? (cdr passwords) p))))
    (define (withdraw amount)
      (if (>= balance amount)
	  (begin (set! balance (- balance amount))
		 balance)
	  \"Insuffient funds\"))
    (define (deposit amount)
      (set! balance (+ balance amount))
      balance)
    (define (call-the-cops) \"Call the Cops!\")
    (define (additional-access new-password)
      (cons new-password passwords))
    ;; (define (incorrect-password)
    ;;   (if (> ((C 'how-many-calls?)) 6)
    ;; 	  (call-the-cops)
    ;; 	  (begin ((C 'increment))
    ;; 		 ((C 'how-many-calls?))
    ;; 		 \"Incorrect Password\")))" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 28 (fontified t face font-lock-function-name-face) 28 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-3-face)) 41 42 (fontified t) 42 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-3-face)) 49 53 (fontified t face font-lock-keyword-face) 53 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-4-face)) 55 56 (fontified t face (rainbow-delimiters-depth-5-face)) 56 71 (fontified t) 71 72 (fontified t face (rainbow-delimiters-depth-5-face)) 72 73 (fontified t) 73 78 (fontified t) 78 79 (fontified t face (rainbow-delimiters-depth-4-face)) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t face (rainbow-delimiters-depth-4-face)) 82 83 (fontified t face (rainbow-delimiters-depth-5-face)) 83 87 (fontified t) 87 88 (fontified t face (rainbow-delimiters-depth-6-face)) 88 101 (fontified t) 101 102 (fontified t face (rainbow-delimiters-depth-6-face)) 102 104 (fontified t) 104 105 (fontified t face (rainbow-delimiters-depth-5-face)) 105 110 (fontified t) 110 111 (fontified t face (rainbow-delimiters-depth-4-face)) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t face (rainbow-delimiters-depth-4-face)) 114 118 (fontified t face font-lock-keyword-face) 118 119 (fontified t) 119 120 (fontified t face (rainbow-delimiters-depth-5-face)) 120 138 (fontified t) 138 139 (fontified t face (rainbow-delimiters-depth-6-face)) 139 152 (fontified t) 152 153 (fontified t face (rainbow-delimiters-depth-6-face)) 153 155 (fontified t) 155 156 (fontified t face (rainbow-delimiters-depth-5-face)) 156 157 (fontified t face (rainbow-delimiters-depth-4-face)) 157 158 (fontified t face (rainbow-delimiters-depth-3-face)) 158 159 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 159 160 (fontified t) 160 164 (fontified t) 164 165 (fontified t face (rainbow-delimiters-depth-2-face)) 165 171 (fontified t face font-lock-keyword-face) 171 172 (fontified t) 172 173 (fontified t face (rainbow-delimiters-depth-3-face)) 173 181 (fontified t face font-lock-function-name-face) 181 188 (fontified t) 188 189 (fontified t face (rainbow-delimiters-depth-3-face)) 189 196 (fontified t) 196 197 (fontified t face (rainbow-delimiters-depth-3-face)) 197 199 (fontified t face font-lock-keyword-face) 199 200 (fontified t) 200 201 (fontified t face (rainbow-delimiters-depth-4-face)) 201 218 (fontified t) 218 219 (fontified t face (rainbow-delimiters-depth-4-face)) 219 223 (fontified t) 223 224 (fontified t face (rainbow-delimiters-depth-4-face)) 224 229 (fontified t face font-lock-keyword-face) 229 230 (fontified t) 230 231 (fontified t face (rainbow-delimiters-depth-5-face)) 231 235 (fontified t face font-lock-keyword-face) 235 244 (fontified t) 244 245 (fontified t face (rainbow-delimiters-depth-6-face)) 245 261 (fontified t) 261 262 (fontified t face (rainbow-delimiters-depth-6-face)) 262 263 (fontified t face (rainbow-delimiters-depth-5-face)) 263 274 (fontified t) 274 275 (fontified t face (rainbow-delimiters-depth-4-face)) 275 279 (fontified t) 279 297 (fontified t face font-lock-string-face) 297 298 (fontified t face (rainbow-delimiters-depth-3-face)) 298 299 (fontified t face (rainbow-delimiters-depth-2-face)) 299 304 (fontified t) 304 305 (fontified t face (rainbow-delimiters-depth-2-face)) 305 311 (fontified t face font-lock-keyword-face) 311 312 (fontified t) 312 313 (fontified t face (rainbow-delimiters-depth-3-face)) 313 320 (fontified t face font-lock-function-name-face) 320 327 (fontified t) 327 328 (fontified t face (rainbow-delimiters-depth-3-face)) 328 335 (fontified t) 335 336 (fontified t face (rainbow-delimiters-depth-3-face)) 336 340 (fontified t face font-lock-keyword-face) 340 349 (fontified t) 349 350 (fontified t face (rainbow-delimiters-depth-4-face)) 350 366 (fontified t) 366 367 (fontified t face (rainbow-delimiters-depth-4-face)) 367 368 (fontified t face (rainbow-delimiters-depth-3-face)) 368 382 (fontified t) 382 383 (fontified t face (rainbow-delimiters-depth-2-face)) 383 384 (fontified t) 384 388 (fontified t) 388 389 (fontified t face (rainbow-delimiters-depth-2-face)) 389 395 (fontified t face font-lock-keyword-face) 395 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-3-face)) 397 410 (fontified t face font-lock-function-name-face) 410 411 (fontified t face (rainbow-delimiters-depth-3-face)) 411 412 (fontified t) 412 428 (fontified t face font-lock-string-face) 428 429 (fontified t face (rainbow-delimiters-depth-2-face)) 429 430 (fontified t) 430 434 (fontified t) 434 435 (fontified t face (rainbow-delimiters-depth-2-face)) 435 441 (fontified t face font-lock-keyword-face) 441 442 (fontified t) 442 443 (fontified t face (rainbow-delimiters-depth-3-face)) 443 460 (fontified t face font-lock-function-name-face) 460 473 (fontified t) 473 474 (fontified t face (rainbow-delimiters-depth-3-face)) 474 475 (fontified t) 475 481 (fontified t) 481 482 (fontified t face (rainbow-delimiters-depth-3-face)) 482 509 (fontified t) 509 510 (fontified t face (rainbow-delimiters-depth-3-face)) 510 511 (fontified t face (rainbow-delimiters-depth-2-face)) 511 512 (fontified t) 512 516 (fontified t) 516 519 (fontified t face font-lock-comment-delimiter-face) 519 520 (fontified t face font-lock-comment-face) 520 526 (fontified t face font-lock-comment-face) 526 527 (fontified t face font-lock-comment-face) 527 528 (fontified t face font-lock-comment-face) 528 542 (fontified t face font-lock-comment-face) 542 546 (face font-lock-comment-face fontified t) 546 547 (face font-lock-comment-face fontified t) 547 548 (face font-lock-comment-face fontified t) 548 552 (fontified t) 552 555 (fontified t face font-lock-comment-delimiter-face) 555 557 (fontified t face font-lock-comment-delimiter-face) 557 558 (fontified t face font-lock-comment-face) 558 560 (fontified t face font-lock-comment-face) 560 561 (fontified t face font-lock-comment-face) 561 562 (fontified t face font-lock-comment-face) 562 564 (fontified t face font-lock-comment-face) 564 565 (fontified t face font-lock-comment-face) 565 566 (fontified t face font-lock-comment-face) 566 584 (fontified t face font-lock-comment-face) 584 585 (fontified t face font-lock-comment-face) 585 586 (fontified t face font-lock-comment-face) 586 588 (fontified t face font-lock-comment-face) 588 589 (fontified t face font-lock-comment-face) 589 590 (fontified t face font-lock-comment-face) 590 594 (fontified t) 594 597 (fontified t face font-lock-comment-delimiter-face) 597 598 (fontified t face font-lock-comment-delimiter-face) 598 600 (fontified t face font-lock-comment-delimiter-face) 600 601 (fontified t face font-lock-comment-face) 601 614 (fontified t face font-lock-comment-face) 614 615 (fontified t face font-lock-comment-face) 615 616 (fontified t face font-lock-comment-face) 616 620 (fontified t) 620 623 (fontified t face font-lock-comment-delimiter-face) 623 624 (fontified t face font-lock-comment-delimiter-face) 624 626 (fontified t face font-lock-comment-delimiter-face) 626 627 (fontified t face font-lock-comment-face) 627 632 (fontified t face font-lock-comment-face) 632 633 (fontified t face font-lock-comment-face) 633 634 (fontified t face font-lock-comment-face) 634 635 (fontified t face font-lock-comment-face) 635 647 (fontified t face font-lock-comment-face) 647 648 (fontified t face font-lock-comment-face) 648 649 (fontified t face font-lock-comment-face) 649 650 (fontified t face font-lock-comment-face) 650 654 (fontified t) 654 657 (fontified t face font-lock-comment-delimiter-face) 657 658 (fontified t face font-lock-comment-delimiter-face) 658 660 (fontified t face font-lock-comment-delimiter-face) 660 661 (fontified t face font-lock-comment-face) 661 662 (fontified t face font-lock-comment-face) 662 680 (fontified t face font-lock-comment-face) 680 681 (fontified t face font-lock-comment-face) 681 682 (fontified t face font-lock-comment-face) 682 683 (fontified t face font-lock-comment-face) 683 687 (fontified t) 687 690 (fontified t face font-lock-comment-delimiter-face) 690 691 (fontified t face font-lock-comment-delimiter-face) 691 693 (fontified t face font-lock-comment-delimiter-face) 693 713 (fontified t face font-lock-comment-face) 713 714 (fontified t face font-lock-comment-face) 714 715 (fontified t face font-lock-comment-face) 715 716 (fontified t face font-lock-comment-face)) . 93) (undo-tree-id2522 . -716) (undo-tree-id2523 . -42) (undo-tree-id2524 . -716)) nil (25295 1650 143973 0) 0 nil])
nil
([nil nil ((#("dispatc" 0 7 (fontified t)) . 103) (undo-tree-id2501 . -7) (undo-tree-id2502 . -7) (undo-tree-id2503 . -7) (undo-tree-id2504 . -5) (undo-tree-id2505 . 3) (undo-tree-id2506 . 2) (undo-tree-id2507 . -4) (undo-tree-id2508 . 4) (undo-tree-id2509 . 3) (undo-tree-id2510 . -3) (undo-tree-id2511 . 5) (undo-tree-id2512 . 4) (undo-tree-id2513 . -2) (undo-tree-id2514 . 6) (undo-tree-id2515 . 5) (undo-tree-id2516 . -1) (undo-tree-id2517 . 7) (undo-tree-id2518 . 6) (undo-tree-id2519 . 7) (undo-tree-id2520 . 7) (undo-tree-id2521 . -7)) nil (25295 1650 143968 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -92) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (#("
" 0 1 (fontified t)) . -93) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (#(" " 0 1 (fontified t)) . -94) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (#(" " 0 1 (fontified t)) . -95) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (#(" " 0 1 (fontified t)) . -96) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (#(" " 0 1 (fontified t)) . -97) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (#("
" 0 1 (fontified t)) . -98) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (#(" " 0 1 (fontified t)) . -99) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (#(" " 0 1 (fontified t)) . -100) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (#(" " 0 1 (fontified t)) . -101) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (#(" " 0 1 (fontified t)) . -102) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (#("h" 0 1 (fontified t)) . -103) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . 1) (undo-tree-id2484 . 1) (undo-tree-id2485 . 1) (undo-tree-id2486 . 1) (undo-tree-id2487 . 1) (undo-tree-id2488 . 1) (undo-tree-id2489 . 1) (undo-tree-id2490 . 1) (undo-tree-id2491 . 1) (undo-tree-id2492 . 1) (undo-tree-id2493 . 1) (undo-tree-id2494 . 1) (undo-tree-id2495 . 1) (undo-tree-id2496 . 1) (undo-tree-id2497 . 1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) 104) nil (25295 1650 143939 0) 0 nil])
([nil nil ((98 . 100) (#("	" 0 1 (fontified nil)) . -69) (69 . 70) (#("	" 0 1 (fontified nil)) . 69) (63 . 69) (92 . 93)) nil (25295 1650 143744 0) 0 nil])
([nil nil ((#("(C (make-counter))" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 3 (fontified t) 3 4 (fontified t face (rainbow-delimiters-depth-4-face)) 4 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face)) 17 18 (fontified t face (rainbow-delimiters-depth-3-face))) . 44) (undo-tree-id2198 . -18) (undo-tree-id2199 . 18) (undo-tree-id2200 . 18) (undo-tree-id2201 . 18) (undo-tree-id2202 . 18) (undo-tree-id2203 . 18) (undo-tree-id2204 . -18)) nil (25295 1650 143742 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -44) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . 1) (undo-tree-id2145 . 1) (undo-tree-id2146 . 1) (undo-tree-id2147 . 1) (undo-tree-id2148 . 1) (undo-tree-id2149 . 1) (undo-tree-id2150 . 1) (undo-tree-id2151 . 1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (#(" " 0 1 (fontified t)) . -47) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (#(" " 0 1 (fontified t)) . -48) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (#(" " 0 1 (fontified t)) . -49) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (#(" " 0 1 (fontified t)) . -50) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) 51) nil (25295 1650 143733 0) 0 nil])
([nil nil ((651 . 658)) nil (25295 1650 143693 0) 0 nil])
([nil nil ((nil fontified nil 695 . 696) (nil fontified nil 693 . 695) (nil fontified nil 692 . 693) (nil fontified nil 691 . 692) (nil fontified nil 690 . 691) (nil fontified nil 689 . 690) (nil fontified nil 676 . 689) (nil fontified nil 675 . 676) (nil fontified nil 665 . 675) (nil fontified nil 664 . 665) (nil fontified nil 663 . 664) (nil fontified nil 662 . 663) (nil fontified nil 659 . 662) (nil fontified nil 658 . 659) (658 . 696)) nil (25295 1650 143691 0) 0 nil])
([nil nil ((#("(cons new-password passwords)" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-4-face))) . 703) (undo-tree-id2135 . -29) (undo-tree-id2136 . 29) (undo-tree-id2137 . 29) (undo-tree-id2138 . 29) (undo-tree-id2139 . -29)) nil (25295 1650 143687 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 722 . 723) (nil fontified nil 722 . 723) (nil fontified nil 695 . 722) (nil fontified nil 694 . 695) (694 . 723)) nil (25295 1650 143683 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 723) (undo-tree-id2132 . -1) (undo-tree-id2133 . 1) (undo-tree-id2134 . 1)) nil (25295 1650 143681 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -724) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . 1) (undo-tree-id2037 . 1) (undo-tree-id2038 . 1) (undo-tree-id2039 . 1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . 1) (undo-tree-id2048 . 1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (#(" " 0 1 (fontified t)) . -725) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (#(" " 0 1 (fontified t)) . -726) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (#(" " 0 1 (fontified t)) . -727) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (#(" " 0 1 (fontified t)) . -728) (undo-tree-id2099 . -1) (undo-tree-id2100 . 1) (undo-tree-id2101 . 1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (#(" " 0 1 (fontified t)) . -729) (undo-tree-id2112 . -1) (undo-tree-id2113 . 1) (undo-tree-id2114 . 1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (#(" " 0 1 (fontified t)) . -730) (undo-tree-id2123 . -1) (undo-tree-id2124 . 1) (undo-tree-id2125 . 1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) 731) nil (25295 1650 143671 0) 0 nil])
([nil nil ((693 . 694) (#(" " 0 1 (fontified t)) . 693) (undo-tree-id2032 . -1) (undo-tree-id2033 . 1)) nil (25295 1757 207621 0) 0 nil])
([nil nil ((#("(cons new-password passwords)" 0 1 (fontified t face (rainbow-delimiters-depth-5-face)) 1 28 (fontified t) 28 29 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-5-face))) . 694) (undo-tree-id2679 . -29) (undo-tree-id2680 . -29) (t 25295 1650 0 0)) nil (25295 1825 510906 0) 0 nil] [nil nil ((691 . 697) (t 25295 1650 0 0)) ((#("
	    " 0 6 (fontified t)) . 691)) (25295 1754 417118 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -677) (undo-tree-id2635 . -1) (#("s" 0 1 (fontified t)) . -678) (undo-tree-id2636 . -1) (#("t" 0 1 (fontified t)) . -679) (undo-tree-id2637 . -1) (#(" " 0 1 (fontified t)) . -680) (undo-tree-id2638 . -1) (#("p" 0 1 (fontified t)) . -681) (undo-tree-id2639 . -1) (#("a" 0 1 (fontified t)) . -682) (undo-tree-id2640 . -1) (#("s" 0 1 (fontified t)) . -683) (undo-tree-id2641 . -1) (#("s" 0 1 (fontified t)) . -684) (undo-tree-id2642 . -1) (#("w" 0 1 (fontified t)) . -685) (undo-tree-id2643 . -1) (#("o" 0 1 (fontified t)) . -686) (undo-tree-id2644 . -1) (#("r" 0 1 (fontified t)) . -687) (undo-tree-id2645 . -1) (#("d" 0 1 (fontified t)) . -688) (undo-tree-id2646 . -1) (#("
" 0 1 (fontified t)) . -692) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (#(" " 0 1 (fontified t)) . -693) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (#(" " 0 1 (fontified t)) . -694) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (#(" " 0 1 (fontified t)) . -695) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (#(" " 0 1 (fontified t)) . -696) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (#(" " 0 1 (fontified t)) . -697) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (#(" " 0 1 (fontified t)) . -698) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (#(" " 0 1 (fontified t)) . -699) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (#(" " 0 1 (fontified nil)) . -700) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (#("	" 0 1 (fontified nil)) . 701) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (693 . 701) 694) nil (25295 1825 510899 0) 0 nil])
([nil nil ((#("((passwords (list password))
	    )
	" 0 1 (fontified t face (rainbow-delimiters-depth-5-face)) 1 2 (fontified t face (rainbow-delimiters-depth-6-face)) 2 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-7-face)) 13 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-7-face)) 27 28 (fontified t face (rainbow-delimiters-depth-6-face)) 28 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-5-face)) 35 36 (fontified t) 36 37 (fontified t)) . 663) (undo-tree-id2532 . -36) (undo-tree-id2533 . -37) (undo-tree-id2535 . 2) (undo-tree-id2537 . -35) (undo-tree-id2539 . 2) (undo-tree-id2541 . -36) (undo-tree-id2543 . 2) (undo-tree-id2545 . 3) (undo-tree-id2547 . -28) (undo-tree-id2549 . 3) (undo-tree-id2551 . -28) (undo-tree-id2553 . 3) (undo-tree-id2555 . -34) (undo-tree-id2557 . 3) (undo-tree-id2559 . 5) (undo-tree-id2561 . -32) (undo-tree-id2563 . 5) (undo-tree-id2565 . 7) (undo-tree-id2567 . -30) (undo-tree-id2569 . -37) 700) ((663 . 700)) (25295 1753 803330 0) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified nil face (rainbow-delimiters-depth-4-face))) . 658) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -658) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (#("l" 0 1 (fontified t)) . -659) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (#("e" 0 1 (fontified t)) . -660) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -661) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (#(" " 0 1 (fontified t)) . -662) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . 663) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -663) (undo-tree-id2621 . -1) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . 664) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-6-face))) . -664) (undo-tree-id2622 . -1) (#("p" 0 1 (fontified t)) . -665) (undo-tree-id2623 . -1) (#("a" 0 1 (fontified t)) . -666) (undo-tree-id2624 . -1) (#("s" 0 1 (fontified t)) . -667) (undo-tree-id2625 . -1) (#("s" 0 1 (fontified t)) . -668) (undo-tree-id2626 . -1) (#("w" 0 1 (fontified t)) . -669) (undo-tree-id2627 . -1) (#("o" 0 1 (fontified t)) . -670) (undo-tree-id2628 . -1) (#("r" 0 1 (fontified t)) . -671) (undo-tree-id2629 . -1) (#("d" 0 1 (fontified t)) . -672) (undo-tree-id2630 . -1) (#("s" 0 1 (fontified t)) . -673) (undo-tree-id2631 . -1) (#(" " 0 1 (fontified t)) . -674) (undo-tree-id2632 . -1) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-7-face))) . 675) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-7-face))) . -675) (undo-tree-id2633 . -1) (#("l" 0 1 (fontified t)) . -676) (undo-tree-id2634 . -1) 677) nil (25295 1825 510860 0) 0 nil])
([nil nil ((693 . 700)) ((#("
      " 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t)) . 693) (undo-tree-id2579 . -6) (undo-tree-id2580 . -1) (undo-tree-id2581 . -6) (undo-tree-id2582 . -7) (undo-tree-id2583 . 1) (undo-tree-id2584 . 1) (undo-tree-id2585 . -6) (undo-tree-id2586 . 1) (undo-tree-id2587 . 1) (undo-tree-id2588 . -6)) (25295 1751 558072 0) 0 nil])
([nil nil ((658 . 660)) nil (25295 1825 510817 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 735 . 736) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 727 . 733) (nil fontified nil 726 . 727) (nil fontified nil 725 . 726) (nil fontified nil 712 . 725) (nil fontified nil 711 . 712) (nil fontified nil 701 . 711) (nil fontified nil 700 . 701) (nil fontified nil 699 . 700) (699 . 736)) ((#("((passwords (list password))
	    )
	" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-5-face)) 2 12 (fontified nil) 12 13 (fontified nil face (rainbow-delimiters-depth-6-face)) 13 26 (fontified nil) 26 27 (fontified nil face (rainbow-delimiters-depth-6-face)) 27 28 (fontified nil face (rainbow-delimiters-depth-5-face)) 28 29 (fontified nil) 29 34 (fontified nil) 34 35 (fontified nil face (rainbow-delimiters-depth-4-face)) 35 36 (fontified nil) 36 37 (fontified nil rear-nonsticky nil)) . 699) (undo-tree-id2575 . -36) (undo-tree-id2576 . -37) (undo-tree-id2577 . 37) (undo-tree-id2578 . -37) (nil fontified t 727 . 728) (nil fontified t 734 . 735) (nil rear-nonsticky t 735 . 736)) (25295 1751 557653 0) 0 nil] [nil nil ((nil rear-nonsticky nil 736 . 737) (nil fontified nil 736 . 737) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 728 . 734) (nil fontified nil 727 . 728) (nil fontified nil 726 . 727) (nil fontified nil 713 . 726) (nil fontified nil 712 . 713) (nil fontified nil 702 . 712) (nil fontified nil 701 . 702) (nil fontified nil 700 . 701) (700 . 737)) ((#("((passwords (list password))
	    )
	" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-5-face)) 2 12 (fontified nil) 12 13 (fontified nil face (rainbow-delimiters-depth-6-face)) 13 26 (fontified nil) 26 27 (fontified nil face (rainbow-delimiters-depth-6-face)) 27 28 (fontified nil face (rainbow-delimiters-depth-5-face)) 28 29 (fontified nil) 29 34 (fontified nil) 34 35 (fontified nil face (rainbow-delimiters-depth-4-face)) 35 36 (fontified nil) 36 37 (fontified nil rear-nonsticky nil)) . 700) (undo-tree-id2571 . -36) (undo-tree-id2572 . -37) (undo-tree-id2573 . 37) (undo-tree-id2574 . -37) (nil fontified t 728 . 729) (nil fontified t 735 . 736) (nil rear-nonsticky t 736 . 737)) (25295 1742 516315 0) 0 nil])
([nil nil ((659 . 674)) nil (25295 1825 510816 0) 0 nil])
nil
nil
([nil nil ((674 . 676)) nil (25295 1825 510815 0) 0 nil])
([nil nil ((675 . 683)) nil (25295 1825 510814 0) 0 nil])
([nil nil ((683 . 702)) nil (25295 1838 845606 0) 0 nil])
([nil nil ((#("(let ((passwords (list password)))
  )" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-4-face)) 18 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-4-face)) 32 33 (fontified t face (rainbow-delimiters-depth-3-face)) 33 34 (fontified t face (rainbow-delimiters-depth-2-face)) 34 35 (fontified t) 35 37 (fontified t) 37 38 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 38) (undo-tree-id2723 . -38) (undo-tree-id2724 . -35) (undo-tree-id2725 . -6) (undo-tree-id2726 . -6) (undo-tree-id2727 . -38) (undo-tree-id2728 . 38) (undo-tree-id2729 . 38) (undo-tree-id2730 . 38) (undo-tree-id2731 . 38) (undo-tree-id2732 . -38) (undo-tree-id2733 . 38) (undo-tree-id2734 . 38) (undo-tree-id2735 . -38) (t 25295 1825 0 0)) nil (25295 1843 316827 0) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -37) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) 38 (t 25295 1825 0 0)) ((37 . 38)) (25295 1838 844802 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -36) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (#("
" 0 1 (fontified t)) . -37) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) 38) nil (25295 1843 316812 0) 0 nil])
nil
([nil nil ((618 . 621) (t 25295 1843 0 0)) nil (25295 1888 648625 0) 0 nil])
([nil nil ((619 . 624)) nil (25295 1888 648624 0) 0 nil])
([nil nil ((671 . 672) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -624)) nil (25295 1888 648623 0) 0 nil])
([nil nil ((671 . 678)) nil (25295 1888 648622 0) 0 nil])
([nil nil ((678 . 686)) nil (25295 1888 648621 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -684) (undo-tree-id2752 . -1) (#("d" 0 1 (fontified t)) . -685) (undo-tree-id2753 . -1) 686) nil (25295 1888 648619 0) 0 nil])
([nil nil ((684 . 688)) nil (25295 1888 648616 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -682) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (#("w" 0 1 (fontified t)) . -683) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (#("o" 0 1 (fontified t)) . -684) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (#("r" 0 1 (fontified t)) . -685) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (#("d" 0 1 (fontified t)) . -686) (undo-tree-id2750 . -1) (#("s" 0 1 (fontified t)) . -687) (undo-tree-id2751 . -1) 688) nil (25295 1888 648613 0) 0 nil])
([nil nil ((682 . 687)) nil (25295 1888 648589 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -673) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (#(" " 0 1 (fontified t)) . -674) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (#(" " 0 1 (fontified t)) . -675) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (#(" " 0 1 (fontified t)) . -676) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (#(" " 0 1 (fontified t)) . -677) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (#("p" 0 1 (fontified t)) . -678) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . 1) (undo-tree-id3329 . 1) (undo-tree-id3330 . 1) (undo-tree-id3331 . 1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (#("a" 0 1 (fontified t)) . -679) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (#("s" 0 1 (fontified t)) . -680) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (#("s" 0 1 (fontified t)) . -681) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (#("w" 0 1 (fontified t)) . -682) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (#("o" 0 1 (fontified t)) . -683) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . 1) (undo-tree-id3451 . 1) (undo-tree-id3452 . 1) (undo-tree-id3453 . 1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (#("r" 0 1 (fontified t)) . -684) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (#("d" 0 1 (fontified t)) . -685) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . 1) (undo-tree-id3490 . 1) (undo-tree-id3491 . 1) (undo-tree-id3492 . 1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (#("s" 0 1 (fontified t)) . -686) (undo-tree-id3501 . -1) (undo-tree-id3502 . 1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . 1) (undo-tree-id3508 . 1) (undo-tree-id3509 . 1) (undo-tree-id3510 . 1) (undo-tree-id3511 . 1) (undo-tree-id3512 . 1) (undo-tree-id3513 . 1) (undo-tree-id3514 . 1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) 687 (t 25295 1888 0 0)) nil (25295 1911 721436 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -673) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (#(" " 0 1 (fontified t)) . -674) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (#(" " 0 1 (fontified t)) . -675) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (#(" " 0 1 (fontified t)) . -676) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (#(" " 0 1 (fontified t)) . -677) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (#(" " 0 1 (fontified t)) . -678) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (#(" " 0 1 (fontified nil)) . -679) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (#("	" 0 1 (fontified nil)) . 680) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (672 . 680) 673) nil (25295 1911 721148 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -671) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (#(" " 0 1 (fontified t)) . -672) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) 673) nil (25295 1911 720935 0) 0 nil])
([nil nil ((1798 . 1799) (t 25295 1911 0 0)) nil (25295 1940 398239 0) 0 nil])
([nil current ((nil rear-nonsticky nil 1834 . 1835) (nil fontified nil 1834 . 1835) (nil fontified nil 1831 . 1834) (nil fontified nil 1825 . 1831) (nil fontified nil 1800 . 1825) (nil fontified nil 1799 . 1800) (1799 . 1835)) nil (25295 1940 398233 0) 0 nil])
nil
