(undo-tree-save-format-version . 1)
"6cb9037629e7e3bb8fff5b3de088cdec13b6f527"
[nil nil nil nil (25293 33211 857444 0) 0 nil]
([nil nil ((1 . 2) (t . -1)) nil (25293 33211 857443 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 2) nil (25293 33211 857442 0) 0 nil])
([nil nil ((1 . 13)) nil (25293 33211 857429 0) 0 nil])
([nil nil ((13 . 15)) nil (25293 33211 857428 0) 0 nil])
([nil nil ((15 . 17)) nil (25293 33211 857427 0) 0 nil])
([nil nil ((16 . 24)) nil (25293 33211 857426 0) 0 nil])
([nil nil ((24 . 26)) nil (25293 33211 857426 0) 0 nil])
([nil nil ((25 . 34)) nil (25293 33211 857424 0) 0 nil])
([nil nil ((36 . 37) 34) nil (25293 33230 551712 0) 0 nil])
([nil nil ((36 . 38) (t 25293 33211 0 0)) nil (25293 33286 304805 0) 0 nil] [nil nil ((34 . 35) (t 25293 33211 0 0)) ((#("
" 0 1 (fontified t face font-lock-string-face)) . 34) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . 1) (undo-tree-id5 . -1)) (25293 33230 551054 0) 0 nil])
([nil nil ((38 . 40)) nil (25293 33286 304804 0) 0 nil])
nil
([nil nil ((39 . 46)) nil (25293 33286 304803 0) 0 nil])
([nil nil ((46 . 55)) nil (25293 33286 304802 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -53) (undo-tree-id20 . -1) (#("u" 0 1 (fontified t)) . -54) (undo-tree-id21 . -1) 55) nil (25293 33286 304801 0) 0 nil])
([nil nil ((53 . 57)) nil (25293 33286 304798 0) 0 nil])
([nil nil ((47 . 63) (#("make-accum" 0 10 (fontified t)) . -47) (undo-tree-id19 . -10) 57) nil (25293 33286 304797 0) 0 nil])
([nil nil ((64 . 65)) nil (25293 33286 304795 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 90 . 91) (nil fontified nil 90 . 91) (nil fontified nil 74 . 90) (nil fontified nil 73 . 74) (nil fontified nil 66 . 73) (nil fontified nil 65 . 66) (65 . 91)) nil (25293 33286 304794 0) 0 nil])
([nil nil ((91 . 92)) nil (25293 33286 304792 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 117 . 118) (nil fontified nil 117 . 118) (nil fontified nil 101 . 117) (nil fontified nil 100 . 101) (nil fontified nil 93 . 100) (nil fontified nil 92 . 93) (92 . 118)) nil (25293 33286 304791 0) 0 nil])
([nil nil ((#("accumulator" 0 11 (fontified t)) . -79) (undo-tree-id18 . -11) 90) nil (25293 33286 304788 0) 0 nil])
([nil nil ((#("make-" 0 5 (fontified t)) . -74) (undo-tree-id17 . -5) 79) nil (25293 33286 304786 0) 0 nil])
([nil nil ((74 . 86)) nil (25293 33286 304784 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -102) (undo-tree-id6 . -1) (#("c" 0 1 (fontified t)) . -103) (undo-tree-id7 . -1) (#("c" 0 1 (fontified t)) . -104) (undo-tree-id8 . -1) (#("u" 0 1 (fontified t)) . -105) (undo-tree-id9 . -1) (#("m" 0 1 (fontified t)) . -106) (undo-tree-id10 . -1) (#("u" 0 1 (fontified t)) . -107) (undo-tree-id11 . -1) (#("l" 0 1 (fontified t)) . -108) (undo-tree-id12 . -1) (#("a" 0 1 (fontified t)) . -109) (undo-tree-id13 . -1) (#("t" 0 1 (fontified t)) . -110) (undo-tree-id14 . -1) (#("o" 0 1 (fontified t)) . -111) (undo-tree-id15 . -1) (#("r" 0 1 (fontified t)) . -112) (undo-tree-id16 . -1) 113) nil (25293 33286 304780 0) 0 nil])
([nil nil ((102 . 109)) nil (25293 33306 7493 0) 0 nil])
([nil nil ((#("(provide make-accumulator)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-1-face))) . 38) (undo-tree-id841 . -26) (undo-tree-id842 . -25) (undo-tree-id843 . -26) (undo-tree-id844 . -26) (undo-tree-id845 . -26) (t 25293 33286 0 0)) nil (25293 33352 860423 0) 0 nil] [nil nil ((110 . 112) (t 25293 33286 0 0)) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 110) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2)) (25293 33305 679716 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 37) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) 38) nil (25293 33352 860418 0) 0 nil])
([nil nil ((112 . 114)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t face (rainbow-delimiters-depth-1-face))) . 112) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . 1) (undo-tree-id671 . 1) (undo-tree-id672 . -1) (undo-tree-id673 . 1) (undo-tree-id674 . 1) (undo-tree-id675 . -1) (undo-tree-id676 . 1) (undo-tree-id677 . 1) (undo-tree-id678 . -1) (undo-tree-id679 . 1) (undo-tree-id680 . 1) (undo-tree-id681 . -1) (undo-tree-id682 . 1) (undo-tree-id683 . 1) (undo-tree-id684 . -1) (undo-tree-id685 . 1) (undo-tree-id686 . 1) (undo-tree-id687 . -1) (undo-tree-id688 . 1) (undo-tree-id689 . 1) (undo-tree-id690 . -1) (undo-tree-id691 . 1) (undo-tree-id692 . 1) (undo-tree-id693 . -1) (undo-tree-id694 . 1) (undo-tree-id695 . 1) (undo-tree-id696 . -1) (undo-tree-id697 . 1) (undo-tree-id698 . 1) (undo-tree-id699 . -1) (undo-tree-id700 . 1) (undo-tree-id701 . 1) (undo-tree-id702 . -1) (undo-tree-id703 . 1) (undo-tree-id704 . 1) (undo-tree-id705 . -1) (undo-tree-id706 . 1) (undo-tree-id707 . 1) (undo-tree-id708 . -1) (undo-tree-id709 . 1) (undo-tree-id710 . 1) (undo-tree-id711 . -1) (undo-tree-id712 . 1) (undo-tree-id713 . 1) (undo-tree-id714 . -1) (undo-tree-id715 . 1) (undo-tree-id716 . 1) (undo-tree-id717 . -1) (undo-tree-id718 . 1) (undo-tree-id719 . 1) (undo-tree-id720 . -1) (undo-tree-id721 . 1) (undo-tree-id722 . 1) (undo-tree-id723 . -1) (undo-tree-id724 . 1) (undo-tree-id725 . 1) (undo-tree-id726 . -1) (undo-tree-id727 . 1) (undo-tree-id728 . 1) (undo-tree-id729 . -1) (undo-tree-id730 . 1) (undo-tree-id731 . 1) (undo-tree-id732 . -1) (undo-tree-id733 . 1) (undo-tree-id734 . 1) (undo-tree-id735 . -1) (undo-tree-id736 . 1) (undo-tree-id737 . 1) (undo-tree-id738 . -1) (undo-tree-id739 . 1) (undo-tree-id740 . 1) (undo-tree-id741 . -1) (undo-tree-id742 . 1) (undo-tree-id743 . 1) (undo-tree-id744 . -1) (undo-tree-id745 . 1) (undo-tree-id746 . 1) (undo-tree-id747 . -1) (undo-tree-id748 . 1) (undo-tree-id749 . 1) (undo-tree-id750 . -1) (undo-tree-id751 . 1) (undo-tree-id752 . -1) (undo-tree-id753 . 1) (undo-tree-id754 . 1) (undo-tree-id755 . -1) (undo-tree-id756 . 1) (undo-tree-id757 . 1) (undo-tree-id758 . -1) (undo-tree-id759 . 1) (undo-tree-id760 . 1) (undo-tree-id761 . -1) (undo-tree-id762 . 1) (undo-tree-id763 . 1) (undo-tree-id764 . -1) (undo-tree-id765 . 1) (undo-tree-id766 . 1) (undo-tree-id767 . -1) (undo-tree-id768 . 1) (undo-tree-id769 . 1) (undo-tree-id770 . -1) (undo-tree-id771 . 1) (undo-tree-id772 . 1) (undo-tree-id773 . -1)) (25293 33305 479351 0) 0 nil])
([nil nil ((37 . 38)) nil (25293 33352 860412 0) 0 nil])
([nil nil ((113 . 121)) ((#("define s" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-function-name-face)) . 113) (undo-tree-id631 . -8) (undo-tree-id632 . -7) (undo-tree-id633 . -7) (undo-tree-id634 . -7) (undo-tree-id635 . -7) (undo-tree-id636 . -7) (undo-tree-id637 . -7) (undo-tree-id638 . -7) (undo-tree-id639 . -7) (undo-tree-id640 . -7) (undo-tree-id641 . -7) (undo-tree-id642 . -7) (undo-tree-id643 . -7) (undo-tree-id644 . -7) (undo-tree-id645 . -7) (undo-tree-id646 . -7) (undo-tree-id647 . -7) (undo-tree-id648 . -7) (undo-tree-id649 . -7) (undo-tree-id650 . -7) (undo-tree-id651 . -7) (undo-tree-id652 . -7) (undo-tree-id653 . -7) (undo-tree-id654 . -6) (undo-tree-id655 . -5) (undo-tree-id656 . -4) (undo-tree-id657 . -3) (undo-tree-id658 . -2) (undo-tree-id659 . -1) (undo-tree-id660 . -3) (undo-tree-id661 . -7) (undo-tree-id662 . -7) (undo-tree-id663 . -7) (undo-tree-id664 . -7) (undo-tree-id665 . -8) (undo-tree-id666 . -8)) (25293 33304 902951 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -37) (undo-tree-id831 . -1) 38) nil (25293 33352 860411 0) 0 nil])
([nil nil ((121 . 125)) ((#("am-a" 0 4 (fontified t face font-lock-function-name-face)) . 121) (undo-tree-id629 . -4) (undo-tree-id630 . -4)) (25293 33304 706388 0) 0 nil])
([nil nil ((#("(provide make-counter)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-keyword-face) 8 21 (fontified t) 21 22 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 38)) nil (25293 33352 860409 0) 0 nil])
([nil nil ((120 . 127) (#("sam-a" 0 5 (fontified t face font-lock-function-name-face)) . -120) (undo-tree-id529 . -5) 125) ((120 . 125) (#("sam-acc" 0 1 (fontified t face font-lock-function-name-face) 1 2 (fontified t face font-lock-function-name-face) 2 3 (fontified t face font-lock-function-name-face) 3 4 (fontified t face font-lock-function-name-face) 4 5 (fontified t face font-lock-function-name-face) 5 6 (fontified t face font-lock-function-name-face) 6 7 (fontified t face font-lock-function-name-face)) . 120) (undo-tree-id604 . -7) (undo-tree-id605 . -7) (undo-tree-id606 . -7) (undo-tree-id607 . -7) (undo-tree-id608 . -7) (undo-tree-id609 . -7) (undo-tree-id610 . -7) (undo-tree-id611 . -7) (undo-tree-id612 . -7) (undo-tree-id613 . -7) (undo-tree-id614 . -7) (undo-tree-id615 . -7) (undo-tree-id616 . -7) (undo-tree-id617 . -7) (undo-tree-id618 . -7) (undo-tree-id619 . -6) (undo-tree-id620 . -5) (undo-tree-id621 . -4) (undo-tree-id622 . -3) (undo-tree-id623 . -2) (undo-tree-id624 . -1) (undo-tree-id625 . -7) (undo-tree-id626 . -7) (undo-tree-id627 . -7) (undo-tree-id628 . -7)) (25293 33304 487085 0) 0 nil])
([nil nil ((38 . 39)) nil (25293 33352 860408 0) 0 nil])
([nil nil ((127 . 128)) ((#(" " 0 1 (fontified t)) . 127) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1)) (25293 33304 289778 0) 0 nil])
([nil nil ((#("(provide make-account)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 21 (fontified t) 21 22 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 40) (undo-tree-id830 . -22)) nil (25293 33352 860407 0) 0 nil])
([nil nil ((128 . 130)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face))) . 128) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . 1) (undo-tree-id549 . 1) (undo-tree-id550 . -1) (undo-tree-id551 . 1) (undo-tree-id552 . 1) (undo-tree-id553 . -1) (undo-tree-id554 . 1) (undo-tree-id555 . 1) (undo-tree-id556 . -1) (undo-tree-id557 . 1) (undo-tree-id558 . 1) (undo-tree-id559 . -1) (undo-tree-id560 . 1) (undo-tree-id561 . 1) (undo-tree-id562 . -1) (undo-tree-id563 . 1) (undo-tree-id564 . 1) (undo-tree-id565 . -1) (undo-tree-id566 . 1) (undo-tree-id567 . 1) (undo-tree-id568 . -1) (undo-tree-id569 . 1) (undo-tree-id570 . 1) (undo-tree-id571 . -1) (undo-tree-id572 . 1) (undo-tree-id573 . 1) (undo-tree-id574 . -1) (undo-tree-id575 . 1) (undo-tree-id576 . 1) (undo-tree-id577 . -1) (undo-tree-id578 . 1) (undo-tree-id579 . 1) (undo-tree-id580 . -1) (undo-tree-id581 . 1) (undo-tree-id582 . 1) (undo-tree-id583 . -1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . -1)) (25293 33303 943517 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 87 . 88) (nil fontified nil 87 . 88) (nil fontified nil 86 . 87) (nil fontified nil 53 . 86) (nil fontified nil 52 . 53) (nil fontified nil 51 . 52) (nil fontified nil 48 . 51) (nil fontified nil 47 . 48) (nil fontified nil 41 . 47) (nil fontified nil 40 . 41) (40 . 88)) nil (25293 33352 860405 0) 0 nil])
([nil nil ((129 . 137)) ((#("make-acc" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 129) (undo-tree-id530 . -8) (undo-tree-id531 . -5) (undo-tree-id532 . 3) (undo-tree-id533 . -6) (undo-tree-id534 . 2) (undo-tree-id535 . -7) (undo-tree-id536 . 1) (undo-tree-id537 . -8) (undo-tree-id538 . -7) (undo-tree-id539 . -6) (undo-tree-id540 . -5) (undo-tree-id541 . -4) (undo-tree-id542 . -3) (undo-tree-id543 . -2) (undo-tree-id544 . -1) (undo-tree-id545 . -8)) (25293 33303 431320 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 39) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . 1) (undo-tree-id829 . -1)) nil (25293 33352 860502 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -116) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("n" 0 1 (fontified t)) . -117) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -118) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t)) . -119) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -120) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -121) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("m" 0 1 (fontified t face font-lock-function-name-face)) . -122) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("-" 0 1 (fontified t face font-lock-function-name-face)) . -123) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -124) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("c" 0 1 (fontified t face font-lock-function-name-face)) . -125) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("c" 0 1 (fontified t face font-lock-function-name-face)) . -126) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#(" " 0 1 (fontified t)) . -127) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 128) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . 1) (undo-tree-id445 . 1) (undo-tree-id446 . 1) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (undo-tree-id449 . 1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -128) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (#("m" 0 1 (fontified t)) . -129) (undo-tree-id463 . -1) (undo-tree-id464 . 1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("a" 0 1 (fontified t)) . -130) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("k" 0 1 (fontified t)) . -131) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("e" 0 1 (fontified t)) . -132) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("-" 0 1 (fontified t)) . -133) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("a" 0 1 (fontified t)) . -134) (undo-tree-id514 . -1) (undo-tree-id515 . 1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("c" 0 1 (fontified t)) . -135) (undo-tree-id521 . -1) (undo-tree-id522 . 1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (#("c" 0 1 (fontified t)) . -136) (undo-tree-id526 . -1) (undo-tree-id527 . 1) (undo-tree-id528 . -1) 137) ((128 . 137) (116 . 129)) (25293 33302 424924 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 38) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . 1) (undo-tree-id857 . -1)) nil (25293 33354 786460 0) 0 nil] [nil nil ((#("(define acc (make-account 100 'secret-password))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-2-face)) 13 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 39) (undo-tree-id814 . 48) (undo-tree-id815 . -48) (undo-tree-id816 . 48) (undo-tree-id817 . 48) (undo-tree-id818 . 48) (undo-tree-id819 . -48)) ((39 . 87)) (25293 33352 860389 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 112) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . 1) (undo-tree-id26 . 1) (undo-tree-id27 . 1) (undo-tree-id28 . 1) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (undo-tree-id37 . 1) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1) (undo-tree-id41 . 1) (undo-tree-id42 . 1) (undo-tree-id43 . 1) (undo-tree-id44 . 1) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . 1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1) (undo-tree-id56 . 1) (undo-tree-id57 . 1) (undo-tree-id58 . 1) (undo-tree-id59 . 1) (undo-tree-id60 . 1) (undo-tree-id61 . 1) (undo-tree-id62 . 1) (undo-tree-id63 . 1) (undo-tree-id64 . 1) (undo-tree-id65 . 1) (undo-tree-id66 . 1) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -112) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("d" 0 1 (fontified t)) . -113) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("e" 0 1 (fontified t)) . -114) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("f" 0 1 (fontified t)) . -115) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 116) ((112 . 116) (112 . 113)) (25293 33302 424223 0) 0 nil])
([nil nil ((87 . 88) (t 25293 33354 0 0)) nil (25293 33437 193369 0) 0 nil])
nil
nil
([nil nil ((88 . 90)) nil (25293 33437 193368 0) 0 nil])
([nil nil ((89 . 90)) nil (25293 33437 193367 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 88) (undo-tree-id903 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -88) (undo-tree-id904 . -1) (#("a" 0 1 (fontified t)) . -89) (undo-tree-id905 . -1) 90) nil (25293 33437 193366 0) 0 nil])
([nil nil ((88 . 90)) nil (25293 33437 193363 0) 0 nil])
([nil nil ((89 . 91)) nil (25293 33437 193362 0) 0 nil])
([nil nil ((90 . 100)) nil (25293 33437 193361 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -95) (undo-tree-id898 . -1) (#("i" 0 1 (fontified t)) . -96) (undo-tree-id899 . -1) (#("t" 0 1 (fontified t)) . -97) (undo-tree-id900 . -1) (#("h" 0 1 (fontified t)) . -98) (undo-tree-id901 . -1) (#("d" 0 1 (fontified t)) . -99) (undo-tree-id902 . -1) 100) nil (25293 33437 193359 0) 0 nil])
([nil nil ((95 . 110)) nil (25293 33437 193354 0) 0 nil])
([nil nil ((111 . 113)) nil (25293 33437 193353 0) 0 nil])
([nil nil ((113 . 121)) nil (25293 33437 193352 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -109) (undo-tree-id887 . -1) (#(" " 0 1 (fontified t)) . -111) (undo-tree-id888 . -1) (#("'" 0 1 (fontified t)) . -112) (undo-tree-id889 . -1) (#("w" 0 1 (fontified t)) . -113) (undo-tree-id890 . -1) (#("i" 0 1 (fontified t)) . -114) (undo-tree-id891 . -1) (#("t" 0 1 (fontified t)) . -115) (undo-tree-id892 . -1) (#("h" 0 1 (fontified t)) . -116) (undo-tree-id893 . -1) (#("d" 0 1 (fontified t)) . -117) (undo-tree-id894 . -1) (#("r" 0 1 (fontified t)) . -118) (undo-tree-id895 . -1) (#("a" 0 1 (fontified t)) . -119) (undo-tree-id896 . -1) (#("w" 0 1 (fontified t)) . -120) (undo-tree-id897 . -1) 121) nil (25293 33437 193349 0) 0 nil])
([nil nil ((109 . 114)) nil (25293 33437 193339 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -111) (undo-tree-id876 . -1) (undo-tree-id877 . 1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (#("i" 0 1 (fontified t)) . -112) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (#("t" 0 1 (fontified t)) . -113) (undo-tree-id884 . -1) (undo-tree-id885 . 1) (undo-tree-id886 . -1) 114) nil (25293 33437 193337 0) 0 nil])
([nil nil ((111 . 116)) nil (25293 33437 193328 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -113) (undo-tree-id861 . -1) (undo-tree-id862 . 1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (#("i" 0 1 (fontified t)) . -114) (undo-tree-id868 . -1) (undo-tree-id869 . 1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (#("t" 0 1 (fontified t)) . -115) (undo-tree-id873 . -1) (undo-tree-id874 . 1) (undo-tree-id875 . -1) 116) nil (25293 33437 193326 0) 0 nil])
([nil nil ((113 . 120)) nil (25293 33437 193313 0) 0 nil])
([nil nil ((121 . 123)) nil (25293 33437 193312 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -122) (undo-tree-id858 . -1) (undo-tree-id859 . 1) (undo-tree-id860 . -1) 123) nil (25293 33437 193310 0) 0 nil])
([nil nil ((122 . 124)) nil (25293 33437 193300 0) 0 nil])
([nil current ((125 . 126) 124) nil (25293 33437 193295 0) 0 nil])
nil
