(undo-tree-save-format-version . 1)
"e5258252976ce366977f44f729dd0521e6227bee"
[nil nil nil nil (25297 36796 945552 0) 0 nil]
([nil nil ((1 . 13) (t . -1)) nil (25297 36796 945550 0) 0 nil])
([nil nil ((13 . 15)) nil (25297 36796 945549 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 40 . 41) (nil fontified nil 30 . 41) (nil fontified nil 24 . 30) (nil fontified nil 22 . 24) (nil fontified nil 16 . 22) (nil fontified nil 15 . 16) (15 . 41)) nil (25297 36796 945548 0) 0 nil])
([nil nil ((41 . 43)) nil (25297 36796 945546 0) 0 nil])
([nil nil ((14 . 15)) nil (25297 36796 945545 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-function-name-face)) . -25) (undo-tree-id8 . -1) (undo-tree-id9 . 1) (undo-tree-id10 . 1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("q" 0 1 (fontified t face font-lock-function-name-face)) . -26) (undo-tree-id22 . -1) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("u" 0 1 (fontified t face font-lock-function-name-face)) . -27) (undo-tree-id34 . -1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -28) (undo-tree-id44 . -1) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -29) (undo-tree-id52 . -1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -30) (undo-tree-id58 . -1) (undo-tree-id59 . 1) (undo-tree-id60 . 1) (undo-tree-id61 . -1) 31) nil (25297 36796 945540 0) 0 nil])
([nil nil ((25 . 27)) nil (25297 36796 945502 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-function-name-face)) . -25) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("f" 0 1 (fontified t face font-lock-function-name-face)) . -26) (undo-tree-id5 . -1) (undo-tree-id6 . 1) (undo-tree-id7 . -1) 27) nil (25297 36796 945499 0) 0 nil])
([nil nil ((25 . 26)) nil (25297 36796 945479 0) 0 nil])
([nil nil ((29 . 32) (t 25297 36796 0 0)) nil (25297 37387 806180 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 32) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -32) (undo-tree-id166 . -1) (#("*" 0 1 (fontified t)) . -33) (undo-tree-id167 . -1) (#(" " 0 1 (fontified t)) . -34) (undo-tree-id168 . -1) (#("x" 0 1 (fontified t)) . -35) (undo-tree-id169 . -1) (#(" " 0 1 (fontified t)) . -36) (undo-tree-id170 . -1) (#("x" 0 1 (fontified t)) . -37) (undo-tree-id171 . -1) 38) nil (25297 37387 806177 0) 0 nil])
([nil nil ((18 . 19)) nil (25297 37387 806167 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -18) (undo-tree-id165 . -1) 19) nil (25297 37387 806165 0) 0 nil])
([nil nil ((32 . 34)) nil (25297 37387 806162 0) 0 nil])
([nil nil ((33 . 37)) nil (25297 37387 806161 0) 0 nil])
([nil nil ((37 . 39)) nil (25297 37387 806159 0) 0 nil])
([nil nil ((38 . 40)) nil (25297 37387 806158 0) 0 nil])
([nil nil ((39 . 40)) nil (25297 37387 806156 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -39) (undo-tree-id164 . -1) 40) nil (25297 37387 806154 0) 0 nil])
([nil nil ((39 . 42)) nil (25297 37387 806152 0) 0 nil])
([nil nil ((44 . 49)) nil (25297 37387 806151 0) 0 nil])
([nil nil ((49 . 51)) nil (25297 37387 806150 0) 0 nil])
([nil nil ((50 . 53)) nil (25297 37387 806149 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -52) (undo-tree-id161 . -1) (undo-tree-id162 . 1) (undo-tree-id163 . -1) 53) nil (25297 37387 806148 0) 0 nil])
([nil nil ((52 . 56)) nil (25297 37387 806144 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -50) (undo-tree-id109 . -1) (undo-tree-id110 . 1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("e" 0 1 (fontified t)) . -51) (undo-tree-id124 . -1) (undo-tree-id125 . 1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("g" 0 1 (fontified t)) . -52) (undo-tree-id137 . -1) (undo-tree-id138 . 1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("i" 0 1 (fontified t)) . -53) (undo-tree-id146 . -1) (undo-tree-id147 . 1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -54) (undo-tree-id153 . -1) (undo-tree-id154 . 1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#(" " 0 1 (fontified t)) . -55) (undo-tree-id158 . -1) (undo-tree-id159 . 1) (undo-tree-id160 . -1) 56) nil (25297 37387 806140 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 49) (undo-tree-id62 . 1) (undo-tree-id63 . 1) (undo-tree-id64 . 1) (undo-tree-id65 . 1) (undo-tree-id66 . 1) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (undo-tree-id78 . 1) (undo-tree-id79 . 1) (undo-tree-id80 . 1) (undo-tree-id81 . 1) (undo-tree-id82 . 1) (undo-tree-id83 . 1) (undo-tree-id84 . 1) (undo-tree-id85 . 1) (undo-tree-id86 . 1) (undo-tree-id87 . 1) (undo-tree-id88 . 1) (undo-tree-id89 . 1) (undo-tree-id90 . 1) (undo-tree-id91 . 1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -49) (undo-tree-id92 . -1) (undo-tree-id93 . 1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 50) nil (25297 37387 806089 0) 0 nil])
([nil nil ((49 . 50)) nil (25297 37387 806048 0) 0 nil])
([nil nil ((52 . 54) (t 25297 37387 0 0)) nil (25297 37393 65137 0) 0 nil])
([nil nil ((54 . 56)) nil (25297 37393 65135 0) 0 nil])
([nil nil ((55 . 59)) nil (25297 37393 65131 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 54) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -54) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("f" 0 1 (fontified t)) . -55) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#(" " 0 1 (fontified t)) . -56) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("1" 0 1 (fontified t)) . -57) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("0" 0 1 (fontified t)) . -58) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) 59 (t 25297 37393 0 0)) nil (25297 37551 784673 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -49) (undo-tree-id182 . -1) 50) nil (25297 37551 784660 0) 0 nil])
([nil nil ((49 . 51)) nil (25297 37551 784658 0) 0 nil])
([nil nil ((50 . 55)) nil (25297 37551 784657 0) 0 nil])
([nil nil ((55 . 56)) nil (25297 37551 784656 0) 0 nil])
([nil nil ((56 . 58)) nil (25297 37551 784656 0) 0 nil])
([nil nil ((57 . 65)) nil (25297 37551 784655 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -64) (undo-tree-id175 . -1) (undo-tree-id176 . 1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . 1) (undo-tree-id180 . 1) (undo-tree-id181 . -1) 65) nil (25297 37551 784653 0) 0 nil])
([nil nil ((64 . 66)) nil (25297 37551 784647 0) 0 nil])
([nil nil ((65 . 70)) nil (25297 37551 784646 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -69) (undo-tree-id172 . -1) (undo-tree-id173 . 1) (undo-tree-id174 . -1) 70) nil (25297 37551 784644 0) 0 nil])
([nil nil ((69 . 70)) nil (25297 37551 784631 0) 0 nil])
([nil nil ((72 . 77) (t 25297 37551 0 0)) nil (25297 37564 209509 0) 0 nil])
([nil nil ((77 . 78)) nil (25297 37564 209504 0) 0 nil])
([nil nil ((81 . 83) (t 25297 37564 0 0)) nil (25297 37603 169711 0) 0 nil])
([nil nil ((83 . 85)) nil (25297 37603 169709 0) 0 nil])
([nil nil ((84 . 87)) nil (25297 37603 169704 0) 0 nil])
([nil nil ((83 . 86) (t 25297 37603 0 0)) nil (25297 37670 636945 0) 0 nil])
([nil nil ((84 . 94)) nil (25297 37670 636944 0) 0 nil])
([nil nil ((#("(f 1)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-1-face))) . 96) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5)) nil (25297 37670 636943 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 97 . 98) (nil fontified nil 97 . 98) (nil fontified nil 94 . 97) (nil fontified nil 93 . 94) (93 . 98)) nil (25297 37670 636939 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 98)) nil (25297 37670 636937 0) 0 nil])
([nil nil ((93 . 94)) nil (25297 37670 636936 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 100) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (101 . 102)) nil (25297 37670 636935 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 117 . 118) (nil fontified nil 117 . 118) (nil fontified nil 116 . 117) (nil fontified nil 113 . 116) (nil fontified nil 112 . 113) (nil fontified nil 111 . 112) (nil fontified nil 109 . 111) (nil fontified nil 108 . 109) (nil fontified nil 102 . 108) (nil fontified nil 101 . 102) (101 . 118)) nil (25297 37670 636928 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-function-name-face)) . -110) (undo-tree-id203 . -1) (undo-tree-id204 . -1) 111) nil (25297 37670 636924 0) 0 nil])
([nil nil ((110 . 111)) nil (25297 37670 636913 0) 0 nil])
([nil nil ((100 . 101)) nil (25297 37670 636907 0) 0 nil])
([nil nil ((101 . 103) (t 25297 37670 0 0)) nil (25297 37742 167702 0) 0 nil])
([nil nil ((121 . 122)) nil (25297 37742 167700 0) 0 nil])
([nil nil ((122 . 124)) nil (25297 37742 167696 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -97) (undo-tree-id217 . -1) (undo-tree-id218 . 1) (undo-tree-id219 . 1) (undo-tree-id220 . 1) (undo-tree-id221 . 1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 98 (t 25297 37742 0 0)) nil (25297 37773 593001 0) 0 nil])
([nil nil ((97 . 98)) nil (25297 37773 592995 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -97) (undo-tree-id214 . -1) (undo-tree-id215 . 1) (undo-tree-id216 . -1) 98) nil (25297 37773 592993 0) 0 nil])
([nil nil ((97 . 98)) nil (25297 37773 592980 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -65) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) 66 (t 25297 37773 0 0)) nil (25297 37838 331483 0) 0 nil])
([nil nil ((65 . 66)) nil (25297 37838 331467 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -41) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) 42 (t 25297 37838 0 0)) nil (25297 37848 349996 0) 0 nil])
([nil nil ((41 . 42)) nil (25297 37848 349982 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -67) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#(" " 0 1 (fontified t)) . -68) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#("a" 0 1 (fontified t)) . -69) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 70 (t 25297 37848 0 0)) nil (25297 37924 583892 0) 0 nil])
([nil nil ((67 . 70)) nil (25297 37924 583883 0) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -69) (undo-tree-id260 . -1) (undo-tree-id261 . 1) (undo-tree-id262 . -1) 70) nil (25297 37924 583881 0) 0 nil])
([nil nil ((69 . 70)) nil (25297 37924 583878 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -77) (undo-tree-id258 . -1) (undo-tree-id259 . -1) 78) nil (25297 37924 583877 0) 0 nil])
([nil nil ((77 . 79)) nil (25297 37924 583875 0) 0 nil])
([nil nil ((78 . 82)) nil (25297 37924 583874 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -81) (undo-tree-id255 . -1) (undo-tree-id256 . 1) (undo-tree-id257 . -1) 82) nil (25297 37924 583873 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -78) (undo-tree-id234 . -1) (undo-tree-id235 . 1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#(" " 0 1 (fontified t)) . -79) (undo-tree-id243 . -1) (undo-tree-id244 . 1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#("a" 0 1 (fontified t)) . -80) (undo-tree-id250 . -1) (undo-tree-id251 . 1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) 81) nil (25297 37924 583867 0) 0 nil])
([nil nil ((78 . 83)) nil (25297 37924 583844 0) 0 nil])
([nil nil ((82 . 85) (51 . 54) (33 . 36) (16 . 19) (t 25297 37924 0 0)) nil (25297 38229 478521 0) 0 nil])
([nil nil ((100 . 102)) nil (25297 38229 478519 0) 0 nil])
([nil nil ((nil fontified nil 171 . 172) (nil fontified nil 170 . 171) (nil fontified nil 169 . 170) (nil fontified nil 168 . 169) (nil fontified nil 163 . 168) (nil fontified nil 162 . 163) (nil fontified nil 158 . 162) (nil fontified nil 157 . 158) (nil fontified nil 156 . 157) (nil fontified nil 155 . 156) (nil fontified nil 151 . 155) (nil fontified nil 150 . 151) (nil fontified nil 149 . 150) (nil fontified nil 146 . 149) (nil fontified nil 142 . 146) (nil fontified nil 141 . 142) (nil fontified nil 140 . 141) (nil fontified nil 135 . 140) (nil fontified nil 134 . 135) (nil fontified nil 130 . 134) (nil fontified nil 129 . 130) (nil fontified nil 128 . 129) (nil fontified nil 127 . 128) (nil fontified nil 124 . 127) (nil fontified nil 123 . 124) (nil fontified nil 122 . 123) (nil fontified nil 121 . 122) (nil fontified nil 118 . 121) (nil fontified nil 117 . 118) (nil fontified nil 115 . 117) (nil fontified nil 114 . 115) (nil fontified nil 113 . 114) (nil fontified nil 111 . 113) (nil fontified nil 110 . 111) (nil fontified nil 109 . 110) (nil fontified nil 108 . 109) (nil fontified nil 102 . 108) (nil fontified nil 101 . 102) (101 . 172)) nil (25297 38229 478517 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -116) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 117) nil (25297 38229 478509 0) 0 nil])
([nil nil ((#("(let ((a 0))
    (begin (set! a (+ a 1))
	   (- a x)))" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-4-face)) 11 12 (fontified t face (rainbow-delimiters-depth-3-face)) 12 13 (fontified t) 13 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-3-face)) 18 23 (fontified t face font-lock-keyword-face) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-4-face)) 25 29 (fontified t face font-lock-keyword-face) 29 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-5-face)) 33 34 (fontified t) 34 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-5-face)) 39 40 (fontified t face (rainbow-delimiters-depth-4-face)) 40 41 (fontified t) 41 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-4-face)) 46 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-4-face)) 52 53 (fontified t face (rainbow-delimiters-depth-3-face)) 53 54 (fontified t face (rainbow-delimiters-depth-2-face))) . 116) (undo-tree-id281 . -54) (undo-tree-id282 . -13) (undo-tree-id283 . -6) (undo-tree-id284 . 49) (undo-tree-id285 . 48) (undo-tree-id286 . -5) (undo-tree-id287 . 50) (undo-tree-id288 . 49) (undo-tree-id289 . -4) (undo-tree-id290 . 51) (undo-tree-id291 . 50) (undo-tree-id292 . -3) (undo-tree-id293 . 52) (undo-tree-id294 . 51) (undo-tree-id295 . -2) (undo-tree-id296 . 53) (undo-tree-id297 . 52) (undo-tree-id298 . -1) (undo-tree-id299 . 54) (undo-tree-id300 . 53) (undo-tree-id301 . 54) (undo-tree-id302 . 54) (undo-tree-id303 . 53) (undo-tree-id304 . 54) (undo-tree-id305 . -1) (undo-tree-id306 . 54) (undo-tree-id307 . 53) (undo-tree-id308 . 54) (undo-tree-id309 . 54) (undo-tree-id310 . -54) (undo-tree-id311 . 54) (undo-tree-id312 . 54) (undo-tree-id313 . -54)) nil (25297 38229 478502 0) 0 nil])
([nil nil ((116 . 117)) nil (25297 38229 478481 0) 0 nil])
([nil nil ((117 . 119)) nil (25297 38229 478480 0) 0 nil])
([nil nil ((118 . 121)) nil (25297 38229 478479 0) 0 nil])
([nil nil ((121 . 123)) nil (25297 38229 478479 0) 0 nil])
([nil nil ((122 . 123)) nil (25297 38229 478478 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -122) (undo-tree-id278 . -1) (undo-tree-id279 . 1) (undo-tree-id280 . -1) 123) nil (25297 38229 478476 0) 0 nil])
([nil nil ((122 . 127)) nil (25297 38229 478467 0) 0 nil])
([nil nil ((128 . 135)) nil (25297 38229 478466 0) 0 nil])
([nil nil ((135 . 136)) nil (25297 38229 478465 0) 0 nil])
([nil nil ((136 . 143)) nil (25297 38229 478464 0) 0 nil])
([nil nil ((143 . 144)) nil (25297 38229 478460 0) 0 nil])
([nil nil ((99 . 101) (t 25297 38229 0 0)) nil (25297 38401 413457 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 128 . 129) (nil fontified nil 128 . 129) (nil fontified nil 121 . 128) (nil fontified nil 113 . 121) (nil fontified nil 112 . 113) (nil fontified nil 111 . 112) (nil fontified nil 106 . 111) (nil fontified nil 105 . 106) (nil fontified nil 104 . 105) (nil fontified nil 102 . 104) (nil fontified nil 101 . 102) (101 . 129)) nil (25297 38401 413454 0) 0 nil])
([nil nil ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -73) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -45) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -30) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -16)) nil (25297 38401 413447 0) 0 nil])
([nil nil ((82 . 85) (51 . 54) (33 . 36) (16 . 19)) nil (25297 38401 413584 0) 0 nil])
([nil nil ((100 . 102)) nil (25297 38429 535483 0) 0 nil] [nil nil ((100 . 102)) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 100) (undo-tree-id320 . -1) (undo-tree-id321 . 1)) (25297 38401 413435 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 154 . 155) (nil fontified nil 154 . 155) (nil fontified nil 153 . 154) (nil fontified nil 152 . 153) (nil fontified nil 147 . 152) (nil fontified nil 146 . 147) (nil fontified nil 142 . 146) (nil fontified nil 141 . 142) (nil fontified nil 140 . 141) (nil fontified nil 139 . 140) (nil fontified nil 135 . 139) (nil fontified nil 134 . 135) (nil fontified nil 133 . 134) (nil fontified nil 130 . 133) (nil fontified nil 126 . 130) (nil fontified nil 125 . 126) (nil fontified nil 124 . 125) (nil fontified nil 119 . 124) (nil fontified nil 118 . 119) (nil fontified nil 114 . 118) (nil fontified nil 113 . 114) (nil fontified nil 112 . 113) (nil fontified nil 111 . 112) (nil fontified nil 108 . 111) (nil fontified nil 107 . 108) (nil fontified nil 106 . 107) (nil fontified nil 105 . 106) (nil fontified nil 102 . 105) (nil fontified nil 101 . 102) (101 . 155)) nil (25297 38443 182404 0) 0 nil])
nil
([nil nil ((#("(begin (set! a (+ a 1))
	   (- a x))" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-3-face)) 8 12 (fontified t face font-lock-keyword-face) 12 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-4-face)) 16 17 (fontified t) 17 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-4-face)) 22 23 (fontified t face (rainbow-delimiters-depth-3-face)) 23 24 (fontified t) 24 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-3-face)) 35 36 (fontified t face (rainbow-delimiters-depth-2-face))) . 118) (undo-tree-id450 . -36) (undo-tree-id451 . -24) (undo-tree-id452 . -36) (undo-tree-id453 . -36) (undo-tree-id454 . -36)) nil (25297 38479 882271 0) 0 nil] [nil nil ((#("(begin (set! a (+ a 1))
	   (- a x))" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-3-face)) 8 12 (fontified t face font-lock-keyword-face) 12 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-4-face)) 16 17 (fontified t) 17 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-4-face)) 22 23 (fontified t face (rainbow-delimiters-depth-3-face)) 23 24 (fontified t) 24 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-3-face)) 35 36 (fontified t face (rainbow-delimiters-depth-2-face))) . 118) (undo-tree-id374 . -36) (undo-tree-id375 . -24) (undo-tree-id376 . 36) (undo-tree-id377 . 12) (undo-tree-id378 . -24) (undo-tree-id379 . 11) (undo-tree-id380 . 12) (undo-tree-id381 . -25) (undo-tree-id382 . 10) (undo-tree-id383 . 11) (undo-tree-id384 . -26) (undo-tree-id385 . 31) (undo-tree-id386 . 10) (undo-tree-id387 . -5) (undo-tree-id388 . 32) (undo-tree-id389 . 31) (undo-tree-id390 . -4) (undo-tree-id391 . 33) (undo-tree-id392 . 32) (undo-tree-id393 . -3) (undo-tree-id394 . 34) (undo-tree-id395 . 33) (undo-tree-id396 . -2) (undo-tree-id397 . 35) (undo-tree-id398 . 34) (undo-tree-id399 . -1) (undo-tree-id400 . 36) (undo-tree-id401 . 35) (undo-tree-id402 . 36) (undo-tree-id403 . 36) (undo-tree-id404 . 36) (undo-tree-id405 . 36) (undo-tree-id406 . 36) (undo-tree-id407 . 36) (undo-tree-id408 . -36) (undo-tree-id409 . 36) (undo-tree-id410 . 36) (undo-tree-id411 . -36)) ((118 . 154)) (25297 38443 182120 0) 0 nil] [nil nil ((#("(if (= x 1)
      0
      0)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-2-face)) 11 12 (fontified t) 12 20 (fontified t) 20 27 (fontified t) 27 28 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 157) (undo-tree-id322 . -28) (undo-tree-id323 . -12) (undo-tree-id324 . 28) (undo-tree-id325 . 28) (undo-tree-id326 . -28) (undo-tree-id327 . 17) (undo-tree-id328 . -11) (undo-tree-id329 . 9) (undo-tree-id330 . 17) (undo-tree-id331 . -19) (undo-tree-id332 . 9) (undo-tree-id333 . -28) (undo-tree-id334 . 9) (undo-tree-id335 . -19) (undo-tree-id336 . 17) (undo-tree-id337 . 9) (undo-tree-id338 . -11) (undo-tree-id339 . 18) (undo-tree-id340 . 17) (undo-tree-id341 . -10) (undo-tree-id342 . 19) (undo-tree-id343 . 18) (undo-tree-id344 . -9) (undo-tree-id345 . 20) (undo-tree-id346 . 19) (undo-tree-id347 . -8) (undo-tree-id348 . 21) (undo-tree-id349 . 20) (undo-tree-id350 . -7) (undo-tree-id351 . 22) (undo-tree-id352 . 21) (undo-tree-id353 . -6) (undo-tree-id354 . 23) (undo-tree-id355 . 22) (undo-tree-id356 . -5) (undo-tree-id357 . 24) (undo-tree-id358 . 23) (undo-tree-id359 . -4) (undo-tree-id360 . 25) (undo-tree-id361 . 24) (undo-tree-id362 . -3) (undo-tree-id363 . 26) (undo-tree-id364 . 25) (undo-tree-id365 . -2) (undo-tree-id366 . 27) (undo-tree-id367 . 26) (undo-tree-id368 . -1) (undo-tree-id369 . 28) (undo-tree-id370 . 27) (undo-tree-id371 . 28) (undo-tree-id372 . 28) (undo-tree-id373 . -28)) ((157 . 185)) (25297 38429 535468 0) 0 nil])
([nil nil ((nil fontified nil 145 . 146) (nil fontified nil 138 . 145) (nil fontified nil 130 . 138) (nil fontified nil 129 . 130) (nil fontified nil 128 . 129) (nil fontified nil 123 . 128) (nil fontified nil 122 . 123) (nil fontified nil 121 . 122) (nil fontified nil 119 . 121) (nil fontified nil 118 . 119) (118 . 146)) nil (25297 38479 882266 0) 0 nil])
nil
nil
([nil nil ((#("(if (= x 1)
      0
      0)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-2-face)) 11 12 (fontified t) 12 20 (fontified t) 20 27 (fontified t) 27 28 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 149) (undo-tree-id443 . -28) (undo-tree-id444 . -12) (undo-tree-id445 . -28) (undo-tree-id446 . -28) (undo-tree-id447 . -28) (undo-tree-id448 . -28) (undo-tree-id449 . -28)) nil (25297 38479 882261 0) 0 nil])
([nil nil ((#("(if (= x 1)
      0
      0)" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 12 (fontified t) 12 20 (fontified t) 20 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-2-face))) . 167) (undo-tree-id437 . -28) (undo-tree-id438 . -12) (undo-tree-id439 . 28) (undo-tree-id440 . 28) (undo-tree-id441 . 28) (undo-tree-id442 . -28)) nil (25297 38479 882253 0) 0 nil])
([nil nil ((#("(let ((a 0))
    (if (= x 1)
      0
      0))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 13 (fontified t) 13 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 29 (fontified t) 29 37 (fontified t) 37 44 (fontified t) 44 45 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 45 46 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 101) (undo-tree-id412 . -46) (undo-tree-id413 . -13) (undo-tree-id414 . -17) (undo-tree-id415 . -17) (undo-tree-id416 . -17) (undo-tree-id417 . -17) (undo-tree-id418 . -17) (undo-tree-id419 . -17) (undo-tree-id420 . -17) (undo-tree-id421 . 7) (undo-tree-id422 . -39) (undo-tree-id423 . 15) (undo-tree-id424 . 7) (undo-tree-id425 . -31) (undo-tree-id426 . 31) (undo-tree-id427 . 15) (undo-tree-id428 . -15) (undo-tree-id429 . 44) (undo-tree-id430 . 31) (undo-tree-id431 . -2) (undo-tree-id432 . 46) (undo-tree-id433 . 44) (undo-tree-id434 . 46) (undo-tree-id435 . 46) (undo-tree-id436 . -46)) nil (25297 38479 882245 0) 0 nil])
([nil nil ((nil fontified nil 166 . 167) (nil fontified nil 165 . 166) (nil fontified nil 158 . 165) (nil fontified nil 150 . 158) (nil fontified nil 149 . 150) (nil fontified nil 148 . 149) (nil fontified nil 143 . 148) (nil fontified nil 142 . 143) (nil fontified nil 141 . 142) (nil fontified nil 139 . 141) (nil fontified nil 138 . 139) (nil fontified nil 134 . 138) (nil fontified nil 133 . 134) (nil fontified nil 132 . 133) (nil fontified nil 131 . 132) (nil fontified nil 128 . 131) (nil fontified nil 127 . 128) (nil fontified nil 126 . 127) (nil fontified nil 125 . 126) (nil fontified nil 122 . 125) (nil fontified nil 121 . 122) (121 . 167)) nil (25297 38479 882214 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -156) (undo-tree-id460 . -1) 157 (t 25297 38479 0 0)) nil (25297 39072 924028 0) 0 nil])
([nil nil ((156 . 158)) nil (25297 39072 924026 0) 0 nil])
([nil nil ((157 . 163)) nil (25297 39072 924026 0) 0 nil])
([nil nil ((163 . 165)) nil (25297 39072 924025 0) 0 nil])
([nil nil ((164 . 169)) nil (25297 39072 924024 0) 0 nil])
([nil nil ((169 . 171)) nil (25297 39072 924024 0) 0 nil])
([nil nil ((170 . 175)) nil (25297 39072 924023 0) 0 nil])
([nil nil ((173 . 181) (150 . 151) (#("      " 0 6 (fontified nil)) . 150) (177 . 178)) nil (25297 39072 924021 0) 0 nil])
([nil nil ((181 . 182)) nil (25297 39072 924020 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -190) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . 1) (undo-tree-id458 . 1) (undo-tree-id459 . -1) 191) nil (25297 39072 924017 0) 0 nil])
([nil nil ((190 . 191)) nil (25297 39072 924004 0) 0 nil])
([nil nil ((163 . 164) (t 25297 39072 0 0)) nil (25297 39097 266210 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -163) (undo-tree-id461 . -1) (undo-tree-id462 . 1) (undo-tree-id463 . -1) 164) nil (25297 39097 266208 0) 0 nil])
([nil nil ((163 . 165)) nil (25297 39097 266195 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -212) (undo-tree-id465 . -1) 213 (t 25297 39097 0 0)) nil (25297 39121 514567 0) 0 nil])
([nil nil ((212 . 213)) nil (25297 39121 514565 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -233) (undo-tree-id464 . -1) 234) nil (25297 39121 514563 0) 0 nil])
([nil nil ((233 . 234)) nil (25297 39121 514552 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -212) (undo-tree-id471 . -1) 213 (t 25297 39121 0 0)) nil (25297 39220 824911 0) 0 nil])
([nil nil ((212 . 213)) nil (25297 39220 824909 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -233) (undo-tree-id470 . -1) 234) nil (25297 39220 824908 0) 0 nil])
([nil nil ((233 . 234)) nil (25297 39220 824906 0) 0 nil])
([nil nil ((219 . 220)) nil (25297 39220 824906 0) 0 nil])
([nil nil ((#("(define f1 (f 1))
f1" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 15 (fontified t) 15 16 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 16 17 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t) 18 20 (fontified t)) . 220) (undo-tree-id466 . -18) (undo-tree-id467 . -20) (undo-tree-id468 . -17) (undo-tree-id469 . -20) 240) nil (25297 39220 824904 0) 0 nil])
([nil nil ((197 . 199)) nil (25297 39220 824894 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 217 . 218) (nil fontified nil 216 . 218) (nil fontified nil 215 . 216) (nil fontified nil 214 . 215) (nil fontified nil 213 . 214) (nil fontified nil 210 . 213) (nil fontified nil 209 . 210) (nil fontified nil 208 . 209) (nil fontified nil 206 . 208) (nil fontified nil 205 . 206) (nil fontified nil 199 . 205) (nil fontified nil 198 . 199) (198 . 218)) nil (25297 39220 824888 0) 0 nil])
([nil nil ((197 . 198) (t 25297 39220 0 0)) nil (25297 39228 401298 0) 0 nil])
([nil nil ((115 . 118) (t 25297 39228 0 0)) nil (25297 39557 111077 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-function-name-face)) . -115) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -116) (undo-tree-id555 . -1) (#("c" 0 1 (fontified t face font-lock-function-name-face)) . -117) (undo-tree-id556 . -1) 118) nil (25297 39557 111075 0) 0 nil])
([nil nil ((115 . 122)) nil (25297 39557 111071 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-function-name-face)) . -115) (undo-tree-id490 . -1) (undo-tree-id491 . 1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -116) (undo-tree-id505 . -1) (undo-tree-id506 . 1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("c" 0 1 (fontified t face font-lock-function-name-face)) . -117) (undo-tree-id518 . -1) (undo-tree-id519 . 1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -118) (undo-tree-id529 . -1) (undo-tree-id530 . 1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -119) (undo-tree-id538 . -1) (undo-tree-id539 . 1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . -120) (undo-tree-id545 . -1) (undo-tree-id546 . 1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -121) (undo-tree-id550 . -1) (undo-tree-id551 . 1) (undo-tree-id552 . -1) 122) nil (25297 39557 505817 0) 0 nil])
([nil nil ((197 . 199)) nil (25297 39570 191148 0) 0 nil] [nil nil ((#("f" 0 1 (fontified t face font-lock-function-name-face)) . -114) (undo-tree-id472 . -1) (undo-tree-id473 . 1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) 115) ((114 . 115)) (25297 39557 111151 0) 0 nil])
([nil nil ((nil fontified nil 289 . 290) (nil fontified nil 288 . 289) (nil fontified nil 287 . 288) (nil fontified nil 280 . 287) (nil fontified nil 279 . 280) (nil fontified nil 278 . 279) (nil fontified nil 269 . 278) (nil fontified nil 268 . 269) (nil fontified nil 267 . 268) (nil fontified nil 266 . 267) (nil fontified nil 261 . 266) (nil fontified nil 260 . 261) (nil fontified nil 259 . 260) (nil fontified nil 257 . 259) (nil fontified nil 253 . 257) (nil fontified nil 252 . 253) (nil fontified nil 251 . 252) (nil fontified nil 246 . 251) (nil fontified nil 245 . 246) (nil fontified nil 244 . 245) (nil fontified nil 243 . 244) (nil fontified nil 242 . 243) (nil fontified nil 237 . 242) (nil fontified nil 236 . 237) (nil fontified nil 235 . 236) (nil fontified nil 233 . 235) (nil fontified nil 232 . 233) (nil fontified nil 228 . 232) (nil fontified nil 227 . 228) (nil fontified nil 226 . 227) (nil fontified nil 225 . 226) (nil fontified nil 222 . 225) (nil fontified nil 221 . 222) (nil fontified nil 220 . 221) (nil fontified nil 219 . 220) (nil fontified nil 216 . 219) (nil fontified nil 215 . 216) (nil fontified nil 213 . 215) (nil fontified nil 212 . 213) (nil fontified nil 211 . 212) (nil fontified nil 209 . 211) (nil fontified nil 208 . 209) (nil fontified nil 207 . 208) (nil fontified nil 206 . 207) (nil fontified nil 200 . 206) (nil fontified nil 199 . 200) (199 . 290)) nil (25297 39570 191145 0) 0 nil])
([nil nil ((114 . 115)) ((#("g" 0 1 (fontified t face font-lock-function-name-face)) . 114)) (25297 39557 110985 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-function-name-face)) . -208) (undo-tree-id570 . -1) (undo-tree-id571 . -1) 209) nil (25297 39570 191135 0) 0 nil])
nil
([nil nil ((208 . 209)) nil (25297 39570 191132 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -209) (undo-tree-id557 . -1) (undo-tree-id558 . 1) (undo-tree-id559 . 1) (undo-tree-id560 . 1) (undo-tree-id561 . 1) (undo-tree-id562 . 1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (#("x" 0 1 (fontified t)) . -210) (undo-tree-id566 . -1) (undo-tree-id567 . 1) (undo-tree-id568 . 1) (undo-tree-id569 . -1) 211) nil (25297 39570 191127 0) 0 nil])
([nil nil ((#("(let ((a 0))
    (if (= x 1)
	(begin (set! a (+ a 1))
	       0)
      a))" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-4-face)) 11 12 (fontified t face (rainbow-delimiters-depth-3-face)) 12 13 (fontified t) 13 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-3-face)) 18 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-4-face)) 22 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-4-face)) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-4-face)) 31 36 (fontified t face font-lock-keyword-face) 36 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-5-face)) 38 42 (fontified t face font-lock-keyword-face) 42 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-6-face)) 46 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-6-face)) 52 53 (fontified t face (rainbow-delimiters-depth-5-face)) 53 54 (fontified t) 54 63 (fontified t) 63 64 (fontified t face (rainbow-delimiters-depth-4-face)) 64 65 (fontified t) 65 72 (fontified t) 72 73 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-3-face)) 73 74 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face))) . 213) (undo-tree-id572 . -74) (undo-tree-id573 . -13) (undo-tree-id574 . 66) (undo-tree-id575 . -8) (undo-tree-id576 . 67) (undo-tree-id577 . 66) (undo-tree-id578 . -7) (undo-tree-id579 . 68) (undo-tree-id580 . 67) (undo-tree-id581 . -6) (undo-tree-id582 . 69) (undo-tree-id583 . 68) (undo-tree-id584 . -5) (undo-tree-id585 . 70) (undo-tree-id586 . 69) (undo-tree-id587 . -4) (undo-tree-id588 . 71) (undo-tree-id589 . 70) (undo-tree-id590 . -3) (undo-tree-id591 . 72) (undo-tree-id592 . 71) (undo-tree-id593 . -2) (undo-tree-id594 . 73) (undo-tree-id595 . 72) (undo-tree-id596 . -1) (undo-tree-id597 . 74) (undo-tree-id598 . 73) (undo-tree-id599 . 74) (undo-tree-id600 . 74) (undo-tree-id601 . 74) (undo-tree-id602 . 74) (undo-tree-id603 . 74) (undo-tree-id604 . 74) (undo-tree-id605 . -74) (undo-tree-id606 . 74) (undo-tree-id607 . 74) (undo-tree-id608 . -74) (t 25297 39570 0 0)) nil (25297 39615 988404 0) 0 nil])
([nil nil ((198 . 200)) nil (25297 39615 988374 0) 0 nil])
([nil nil ((nil fontified nil 272 . 273) (nil fontified nil 271 . 272) (nil fontified nil 264 . 271) (nil fontified nil 263 . 264) (nil fontified nil 262 . 263) (nil fontified nil 253 . 262) (nil fontified nil 252 . 253) (nil fontified nil 251 . 252) (nil fontified nil 250 . 251) (nil fontified nil 245 . 250) (nil fontified nil 244 . 245) (nil fontified nil 243 . 244) (nil fontified nil 241 . 243) (nil fontified nil 237 . 241) (nil fontified nil 236 . 237) (nil fontified nil 235 . 236) (nil fontified nil 230 . 235) (nil fontified nil 229 . 230) (nil fontified nil 228 . 229) (nil fontified nil 227 . 228) (nil fontified nil 226 . 227) (nil fontified nil 221 . 226) (nil fontified nil 220 . 221) (nil fontified nil 219 . 220) (nil fontified nil 217 . 219) (nil fontified nil 216 . 217) (nil fontified nil 212 . 216) (nil fontified nil 211 . 212) (nil fontified nil 210 . 211) (nil fontified nil 209 . 210) (nil fontified nil 206 . 209) (nil fontified nil 205 . 206) (nil fontified nil 204 . 205) (nil fontified nil 203 . 204) (nil fontified nil 200 . 203) (nil fontified nil 199 . 200) (199 . 273)) nil (25297 39615 988368 0) 0 nil])
([nil nil ((289 . 291) (t 25297 39615 0 0)) nil (25297 39633 205546 0) 0 nil])
([nil nil ((290 . 297)) nil (25297 39633 205545 0) 0 nil])
([nil nil ((297 . 299)) nil (25297 39633 205544 0) 0 nil])
([nil nil ((298 . 299)) nil (25297 39633 205542 0) 0 nil])
([nil nil ((300 . 302)) nil (25297 39633 205537 0) 0 nil])
([nil nil ((301 . 305) (#(" " 0 1 (fontified nil)) . 300) (undo-tree-id749 . -1) (301 . 302) (t 25297 39633 0 0)) nil (25297 39704 315341 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -305) (undo-tree-id748 . -1) 306) nil (25297 39704 315338 0) 0 nil])
([nil nil ((#("(let ((a 0))
    (if (= x 1)
	(begin (set! a (+ a 1))
	       0)
      a))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 13 (fontified t) 13 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-3-face)) 31 36 (fontified t face font-lock-keyword-face) 36 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-4-face)) 38 42 (fontified t face font-lock-keyword-face) 42 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-5-face)) 46 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-5-face)) 52 53 (fontified t face (rainbow-delimiters-depth-4-face)) 53 54 (fontified t) 54 63 (fontified t) 63 64 (fontified t face (rainbow-delimiters-depth-3-face)) 64 65 (fontified t) 65 72 (fontified t) 72 73 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 73 74 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 199) (undo-tree-id745 . -74) (undo-tree-id746 . -13) (undo-tree-id747 . -74)) nil (25297 39704 315336 0) 0 nil])
([nil nil ((nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 296 . 303) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 285 . 294) (nil fontified nil 284 . 285) (nil fontified nil 283 . 284) (nil fontified nil 282 . 283) (nil fontified nil 277 . 282) (nil fontified nil 276 . 277) (nil fontified nil 275 . 276) (nil fontified nil 273 . 275) (nil fontified nil 269 . 273) (nil fontified nil 268 . 269) (nil fontified nil 267 . 268) (nil fontified nil 262 . 267) (nil fontified nil 261 . 262) (nil fontified nil 260 . 261) (nil fontified nil 259 . 260) (nil fontified nil 258 . 259) (nil fontified nil 253 . 258) (nil fontified nil 252 . 253) (nil fontified nil 251 . 252) (nil fontified nil 249 . 251) (nil fontified nil 248 . 249) (nil fontified nil 244 . 248) (nil fontified nil 243 . 244) (nil fontified nil 242 . 243) (nil fontified nil 241 . 242) (nil fontified nil 238 . 241) (nil fontified nil 237 . 238) (nil fontified nil 236 . 237) (nil fontified nil 235 . 236) (nil fontified nil 232 . 235) (nil fontified nil 231 . 232) (231 . 305)) nil (25297 39704 315332 0) 0 nil])
([nil nil ((248 . 250) 253) nil (25297 39704 315325 0) 0 nil])
([nil nil ((263 . 265) 266) nil (25297 39704 315324 0) 0 nil])
([nil nil ((290 . 292) (#("       " 0 7 (fontified t)) . 290) (undo-tree-id744 . -5) 295) nil (25297 39704 315323 0) 0 nil])
([nil nil ((295 . 300)) nil (25297 39704 315320 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -299) (undo-tree-id742 . -1) (undo-tree-id743 . -1) 300) nil (25297 39704 315319 0) 0 nil])
([nil nil ((201 . 204) (187 . 190) (159 . 162) (140 . 143) (122 . 125) (105 . 108)) nil (25297 39704 315316 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -99) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (#("
" 0 1 (fontified t)) . -100) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . 1) (undo-tree-id671 . 1) (undo-tree-id672 . 1) (undo-tree-id673 . 1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (#("
" 0 1 (fontified t)) . -101) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . 1) (undo-tree-id706 . 1) (undo-tree-id707 . 1) (undo-tree-id708 . 1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#("
" 0 1 (fontified t)) . -102) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . 1) (undo-tree-id736 . -1) (undo-tree-id737 . 1) (undo-tree-id738 . 1) (undo-tree-id739 . 1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) 103) nil (25297 39704 315306 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -211) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . 1) (undo-tree-id769 . 1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#("
" 0 1 (fontified t)) . -212) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . 1) (undo-tree-id779 . 1) (undo-tree-id780 . -1) 213 (t 25297 39704 0 0)) nil (25297 39724 450930 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -211) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . 1) (undo-tree-id753 . 1) (undo-tree-id754 . 1) (undo-tree-id755 . 1) (undo-tree-id756 . 1) (undo-tree-id757 . 1) (undo-tree-id758 . 1) (undo-tree-id759 . 1) (undo-tree-id760 . 1) (undo-tree-id761 . 1) (undo-tree-id762 . -1) 212) nil (25297 39724 450917 0) 0 nil])
([nil nil ((321 . 323)) nil (25297 39724 450902 0) 0 nil])
([nil nil ((323 . 325)) nil (25297 39724 450902 0) 0 nil])
([nil nil ((324 . 333)) nil (25297 39724 450901 0) 0 nil])
([nil nil ((333 . 335)) nil (25297 39724 450899 0) 0 nil])
([nil nil ((334 . 335)) nil (25297 39724 450895 0) 0 nil])
([nil nil ((#("(define f1 (f 1))
f1" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 15 (fontified t) 15 16 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 16 17 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t) 18 19 (fontified t) 19 20 (rear-nonsticky t fontified t)) . 339) (undo-tree-id781 . -20) (undo-tree-id782 . -18) (undo-tree-id783 . -20) (undo-tree-id784 . -20) (t 25297 39724 0 0)) nil (25297 39873 561950 0) 0 nil])
([nil nil ((362 . 363)) nil (25297 39873 561940 0) 0 nil])
([nil nil ((nil fontified nil 382 . 383) (nil fontified nil 381 . 382) (nil fontified nil 380 . 381) (nil fontified nil 379 . 380) (nil fontified nil 378 . 379) (nil fontified nil 375 . 378) (nil fontified nil 374 . 375) (nil fontified nil 373 . 374) (nil fontified nil 371 . 373) (nil fontified nil 370 . 371) (nil fontified nil 364 . 370) (nil fontified nil 363 . 364) (363 . 383)) nil (25297 39873 561939 0) 0 nil])
([nil nil ((254 . 261)) nil (25297 39873 561936 0) 0 nil])
([nil nil ((261 . 263)) nil (25297 39873 561935 0) 0 nil])
([nil nil ((262 . 271)) nil (25297 39873 561930 0) 0 nil])
([nil nil ((270 . 273) (t 25297 39873 0 0)) nil (25297 39896 336663 0) 0 nil])
([nil nil ((271 . 287)) nil (25297 39896 336657 0) 0 nil])
([nil nil ((#("(display \"The value of a: \" a)" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 9 (fontified t) 9 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-4-face))) . 261) (undo-tree-id1510 . -30) (undo-tree-id1511 . 1) (undo-tree-id1512 . 1) (undo-tree-id1513 . -29) (undo-tree-id1514 . 1) (undo-tree-id1515 . 1) (undo-tree-id1516 . -29) (undo-tree-id1517 . 1) (undo-tree-id1518 . 30) (undo-tree-id1519 . 30) (undo-tree-id1520 . 30) (undo-tree-id1521 . 30) (undo-tree-id1522 . 30) (undo-tree-id1523 . -30) (t 25297 39896 0 0)) nil (25297 39970 468195 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 290 . 291) (nil fontified nil 290 . 291) (nil fontified nil 289 . 290) (nil fontified nil 288 . 289) (nil fontified nil 287 . 288) (nil fontified nil 270 . 287) (nil fontified nil 262 . 270) (nil fontified nil 261 . 262) (261 . 291)) nil (25297 39970 468184 0) 0 nil])
([nil nil ((291 . 298)) nil (25297 39970 468182 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 327 . 328) (nil fontified nil 327 . 328) (nil fontified nil 326 . 327) (nil fontified nil 325 . 326) (nil fontified nil 324 . 325) (nil fontified nil 307 . 324) (nil fontified nil 299 . 307) (nil fontified nil 298 . 299) (298 . 328)) nil (25297 39970 468180 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 307) (undo-tree-id785 . -1) (undo-tree-id786 . 1) (undo-tree-id787 . 1) (undo-tree-id788 . 1) (undo-tree-id789 . 1) (undo-tree-id790 . 1) (undo-tree-id791 . 1) (undo-tree-id792 . 1) (undo-tree-id793 . 1) (undo-tree-id794 . 1) (undo-tree-id795 . 1) (undo-tree-id796 . 1) (undo-tree-id797 . 1) (undo-tree-id798 . 1) (undo-tree-id799 . 1) (undo-tree-id800 . 1) (undo-tree-id801 . 1) (undo-tree-id802 . 1) (undo-tree-id803 . 1) (undo-tree-id804 . 1) (undo-tree-id805 . 1) (undo-tree-id806 . 1) (undo-tree-id807 . 1) (undo-tree-id808 . 1) (undo-tree-id809 . 1) (undo-tree-id810 . 1) (undo-tree-id811 . 1) (undo-tree-id812 . 1) (undo-tree-id813 . 1) (undo-tree-id814 . 1) (undo-tree-id815 . 1) (undo-tree-id816 . 1) (undo-tree-id817 . 1) (undo-tree-id818 . 1) (undo-tree-id819 . 1) (undo-tree-id820 . 1) (undo-tree-id821 . 1) (undo-tree-id822 . 1) (undo-tree-id823 . 1) (undo-tree-id824 . 1) (undo-tree-id825 . 1) (undo-tree-id826 . 1) (undo-tree-id827 . 1) (undo-tree-id828 . 1) (undo-tree-id829 . 1) (undo-tree-id830 . 1) (undo-tree-id831 . 1) (undo-tree-id832 . 1) (undo-tree-id833 . 1) (undo-tree-id834 . 1) (undo-tree-id835 . 1) (undo-tree-id836 . 1) (undo-tree-id837 . 1) (undo-tree-id838 . 1) (undo-tree-id839 . 1) (undo-tree-id840 . 1) (undo-tree-id841 . 1) (undo-tree-id842 . 1) (undo-tree-id843 . 1) (undo-tree-id844 . 1) (undo-tree-id845 . 1) (undo-tree-id846 . 1) (undo-tree-id847 . 1) (undo-tree-id848 . 1) (undo-tree-id849 . 1) (undo-tree-id850 . 1) (undo-tree-id851 . 1) (undo-tree-id852 . 1) (undo-tree-id853 . 1) (undo-tree-id854 . 1) (undo-tree-id855 . 1) (undo-tree-id856 . 1) (undo-tree-id857 . 1) (undo-tree-id858 . 1) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 307) (undo-tree-id859 . -1) (undo-tree-id860 . 1) (undo-tree-id861 . 1) (undo-tree-id862 . 1) (undo-tree-id863 . 1) (undo-tree-id864 . 1) (undo-tree-id865 . 1) (undo-tree-id866 . 1) (undo-tree-id867 . 1) (undo-tree-id868 . 1) (undo-tree-id869 . 1) (undo-tree-id870 . 1) (undo-tree-id871 . 1) (undo-tree-id872 . 1) (undo-tree-id873 . 1) (undo-tree-id874 . 1) (undo-tree-id875 . 1) (undo-tree-id876 . 1) (undo-tree-id877 . 1) (undo-tree-id878 . 1) (undo-tree-id879 . 1) (undo-tree-id880 . 1) (undo-tree-id881 . 1) (undo-tree-id882 . 1) (undo-tree-id883 . 1) (undo-tree-id884 . 1) (undo-tree-id885 . 1) (undo-tree-id886 . 1) (undo-tree-id887 . 1) (undo-tree-id888 . 1) (undo-tree-id889 . 1) (undo-tree-id890 . 1) (undo-tree-id891 . 1) (undo-tree-id892 . 1) (undo-tree-id893 . 1) (undo-tree-id894 . 1) (undo-tree-id895 . 1) (undo-tree-id896 . 1) (undo-tree-id897 . 1) (undo-tree-id898 . 1) (undo-tree-id899 . 1) (undo-tree-id900 . 1) (undo-tree-id901 . 1) (undo-tree-id902 . 1) (undo-tree-id903 . 1) (undo-tree-id904 . 1) (undo-tree-id905 . 1) (undo-tree-id906 . 1) (undo-tree-id907 . 1) (undo-tree-id908 . 1) (undo-tree-id909 . 1) (undo-tree-id910 . 1) (undo-tree-id911 . 1) (undo-tree-id912 . 1) (undo-tree-id913 . 1) (undo-tree-id914 . 1) (undo-tree-id915 . 1) (undo-tree-id916 . 1) (undo-tree-id917 . 1) (undo-tree-id918 . 1) (undo-tree-id919 . 1) (undo-tree-id920 . 1) (undo-tree-id921 . 1) (undo-tree-id922 . 1) (undo-tree-id923 . 1) (undo-tree-id924 . 1) (undo-tree-id925 . 1) (undo-tree-id926 . 1) (undo-tree-id927 . 1) (undo-tree-id928 . 1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -307) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . 1) (undo-tree-id948 . 1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id966 . -1) (undo-tree-id967 . 1) (undo-tree-id968 . 1) (undo-tree-id969 . 1) (undo-tree-id970 . 1) (undo-tree-id971 . 1) (undo-tree-id972 . 1) (undo-tree-id973 . 1) (undo-tree-id974 . 1) (undo-tree-id975 . 1) (undo-tree-id976 . 1) (undo-tree-id977 . 1) (undo-tree-id978 . 1) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . 1) (undo-tree-id982 . 1) (undo-tree-id983 . 1) (undo-tree-id984 . 1) (undo-tree-id985 . 1) (undo-tree-id986 . 1) (undo-tree-id987 . 1) (undo-tree-id988 . 1) (undo-tree-id989 . 1) (undo-tree-id990 . 1) (undo-tree-id991 . 1) (undo-tree-id992 . 1) (undo-tree-id993 . 1) (undo-tree-id994 . 1) (undo-tree-id995 . 1) (undo-tree-id996 . 1) (undo-tree-id997 . 1) (undo-tree-id998 . 1) (undo-tree-id999 . 1) (undo-tree-id1000 . 1) (undo-tree-id1001 . 1) (undo-tree-id1002 . 1) (undo-tree-id1003 . 1) (undo-tree-id1004 . 1) (undo-tree-id1005 . 1) (undo-tree-id1006 . 1) (undo-tree-id1007 . 1) (undo-tree-id1008 . 1) (undo-tree-id1009 . 1) (undo-tree-id1010 . 1) (undo-tree-id1011 . 1) (undo-tree-id1012 . 1) (undo-tree-id1013 . 1) (undo-tree-id1014 . 1) (undo-tree-id1015 . 1) (undo-tree-id1016 . 1) (undo-tree-id1017 . 1) (undo-tree-id1018 . 1) (undo-tree-id1019 . 1) (undo-tree-id1020 . 1) (undo-tree-id1021 . 1) (undo-tree-id1022 . 1) (undo-tree-id1023 . 1) (undo-tree-id1024 . 1) (undo-tree-id1025 . 1) (undo-tree-id1026 . 1) (undo-tree-id1027 . 1) (undo-tree-id1028 . 1) (undo-tree-id1029 . 1) (#(":" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1030 . -1) (undo-tree-id1031 . 1) (undo-tree-id1032 . 1) (undo-tree-id1033 . 1) (undo-tree-id1034 . 1) (undo-tree-id1035 . 1) (undo-tree-id1036 . 1) (undo-tree-id1037 . 1) (undo-tree-id1038 . 1) (undo-tree-id1039 . 1) (undo-tree-id1040 . 1) (undo-tree-id1041 . 1) (undo-tree-id1042 . 1) (undo-tree-id1043 . 1) (undo-tree-id1044 . 1) (undo-tree-id1045 . 1) (undo-tree-id1046 . 1) (undo-tree-id1047 . 1) (undo-tree-id1048 . 1) (undo-tree-id1049 . 1) (undo-tree-id1050 . 1) (undo-tree-id1051 . 1) (undo-tree-id1052 . 1) (undo-tree-id1053 . 1) (undo-tree-id1054 . 1) (undo-tree-id1055 . 1) (undo-tree-id1056 . 1) (undo-tree-id1057 . 1) (undo-tree-id1058 . 1) (undo-tree-id1059 . 1) (undo-tree-id1060 . 1) (undo-tree-id1061 . 1) (undo-tree-id1062 . 1) (undo-tree-id1063 . 1) (undo-tree-id1064 . 1) (undo-tree-id1065 . 1) (undo-tree-id1066 . 1) (undo-tree-id1067 . 1) (undo-tree-id1068 . 1) (undo-tree-id1069 . 1) (undo-tree-id1070 . 1) (undo-tree-id1071 . 1) (undo-tree-id1072 . 1) (undo-tree-id1073 . 1) (undo-tree-id1074 . 1) (undo-tree-id1075 . 1) (undo-tree-id1076 . 1) (undo-tree-id1077 . 1) (undo-tree-id1078 . 1) (undo-tree-id1079 . 1) (undo-tree-id1080 . 1) (undo-tree-id1081 . 1) (undo-tree-id1082 . 1) (undo-tree-id1083 . 1) (undo-tree-id1084 . 1) (undo-tree-id1085 . 1) (undo-tree-id1086 . 1) (undo-tree-id1087 . 1) (undo-tree-id1088 . 1) (undo-tree-id1089 . 1) (#("a" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1090 . -1) (undo-tree-id1091 . 1) (undo-tree-id1092 . 1) (undo-tree-id1093 . 1) (undo-tree-id1094 . 1) (undo-tree-id1095 . 1) (undo-tree-id1096 . 1) (undo-tree-id1097 . 1) (undo-tree-id1098 . 1) (undo-tree-id1099 . 1) (undo-tree-id1100 . 1) (undo-tree-id1101 . 1) (undo-tree-id1102 . 1) (undo-tree-id1103 . 1) (undo-tree-id1104 . 1) (undo-tree-id1105 . 1) (undo-tree-id1106 . 1) (undo-tree-id1107 . 1) (undo-tree-id1108 . 1) (undo-tree-id1109 . 1) (undo-tree-id1110 . 1) (undo-tree-id1111 . 1) (undo-tree-id1112 . 1) (undo-tree-id1113 . 1) (undo-tree-id1114 . 1) (undo-tree-id1115 . 1) (undo-tree-id1116 . 1) (undo-tree-id1117 . 1) (undo-tree-id1118 . 1) (undo-tree-id1119 . 1) (undo-tree-id1120 . 1) (undo-tree-id1121 . 1) (undo-tree-id1122 . 1) (undo-tree-id1123 . 1) (undo-tree-id1124 . 1) (undo-tree-id1125 . 1) (undo-tree-id1126 . 1) (undo-tree-id1127 . 1) (undo-tree-id1128 . 1) (undo-tree-id1129 . 1) (undo-tree-id1130 . 1) (undo-tree-id1131 . 1) (undo-tree-id1132 . 1) (undo-tree-id1133 . 1) (undo-tree-id1134 . 1) (undo-tree-id1135 . 1) (undo-tree-id1136 . 1) (undo-tree-id1137 . 1) (undo-tree-id1138 . 1) (undo-tree-id1139 . 1) (undo-tree-id1140 . 1) (undo-tree-id1141 . 1) (undo-tree-id1142 . 1) (undo-tree-id1143 . 1) (undo-tree-id1144 . 1) (undo-tree-id1145 . 1) (#(" " 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1146 . -1) (undo-tree-id1147 . 1) (undo-tree-id1148 . 1) (undo-tree-id1149 . 1) (undo-tree-id1150 . 1) (undo-tree-id1151 . 1) (undo-tree-id1152 . 1) (undo-tree-id1153 . 1) (undo-tree-id1154 . 1) (undo-tree-id1155 . 1) (undo-tree-id1156 . 1) (undo-tree-id1157 . 1) (undo-tree-id1158 . 1) (undo-tree-id1159 . 1) (undo-tree-id1160 . 1) (undo-tree-id1161 . 1) (undo-tree-id1162 . 1) (undo-tree-id1163 . 1) (undo-tree-id1164 . 1) (undo-tree-id1165 . 1) (undo-tree-id1166 . 1) (undo-tree-id1167 . 1) (undo-tree-id1168 . 1) (undo-tree-id1169 . 1) (undo-tree-id1170 . 1) (undo-tree-id1171 . 1) (undo-tree-id1172 . 1) (undo-tree-id1173 . 1) (undo-tree-id1174 . 1) (undo-tree-id1175 . 1) (undo-tree-id1176 . 1) (undo-tree-id1177 . 1) (undo-tree-id1178 . 1) (undo-tree-id1179 . 1) (undo-tree-id1180 . 1) (undo-tree-id1181 . 1) (undo-tree-id1182 . 1) (undo-tree-id1183 . 1) (undo-tree-id1184 . 1) (undo-tree-id1185 . 1) (undo-tree-id1186 . 1) (undo-tree-id1187 . 1) (undo-tree-id1188 . 1) (undo-tree-id1189 . 1) (undo-tree-id1190 . 1) (undo-tree-id1191 . 1) (undo-tree-id1192 . 1) (undo-tree-id1193 . 1) (undo-tree-id1194 . 1) (undo-tree-id1195 . 1) (undo-tree-id1196 . 1) (undo-tree-id1197 . 1) (#("f" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1198 . -1) (undo-tree-id1199 . 1) (undo-tree-id1200 . 1) (undo-tree-id1201 . 1) (undo-tree-id1202 . 1) (undo-tree-id1203 . 1) (undo-tree-id1204 . 1) (undo-tree-id1205 . 1) (undo-tree-id1206 . 1) (undo-tree-id1207 . 1) (undo-tree-id1208 . 1) (undo-tree-id1209 . 1) (undo-tree-id1210 . 1) (undo-tree-id1211 . 1) (undo-tree-id1212 . 1) (undo-tree-id1213 . 1) (undo-tree-id1214 . 1) (undo-tree-id1215 . 1) (undo-tree-id1216 . 1) (undo-tree-id1217 . 1) (undo-tree-id1218 . 1) (undo-tree-id1219 . 1) (undo-tree-id1220 . 1) (undo-tree-id1221 . 1) (undo-tree-id1222 . 1) (undo-tree-id1223 . 1) (undo-tree-id1224 . 1) (undo-tree-id1225 . 1) (undo-tree-id1226 . 1) (undo-tree-id1227 . 1) (undo-tree-id1228 . 1) (undo-tree-id1229 . 1) (undo-tree-id1230 . 1) (undo-tree-id1231 . 1) (undo-tree-id1232 . 1) (undo-tree-id1233 . 1) (undo-tree-id1234 . 1) (undo-tree-id1235 . 1) (undo-tree-id1236 . 1) (undo-tree-id1237 . 1) (undo-tree-id1238 . 1) (undo-tree-id1239 . 1) (undo-tree-id1240 . 1) (undo-tree-id1241 . 1) (undo-tree-id1242 . 1) (undo-tree-id1243 . 1) (undo-tree-id1244 . 1) (undo-tree-id1245 . 1) (#("o" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1246 . -1) (undo-tree-id1247 . 1) (undo-tree-id1248 . 1) (undo-tree-id1249 . 1) (undo-tree-id1250 . 1) (undo-tree-id1251 . 1) (undo-tree-id1252 . 1) (undo-tree-id1253 . 1) (undo-tree-id1254 . 1) (undo-tree-id1255 . 1) (undo-tree-id1256 . 1) (undo-tree-id1257 . 1) (undo-tree-id1258 . 1) (undo-tree-id1259 . 1) (undo-tree-id1260 . 1) (undo-tree-id1261 . 1) (undo-tree-id1262 . 1) (undo-tree-id1263 . 1) (undo-tree-id1264 . 1) (undo-tree-id1265 . 1) (undo-tree-id1266 . 1) (undo-tree-id1267 . 1) (undo-tree-id1268 . 1) (undo-tree-id1269 . 1) (undo-tree-id1270 . 1) (undo-tree-id1271 . 1) (undo-tree-id1272 . 1) (undo-tree-id1273 . 1) (undo-tree-id1274 . 1) (undo-tree-id1275 . 1) (undo-tree-id1276 . 1) (undo-tree-id1277 . 1) (undo-tree-id1278 . 1) (undo-tree-id1279 . 1) (undo-tree-id1280 . 1) (undo-tree-id1281 . 1) (undo-tree-id1282 . 1) (undo-tree-id1283 . 1) (undo-tree-id1284 . 1) (undo-tree-id1285 . 1) (undo-tree-id1286 . 1) (undo-tree-id1287 . 1) (undo-tree-id1288 . 1) (undo-tree-id1289 . 1) (#(" " 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1290 . -1) (undo-tree-id1291 . 1) (undo-tree-id1292 . 1) (undo-tree-id1293 . 1) (undo-tree-id1294 . 1) (undo-tree-id1295 . 1) (undo-tree-id1296 . 1) (undo-tree-id1297 . 1) (undo-tree-id1298 . 1) (undo-tree-id1299 . 1) (undo-tree-id1300 . 1) (undo-tree-id1301 . 1) (undo-tree-id1302 . 1) (undo-tree-id1303 . 1) (undo-tree-id1304 . 1) (undo-tree-id1305 . 1) (undo-tree-id1306 . 1) (undo-tree-id1307 . 1) (undo-tree-id1308 . 1) (undo-tree-id1309 . 1) (undo-tree-id1310 . 1) (undo-tree-id1311 . 1) (undo-tree-id1312 . 1) (undo-tree-id1313 . 1) (undo-tree-id1314 . 1) (undo-tree-id1315 . 1) (undo-tree-id1316 . 1) (undo-tree-id1317 . 1) (undo-tree-id1318 . 1) (undo-tree-id1319 . 1) (undo-tree-id1320 . 1) (undo-tree-id1321 . 1) (undo-tree-id1322 . 1) (undo-tree-id1323 . 1) (undo-tree-id1324 . 1) (undo-tree-id1325 . 1) (undo-tree-id1326 . 1) (undo-tree-id1327 . 1) (undo-tree-id1328 . 1) (undo-tree-id1329 . 1) (#("e" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1330 . -1) (undo-tree-id1331 . 1) (undo-tree-id1332 . 1) (undo-tree-id1333 . 1) (undo-tree-id1334 . 1) (undo-tree-id1335 . 1) (undo-tree-id1336 . 1) (undo-tree-id1337 . 1) (undo-tree-id1338 . 1) (undo-tree-id1339 . 1) (undo-tree-id1340 . 1) (undo-tree-id1341 . 1) (undo-tree-id1342 . 1) (undo-tree-id1343 . 1) (undo-tree-id1344 . 1) (undo-tree-id1345 . 1) (undo-tree-id1346 . 1) (undo-tree-id1347 . 1) (undo-tree-id1348 . 1) (undo-tree-id1349 . 1) (undo-tree-id1350 . 1) (undo-tree-id1351 . 1) (undo-tree-id1352 . 1) (undo-tree-id1353 . 1) (undo-tree-id1354 . 1) (undo-tree-id1355 . 1) (undo-tree-id1356 . 1) (undo-tree-id1357 . 1) (undo-tree-id1358 . 1) (undo-tree-id1359 . 1) (undo-tree-id1360 . 1) (undo-tree-id1361 . 1) (undo-tree-id1362 . 1) (undo-tree-id1363 . 1) (undo-tree-id1364 . 1) (undo-tree-id1365 . 1) (#("u" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1366 . -1) (undo-tree-id1367 . 1) (undo-tree-id1368 . 1) (undo-tree-id1369 . 1) (undo-tree-id1370 . 1) (undo-tree-id1371 . 1) (undo-tree-id1372 . 1) (undo-tree-id1373 . 1) (undo-tree-id1374 . 1) (undo-tree-id1375 . 1) (undo-tree-id1376 . 1) (undo-tree-id1377 . 1) (undo-tree-id1378 . 1) (undo-tree-id1379 . 1) (undo-tree-id1380 . 1) (undo-tree-id1381 . 1) (undo-tree-id1382 . 1) (undo-tree-id1383 . 1) (undo-tree-id1384 . 1) (undo-tree-id1385 . 1) (undo-tree-id1386 . 1) (undo-tree-id1387 . 1) (undo-tree-id1388 . 1) (undo-tree-id1389 . 1) (undo-tree-id1390 . 1) (undo-tree-id1391 . 1) (undo-tree-id1392 . 1) (undo-tree-id1393 . 1) (undo-tree-id1394 . 1) (undo-tree-id1395 . 1) (undo-tree-id1396 . 1) (undo-tree-id1397 . 1) (#("l" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1398 . -1) (undo-tree-id1399 . 1) (undo-tree-id1400 . 1) (undo-tree-id1401 . 1) (undo-tree-id1402 . 1) (undo-tree-id1403 . 1) (undo-tree-id1404 . 1) (undo-tree-id1405 . 1) (undo-tree-id1406 . 1) (undo-tree-id1407 . 1) (undo-tree-id1408 . 1) (undo-tree-id1409 . 1) (undo-tree-id1410 . 1) (undo-tree-id1411 . 1) (undo-tree-id1412 . 1) (undo-tree-id1413 . 1) (undo-tree-id1414 . 1) (undo-tree-id1415 . 1) (undo-tree-id1416 . 1) (undo-tree-id1417 . 1) (undo-tree-id1418 . 1) (undo-tree-id1419 . 1) (undo-tree-id1420 . 1) (undo-tree-id1421 . 1) (undo-tree-id1422 . 1) (undo-tree-id1423 . 1) (undo-tree-id1424 . 1) (undo-tree-id1425 . 1) (#("a" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1426 . -1) (undo-tree-id1427 . 1) (undo-tree-id1428 . 1) (undo-tree-id1429 . 1) (undo-tree-id1430 . 1) (undo-tree-id1431 . 1) (undo-tree-id1432 . 1) (undo-tree-id1433 . 1) (undo-tree-id1434 . 1) (undo-tree-id1435 . 1) (undo-tree-id1436 . 1) (undo-tree-id1437 . 1) (undo-tree-id1438 . 1) (undo-tree-id1439 . 1) (undo-tree-id1440 . 1) (undo-tree-id1441 . 1) (undo-tree-id1442 . 1) (undo-tree-id1443 . 1) (undo-tree-id1444 . 1) (undo-tree-id1445 . 1) (undo-tree-id1446 . 1) (undo-tree-id1447 . 1) (undo-tree-id1448 . 1) (undo-tree-id1449 . 1) (#("v" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1450 . -1) (undo-tree-id1451 . 1) (undo-tree-id1452 . 1) (undo-tree-id1453 . 1) (undo-tree-id1454 . 1) (undo-tree-id1455 . 1) (undo-tree-id1456 . 1) (undo-tree-id1457 . 1) (undo-tree-id1458 . 1) (undo-tree-id1459 . 1) (undo-tree-id1460 . 1) (undo-tree-id1461 . 1) (undo-tree-id1462 . 1) (undo-tree-id1463 . 1) (undo-tree-id1464 . 1) (undo-tree-id1465 . 1) (undo-tree-id1466 . 1) (undo-tree-id1467 . 1) (undo-tree-id1468 . 1) (undo-tree-id1469 . 1) (#(" " 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1470 . -1) (undo-tree-id1471 . 1) (undo-tree-id1472 . 1) (undo-tree-id1473 . 1) (undo-tree-id1474 . 1) (undo-tree-id1475 . 1) (undo-tree-id1476 . 1) (undo-tree-id1477 . 1) (undo-tree-id1478 . 1) (undo-tree-id1479 . 1) (undo-tree-id1480 . 1) (undo-tree-id1481 . 1) (undo-tree-id1482 . 1) (undo-tree-id1483 . 1) (undo-tree-id1484 . 1) (undo-tree-id1485 . 1) (#("e" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1486 . -1) (undo-tree-id1487 . 1) (undo-tree-id1488 . 1) (undo-tree-id1489 . 1) (undo-tree-id1490 . 1) (undo-tree-id1491 . 1) (undo-tree-id1492 . 1) (undo-tree-id1493 . 1) (undo-tree-id1494 . 1) (undo-tree-id1495 . 1) (undo-tree-id1496 . 1) (undo-tree-id1497 . 1) (#("h" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1498 . -1) (undo-tree-id1499 . 1) (undo-tree-id1500 . 1) (undo-tree-id1501 . 1) (undo-tree-id1502 . 1) (undo-tree-id1503 . 1) (undo-tree-id1504 . 1) (undo-tree-id1505 . 1) (#("T" 0 1 (fontified t face font-lock-string-face)) . 308) (undo-tree-id1506 . -1) (undo-tree-id1507 . 1) (undo-tree-id1508 . 1) (undo-tree-id1509 . 1)) nil (25297 39970 468142 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -288) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (#("a" 0 1 (fontified t)) . -289) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) 290 (t 25297 39970 0 0)) nil (25297 40016 527503 0) 0 nil])
([nil nil ((307 . 314) (t 25297 39981 0 0)) nil (25297 40026 64685 0) 0 nil] [nil nil ((#("(display a)" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 9 (fontified t) 9 10 (fontified t) 10 11 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face))) . 296) (undo-tree-id1536 . -11) (undo-tree-id1537 . -11) (undo-tree-id1538 . 11) (undo-tree-id1539 . 11) (undo-tree-id1540 . 11) (undo-tree-id1541 . 11) (undo-tree-id1542 . 11) (undo-tree-id1543 . 11) (undo-tree-id1544 . -11) (t 25297 39981 0 0)) ((296 . 307)) (25297 40016 526870 0) 0 nil] [nil nil ((nil rear-nonsticky nil 325 . 326) (nil fontified nil 325 . 326) (nil fontified nil 324 . 325) (nil fontified nil 323 . 324) (nil fontified nil 322 . 323) (nil fontified nil 305 . 322) (nil fontified nil 297 . 305) (nil fontified nil 296 . 297) (296 . 326) (t 25297 39981 0 0)) ((#("(display \"The value of a: \" a)" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face)) 1 9 (fontified nil) 9 26 (fontified nil face font-lock-string-face) 26 27 (fontified nil face font-lock-string-face) 27 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-4-face))) . 296) (undo-tree-id1533 . -30) (undo-tree-id1534 . 30) (undo-tree-id1535 . -30) (nil rear-nonsticky t 325 . 326)) (25297 40011 278931 0) 0 nil])
([nil nil ((nil fontified nil 324 . 325) (nil fontified nil 323 . 324) (nil fontified nil 315 . 323) (nil fontified nil 314 . 315) (314 . 325)) nil (25297 40026 64684 0) 0 nil])
nil
nil
([nil nil ((#("a" 0 1 (fontified t)) . -323) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) 324) nil (25297 40026 64681 0) 0 nil])
([nil nil ((323 . 325)) nil (25297 40026 64672 0) 0 nil])
([nil nil ((324 . 326)) nil (25297 40026 64668 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -414) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) 415 (t 25297 40026 0 0)) nil (25297 40099 152768 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -413) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) 414) nil (25297 40099 152764 0) 0 nil])
([nil nil ((#("(define f0 (f 0))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 15 (fontified t) 15 16 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 16 17 (fontified t face (rainbow-delimiters-depth-1-face))) . 413) (undo-tree-id1595 . -17) (undo-tree-id1596 . -17) (undo-tree-id1597 . -17)) nil (25297 40099 152761 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 413) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . 1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) 414) nil (25297 40099 152758 0) 0 nil])
([nil nil ((#("f0" 0 2 (fontified t)) . 413) (undo-tree-id1581 . -2) (undo-tree-id1582 . 2) (undo-tree-id1583 . 2) (undo-tree-id1584 . 2) (undo-tree-id1585 . 2) (undo-tree-id1586 . 2) (undo-tree-id1587 . 2) (undo-tree-id1588 . -2)) nil (25297 40099 152753 0) 0 nil])
([nil nil ((#("(define f1 (f 1))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 15 (fontified t) 15 16 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 16 17 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 415) (undo-tree-id1576 . -17) (undo-tree-id1577 . 17) (undo-tree-id1578 . 17) (undo-tree-id1579 . 17) (undo-tree-id1580 . -17)) nil (25297 40099 152745 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 415) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . 1) (undo-tree-id1569 . 1) (undo-tree-id1570 . 1) (undo-tree-id1571 . 1) (undo-tree-id1572 . 1) (undo-tree-id1573 . 1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) 416) nil (25297 40099 152741 0) 0 nil])
([nil nil ((#("f1" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t)) . 415) (undo-tree-id1547 . -2) (undo-tree-id1548 . -2) (undo-tree-id1549 . -2) (undo-tree-id1550 . 2) (undo-tree-id1551 . 2) (undo-tree-id1552 . 2) (undo-tree-id1553 . 2) (undo-tree-id1554 . 2) (undo-tree-id1555 . 2) (undo-tree-id1556 . 2) (undo-tree-id1557 . 2) (undo-tree-id1558 . 2) (undo-tree-id1559 . 2) (undo-tree-id1560 . 2) (undo-tree-id1561 . 2) (undo-tree-id1562 . 2) (undo-tree-id1563 . 2) (undo-tree-id1564 . 2) (undo-tree-id1565 . -2)) nil (25297 40099 152733 0) 0 nil])
([nil nil ((413 . 415)) nil (25297 40099 152714 0) 0 nil])
([nil nil ((414 . 417)) nil (25297 40099 152713 0) 0 nil])
([nil nil ((418 . 419)) nil (25297 40099 152712 0) 0 nil])
([nil nil ((419 . 421)) nil (25297 40099 152711 0) 0 nil])
([nil nil ((420 . 423)) nil (25297 40099 152711 0) 0 nil])
([nil nil ((425 . 427)) nil (25297 40099 152709 0) 0 nil])
([nil nil ((426 . 427)) nil (25297 40099 152708 0) 0 nil])
([nil nil ((427 . 429)) nil (25297 40230 639442 0) 0 nil])
([nil nil ((407 . 410) (398 . 401) (368 . 371) (347 . 350) (323 . 326) (302 . 305) (264 . 267) (244 . 247) (227 . 230) (212 . 215) (t 25297 40099 0 0)) nil (25297 40259 486284 0) 0 nil] [nil nil ((#("(define (g)
  (lambda (x)
    (let ((a 0))
      (display \"The value of a: \")
      (display a)
      (display \"\\n\")
      (if (= x 1)
	  (begin (set! a (+ a 1))
		 0)
          a))))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-2-face)) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face (rainbow-delimiters-depth-2-face)) 11 12 (fontified t) 12 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-2-face)) 15 21 (fontified t face font-lock-keyword-face) 21 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-3-face)) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-3-face)) 25 26 (fontified t) 26 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-3-face)) 31 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-4-face)) 36 37 (fontified t face (rainbow-delimiters-depth-5-face)) 37 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-5-face)) 41 42 (fontified t face (rainbow-delimiters-depth-4-face)) 42 43 (fontified t) 43 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-4-face)) 50 58 (fontified t) 58 75 (fontified t face font-lock-string-face) 75 76 (fontified t face font-lock-string-face) 76 77 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-4-face)) 77 78 (fontified t) 78 84 (fontified t) 84 85 (fontified t face (rainbow-delimiters-depth-4-face)) 85 93 (fontified t) 93 94 (fontified t) 94 95 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face)) 95 96 (fontified t) 96 102 (fontified t) 102 103 (fontified t face (rainbow-delimiters-depth-4-face)) 103 111 (fontified t) 111 112 (fontified t face font-lock-string-face) 112 113 (fontified t face font-lock-string-face) 113 114 (fontified t face font-lock-string-face) 114 115 (fontified t face font-lock-string-face) 115 116 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face)) 116 117 (fontified t) 117 123 (fontified t) 123 124 (fontified t face (rainbow-delimiters-depth-4-face)) 124 126 (fontified t face font-lock-keyword-face) 126 127 (fontified t) 127 128 (fontified t face (rainbow-delimiters-depth-5-face)) 128 133 (fontified t) 133 134 (fontified t face (rainbow-delimiters-depth-5-face)) 134 135 (fontified t) 135 138 (fontified t) 138 139 (fontified t face (rainbow-delimiters-depth-5-face)) 139 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 146 (fontified t face (rainbow-delimiters-depth-6-face)) 146 150 (fontified t face font-lock-keyword-face) 150 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t face (rainbow-delimiters-depth-7-face)) 154 159 (fontified t) 159 160 (fontified t face (rainbow-delimiters-depth-7-face)) 160 161 (fontified t face (rainbow-delimiters-depth-6-face)) 161 162 (fontified t) 162 166 (fontified t) 166 167 (fontified t face (rainbow-delimiters-depth-5-face)) 167 168 (fontified t) 168 172 (fontified t) 172 179 (fontified t) 179 180 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face)) 180 181 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-3-face)) 181 182 (fontified t face (rainbow-delimiters-depth-2-face)) 182 183 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 212) (undo-tree-id1605 . -183) (undo-tree-id1606 . -12) (undo-tree-id1607 . -95) (undo-tree-id1608 . -84) (undo-tree-id1609 . -84) (undo-tree-id1610 . -95) (undo-tree-id1611 . -102) (undo-tree-id1612 . 66) (undo-tree-id1613 . 66) (undo-tree-id1614 . -117) (undo-tree-id1615 . -117) (undo-tree-id1616 . 66) (undo-tree-id1617 . 66) (undo-tree-id1618 . -117) (undo-tree-id1619 . -117) (undo-tree-id1620 . 183) (undo-tree-id1621 . 66) (undo-tree-id1622 . 183) (undo-tree-id1623 . 183) (undo-tree-id1624 . 183) (undo-tree-id1625 . 183) (undo-tree-id1626 . -183) (t 25297 40099 0 0)) ((212 . 395)) (25297 40230 638643 0) 0 nil])
([nil nil ((212 . 213)) nil (25297 40259 486281 0) 0 nil])
nil
([nil nil ((#("n" 0 1 (fontified t)) . -212) (undo-tree-id1627 . -1) (undo-tree-id1628 . 1) (undo-tree-id1629 . -1) 213) nil (25297 40259 486280 0) 0 nil])
([nil nil ((425 . 427)) nil (25297 40259 486271 0) 0 nil])
([nil nil ((nil fontified nil 609 . 610) (nil fontified nil 608 . 609) (nil fontified nil 607 . 608) (nil fontified nil 606 . 607) (nil fontified nil 599 . 606) (nil fontified nil 595 . 599) (nil fontified nil 594 . 595) (nil fontified nil 593 . 594) (nil fontified nil 589 . 593) (nil fontified nil 588 . 589) (nil fontified nil 587 . 588) (nil fontified nil 586 . 587) (nil fontified nil 581 . 586) (nil fontified nil 580 . 581) (nil fontified nil 579 . 580) (nil fontified nil 577 . 579) (nil fontified nil 573 . 577) (nil fontified nil 572 . 573) (nil fontified nil 571 . 572) (nil fontified nil 566 . 571) (nil fontified nil 565 . 566) (nil fontified nil 562 . 565) (nil fontified nil 561 . 562) (nil fontified nil 560 . 561) (nil fontified nil 555 . 560) (nil fontified nil 554 . 555) (nil fontified nil 553 . 554) (nil fontified nil 551 . 553) (nil fontified nil 550 . 551) (nil fontified nil 544 . 550) (nil fontified nil 543 . 544) (nil fontified nil 542 . 543) (nil fontified nil 541 . 542) (nil fontified nil 540 . 541) (nil fontified nil 539 . 540) (nil fontified nil 538 . 539) (nil fontified nil 530 . 538) (nil fontified nil 529 . 530) (nil fontified nil 523 . 529) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 512 . 520) (nil fontified nil 511 . 512) (nil fontified nil 505 . 511) (nil fontified nil 504 . 505) (nil fontified nil 503 . 504) (nil fontified nil 502 . 503) (nil fontified nil 485 . 502) (nil fontified nil 477 . 485) (nil fontified nil 476 . 477) (nil fontified nil 470 . 476) (nil fontified nil 469 . 470) (nil fontified nil 468 . 469) (nil fontified nil 467 . 468) (nil fontified nil 464 . 467) (nil fontified nil 463 . 464) (nil fontified nil 462 . 463) (nil fontified nil 461 . 462) (nil fontified nil 458 . 461) (nil fontified nil 457 . 458) (nil fontified nil 453 . 457) (nil fontified nil 452 . 453) (nil fontified nil 451 . 452) (nil fontified nil 450 . 451) (nil fontified nil 449 . 450) (nil fontified nil 448 . 449) (nil fontified nil 442 . 448) (nil fontified nil 441 . 442) (nil fontified nil 439 . 441) (nil fontified nil 438 . 439) (nil fontified nil 437 . 438) (nil fontified nil 436 . 437) (nil fontified nil 435 . 436) (nil fontified nil 434 . 435) (nil fontified nil 428 . 434) (nil fontified nil 427 . 428) (427 . 610)) nil (25297 40259 486263 0) 0 nil])
([nil nil ((#("(let ((a 0))
      (display \"The value of a: \")
      (display a)
      (display \"\\n\")
      (if (= x 1)
	  (begin (set! a (+ a 1))
		 0)
          a))" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-4-face)) 6 7 (fontified t face (rainbow-delimiters-depth-5-face)) 7 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-5-face)) 11 12 (fontified t face (rainbow-delimiters-depth-4-face)) 12 13 (fontified t) 13 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-4-face)) 20 28 (fontified t) 28 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face)) 47 48 (fontified t) 48 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-4-face)) 55 63 (fontified t) 63 64 (fontified t) 64 65 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face)) 65 66 (fontified t) 66 72 (fontified t) 72 73 (fontified t face (rainbow-delimiters-depth-4-face)) 73 81 (fontified t) 81 82 (fontified t face font-lock-string-face) 82 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face font-lock-string-face) 85 86 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face)) 86 87 (fontified t) 87 93 (fontified t) 93 94 (fontified t face (rainbow-delimiters-depth-4-face)) 94 96 (fontified t face font-lock-keyword-face) 96 97 (fontified t) 97 98 (fontified t face (rainbow-delimiters-depth-5-face)) 98 103 (fontified t) 103 104 (fontified t face (rainbow-delimiters-depth-5-face)) 104 105 (fontified t) 105 108 (fontified t) 108 109 (fontified t face (rainbow-delimiters-depth-5-face)) 109 114 (fontified t face font-lock-keyword-face) 114 115 (fontified t) 115 116 (fontified t face (rainbow-delimiters-depth-6-face)) 116 120 (fontified t face font-lock-keyword-face) 120 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t face (rainbow-delimiters-depth-7-face)) 124 129 (fontified t) 129 130 (fontified t face (rainbow-delimiters-depth-7-face)) 130 131 (fontified t face (rainbow-delimiters-depth-6-face)) 131 132 (fontified t) 132 136 (fontified t) 136 137 (fontified t face (rainbow-delimiters-depth-5-face)) 137 138 (fontified t) 138 142 (fontified t) 142 149 (fontified t) 149 150 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face)) 150 151 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-3-face))) . 457) (undo-tree-id1647 . -151) (undo-tree-id1648 . -13) (undo-tree-id1649 . -151) (t 25297 40259 0 0)) nil (25297 40376 628410 0) 0 nil])
([nil nil ((459 . 461)) nil (25297 40376 628407 0) 0 nil])
([nil nil ((nil fontified nil 611 . 612) (nil fontified nil 610 . 611) (nil fontified nil 603 . 610) (nil fontified nil 599 . 603) (nil fontified nil 598 . 599) (nil fontified nil 597 . 598) (nil fontified nil 593 . 597) (nil fontified nil 592 . 593) (nil fontified nil 591 . 592) (nil fontified nil 590 . 591) (nil fontified nil 585 . 590) (nil fontified nil 584 . 585) (nil fontified nil 583 . 584) (nil fontified nil 581 . 583) (nil fontified nil 577 . 581) (nil fontified nil 576 . 577) (nil fontified nil 575 . 576) (nil fontified nil 570 . 575) (nil fontified nil 569 . 570) (nil fontified nil 566 . 569) (nil fontified nil 565 . 566) (nil fontified nil 564 . 565) (nil fontified nil 559 . 564) (nil fontified nil 558 . 559) (nil fontified nil 557 . 558) (nil fontified nil 555 . 557) (nil fontified nil 554 . 555) (nil fontified nil 548 . 554) (nil fontified nil 547 . 548) (nil fontified nil 546 . 547) (nil fontified nil 545 . 546) (nil fontified nil 544 . 545) (nil fontified nil 543 . 544) (nil fontified nil 542 . 543) (nil fontified nil 534 . 542) (nil fontified nil 533 . 534) (nil fontified nil 527 . 533) (nil fontified nil 526 . 527) (nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 516 . 524) (nil fontified nil 515 . 516) (nil fontified nil 509 . 515) (nil fontified nil 508 . 509) (nil fontified nil 507 . 508) (nil fontified nil 506 . 507) (nil fontified nil 489 . 506) (nil fontified nil 481 . 489) (nil fontified nil 480 . 481) (nil fontified nil 474 . 480) (nil fontified nil 473 . 474) (nil fontified nil 472 . 473) (nil fontified nil 471 . 472) (nil fontified nil 468 . 471) (nil fontified nil 467 . 468) (nil fontified nil 466 . 467) (nil fontified nil 465 . 466) (nil fontified nil 462 . 465) (nil fontified nil 461 . 462) (461 . 612)) nil (25297 40376 628404 0) 0 nil])
([nil nil ((#("(if (= x 1)
	  (begin (set! a (+ a 1))
		 0)
          a)" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 12 (fontified t) 12 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 21 (fontified t face font-lock-keyword-face) 21 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-4-face)) 23 27 (fontified t face font-lock-keyword-face) 27 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-5-face)) 31 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-5-face)) 37 38 (fontified t face (rainbow-delimiters-depth-4-face)) 38 39 (fontified t) 39 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-3-face)) 44 45 (fontified t) 45 49 (fontified t) 49 56 (fontified t) 56 57 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face))) . 554) (undo-tree-id1644 . -57) (undo-tree-id1645 . -12) (undo-tree-id1646 . -57)) nil (25297 40376 628395 0) 0 nil])
([nil nil ((555 . 557)) nil (25297 40376 628392 0) 0 nil])
([nil nil ((nil fontified nil 613 . 614) (nil fontified nil 606 . 613) (nil fontified nil 602 . 606) (nil fontified nil 601 . 602) (nil fontified nil 600 . 601) (nil fontified nil 596 . 600) (nil fontified nil 595 . 596) (nil fontified nil 594 . 595) (nil fontified nil 593 . 594) (nil fontified nil 588 . 593) (nil fontified nil 587 . 588) (nil fontified nil 586 . 587) (nil fontified nil 584 . 586) (nil fontified nil 580 . 584) (nil fontified nil 579 . 580) (nil fontified nil 578 . 579) (nil fontified nil 573 . 578) (nil fontified nil 572 . 573) (nil fontified nil 569 . 572) (nil fontified nil 568 . 569) (nil fontified nil 567 . 568) (nil fontified nil 562 . 567) (nil fontified nil 561 . 562) (nil fontified nil 560 . 561) (nil fontified nil 558 . 560) (nil fontified nil 557 . 558) (557 . 614)) nil (25297 40376 628391 0) 0 nil])
([nil nil ((#("(lambda (x)
    )" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 12 (fontified t) 12 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-2-face))) . 441) (undo-tree-id1639 . -17) (undo-tree-id1640 . -12) (undo-tree-id1641 . -16) (undo-tree-id1642 . -16) (undo-tree-id1643 . -17)) nil (25297 40376 628386 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 553 . 554) (nil fontified nil 553 . 554) (nil fontified nil 549 . 553) (nil fontified nil 548 . 549) (nil fontified nil 547 . 548) (nil fontified nil 546 . 547) (nil fontified nil 545 . 546) (nil fontified nil 544 . 545) (nil fontified nil 538 . 544) (nil fontified nil 537 . 538) (537 . 554)) nil (25297 40376 628382 0) 0 nil])
([nil nil ((549 . 550) (#("    " 0 4 (fontified t)) . 549) 554) nil (25297 40376 628379 0) 0 nil])
([nil nil ((#("(if (= x 1)
	  (begin (set! a (+ a 1))
		 0)
          a)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-2-face)) 11 12 (fontified t) 12 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-2-face)) 16 21 (fontified t face font-lock-keyword-face) 21 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-3-face)) 23 27 (fontified t face font-lock-keyword-face) 27 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-4-face)) 31 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-4-face)) 37 38 (fontified t face (rainbow-delimiters-depth-3-face)) 38 39 (fontified t) 39 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 45 (fontified t) 45 49 (fontified t) 49 56 (fontified t) 56 57 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 554) (undo-tree-id1636 . -57) (undo-tree-id1637 . -12) (undo-tree-id1638 . -57)) nil (25297 40376 628378 0) 0 nil])
([nil nil ((nil fontified nil 606 . 607) (nil fontified nil 599 . 606) (nil fontified nil 595 . 599) (nil fontified nil 594 . 595) (nil fontified nil 593 . 594) (nil fontified nil 589 . 593) (nil fontified nil 588 . 589) (nil fontified nil 587 . 588) (nil fontified nil 586 . 587) (nil fontified nil 581 . 586) (nil fontified nil 580 . 581) (nil fontified nil 579 . 580) (nil fontified nil 577 . 579) (nil fontified nil 573 . 577) (nil fontified nil 572 . 573) (nil fontified nil 571 . 572) (nil fontified nil 566 . 571) (nil fontified nil 565 . 566) (nil fontified nil 562 . 565) (nil fontified nil 561 . 562) (nil fontified nil 560 . 561) (nil fontified nil 555 . 560) (nil fontified nil 554 . 555) (nil fontified nil 553 . 554) (nil fontified nil 551 . 553) (nil fontified nil 550 . 551) (550 . 607)) nil (25297 40376 628374 0) 0 nil])
([nil nil ((#("(let ((a 0))
      (display \"The value of a: \")
      (display a)
      (display \"\\n\")
      (lambda (x)
	(if (= x 1)
	  (begin (set! a (+ a 1))
		 0)
          a)))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 13 (fontified t) 13 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-2-face)) 20 28 (fontified t) 28 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t) 48 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-2-face)) 55 63 (fontified t) 63 64 (fontified t) 64 65 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 65 66 (fontified t) 66 72 (fontified t) 72 73 (fontified t face (rainbow-delimiters-depth-2-face)) 73 81 (fontified t) 81 82 (fontified t face font-lock-string-face) 82 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face font-lock-string-face) 85 86 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 86 87 (fontified t) 87 93 (fontified t) 93 94 (fontified t face (rainbow-delimiters-depth-2-face)) 94 100 (fontified t face font-lock-keyword-face) 100 101 (fontified t) 101 102 (fontified t face (rainbow-delimiters-depth-3-face)) 102 103 (fontified t) 103 104 (fontified t face (rainbow-delimiters-depth-3-face)) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t face (rainbow-delimiters-depth-3-face)) 107 109 (fontified t face font-lock-keyword-face) 109 110 (fontified t) 110 111 (fontified t face (rainbow-delimiters-depth-4-face)) 111 116 (fontified t) 116 117 (fontified t face (rainbow-delimiters-depth-4-face)) 117 118 (fontified t) 118 121 (fontified t) 121 122 (fontified t face (rainbow-delimiters-depth-4-face)) 122 127 (fontified t face font-lock-keyword-face) 127 128 (fontified t) 128 129 (fontified t face (rainbow-delimiters-depth-5-face)) 129 133 (fontified t face font-lock-keyword-face) 133 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t face (rainbow-delimiters-depth-6-face)) 137 142 (fontified t) 142 143 (fontified t face (rainbow-delimiters-depth-6-face)) 143 144 (fontified t face (rainbow-delimiters-depth-5-face)) 144 145 (fontified t) 145 149 (fontified t) 149 150 (fontified t face (rainbow-delimiters-depth-4-face)) 150 151 (fontified t) 151 155 (fontified t) 155 162 (fontified t) 162 163 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-3-face)) 163 164 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-2-face)) 164 165 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 444) (undo-tree-id1630 . -165) (undo-tree-id1631 . -13) (undo-tree-id1632 . -93) (undo-tree-id1633 . -93) (undo-tree-id1634 . -93) (undo-tree-id1635 . -165)) nil (25297 40376 628368 0) 0 nil])
([nil nil ((nil fontified nil 605 . 606) (nil fontified nil 604 . 605) (nil fontified nil 603 . 604) (nil fontified nil 596 . 603) (nil fontified nil 592 . 596) (nil fontified nil 591 . 592) (nil fontified nil 590 . 591) (nil fontified nil 586 . 590) (nil fontified nil 585 . 586) (nil fontified nil 584 . 585) (nil fontified nil 583 . 584) (nil fontified nil 578 . 583) (nil fontified nil 577 . 578) (nil fontified nil 576 . 577) (nil fontified nil 574 . 576) (nil fontified nil 570 . 574) (nil fontified nil 569 . 570) (nil fontified nil 568 . 569) (nil fontified nil 563 . 568) (nil fontified nil 562 . 563) (nil fontified nil 559 . 562) (nil fontified nil 558 . 559) (nil fontified nil 557 . 558) (nil fontified nil 552 . 557) (nil fontified nil 551 . 552) (nil fontified nil 550 . 551) (nil fontified nil 548 . 550) (nil fontified nil 547 . 548) (nil fontified nil 546 . 547) (nil fontified nil 545 . 546) (nil fontified nil 544 . 545) (nil fontified nil 543 . 544) (nil fontified nil 542 . 543) (nil fontified nil 541 . 542) (nil fontified nil 535 . 541) (nil fontified nil 534 . 535) (nil fontified nil 528 . 534) (nil fontified nil 527 . 528) (nil fontified nil 526 . 527) (nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 523 . 524) (nil fontified nil 522 . 523) (nil fontified nil 514 . 522) (nil fontified nil 513 . 514) (nil fontified nil 507 . 513) (nil fontified nil 506 . 507) (nil fontified nil 505 . 506) (nil fontified nil 504 . 505) (nil fontified nil 496 . 504) (nil fontified nil 495 . 496) (nil fontified nil 489 . 495) (nil fontified nil 488 . 489) (nil fontified nil 487 . 488) (nil fontified nil 486 . 487) (nil fontified nil 469 . 486) (nil fontified nil 461 . 469) (nil fontified nil 460 . 461) (nil fontified nil 454 . 460) (nil fontified nil 453 . 454) (nil fontified nil 452 . 453) (nil fontified nil 451 . 452) (nil fontified nil 448 . 451) (nil fontified nil 447 . 448) (nil fontified nil 446 . 447) (nil fontified nil 445 . 446) (nil fontified nil 442 . 445) (nil fontified nil 441 . 442) (441 . 606)) nil (25297 40376 628352 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -608) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . 1) (undo-tree-id1691 . 1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (#("
" 0 1 (fontified t)) . -609) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . 1) (undo-tree-id1698 . 1) (undo-tree-id1699 . -1) 610 (t 25297 40376 0 0)) nil (25297 40383 69384 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -608) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . 1) (undo-tree-id1673 . 1) (undo-tree-id1674 . 1) (undo-tree-id1675 . 1) (undo-tree-id1676 . 1) (undo-tree-id1677 . 1) (undo-tree-id1678 . 1) (undo-tree-id1679 . 1) (undo-tree-id1680 . 1) (undo-tree-id1681 . 1) (undo-tree-id1682 . -1) 609) nil (25297 40383 69367 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -608) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . 1) (undo-tree-id1653 . 1) (undo-tree-id1654 . 1) (undo-tree-id1655 . 1) (undo-tree-id1656 . 1) (undo-tree-id1657 . 1) (undo-tree-id1658 . 1) (undo-tree-id1659 . 1) (undo-tree-id1660 . 1) (undo-tree-id1661 . 1) (undo-tree-id1662 . 1) (undo-tree-id1663 . 1) (undo-tree-id1664 . 1) (undo-tree-id1665 . 1) (undo-tree-id1666 . -1) 609) nil (25297 40383 69347 0) 0 nil])
([nil nil ((642 . 643) (t 25297 40383 0 0)) nil (25297 40408 100334 0) 0 nil])
([nil nil ((643 . 645)) nil (25297 40408 100332 0) 0 nil])
([nil current ((644 . 648)) nil (25297 40408 100327 0) 0 nil])
nil
