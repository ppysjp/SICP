So in the question we are given how to create a withdraw object that explicitly 
has an internal variable. The first thing I'm going to do is to convert this 
make-withdraw into one that doesn't use let but uses lambda. 
The first step on the other hand is to create the lambda so I'm going to do that 
first. 

Now that I have created the withdraw object so that it uses the stuff from the book,
I need to create a new withdraw object that uses the lambda form of let...

Ok so I've created the make-withdraw procedure that doesn't make use of the let expression
but makes use of a nested lambda expression.


Cool so I'm just going to get on with drawing this environment model for this project: 

Cool so the weird thing about this is that there is a nested lambda expression and the parameter
initial-amount is assigned balance in a weird order... It's like using a lambda instead of a let
is like speaking german, why kick the verb to the end??? But heyy helps by kicking the binding 
to the end we can draw a nice environemnt model...

so I've just created the environment for W1 object with an initial balance of 100...

it says in the question that the environment structures are different so you should take this into 
account tomorrow.