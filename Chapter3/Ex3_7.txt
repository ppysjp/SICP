So I need to be able to use the code from exercise 3. 
I'm going to google how to import from a racket file.
I'm trying to create a joint account. 
I need to take advantage of the stuff from page 233 where we get the account to point 
at the same location. 
The joint account needs to share the same value for it's balance.
But it needs to use the new-password as the message that is passed for the withdrawal
to occur. 
So I think I need to have access to the balance of the original account.
The change that will be required for this is in the original make-account functionn. 
So let's do that... 
So I now have away of accessing the initial value of the joint account.
So now I have a way of accessing the account balance I think I want to rip a lot of the 
code that was used for the make-account function. 
I think I'm going to use an OR statement to make the new account use both passwords...
I think this can be done quite concisely...
I'm going to create a function called password-correct? That will determine whether the password 
is accepetable for calling the functions in the make-joint.
Successfully created a password checker for my joint account called correct-password. 
I think I'm now ready to make the make-joint function. 

So I think you can make the make-joint account largely from the make-account code
You need two initial variables, one will be the balance from the other account and the 
other will be a list of the two passwords and then the new account will make use of 

that stuff..

It says in the question that make joint is to make an additional access to the original account.
So I think I'm going to create a new function which called make additional access 
after I have modified the make account to use the correct-password? function that I made 
yesterday. 

I've copied the version of make-account object into the Ex3_7.rkt file.

I intend to make changes to it here.

So what I'm going to do is add another varialbe to the make-account function which is called
passwords. I expect the make-account function to work in exactly the same manner as before.
So the first step to do this has been to ad the correct-password? function to the object.

So now I want to add a function that allows us to extend the account. 
But before I do that I want to use my correct-password? implementation.
So hopefully it will work.

I've commented out the implmentation of incorrect-password because it is not needed.
Anyway it is at this point that I need to create a function which is called additonal access
that allows me to add a password to the list of passwords to be checked.

So I've added another function to the make-account which should in theory mean that I can 
add a password to the list of passwords which can be used to access the account.

So now we can use the additional-access function to create a joint-account...

Ok so let's copy the code from the book that we want to work...