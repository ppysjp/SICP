(undo-tree-save-format-version . 1)
"9782dcc3366107b56472423ae93fddbc9dd4d8c3"
[nil nil nil nil (25250 7473 250525 0) 0 nil]
([nil nil ((1 . 2) (t . -1)) nil (25250 7473 250524 0) 0 nil])
([nil nil ((#("#" 0 1 (fontified t)) . -1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 2) nil (25250 7473 250522 0) 0 nil])
([nil nil ((1 . 13)) nil (25250 7473 250510 0) 0 nil])
([nil nil ((13 . 15)) nil (25250 7473 250505 0) 0 nil])
([nil nil ((1 . 27) (#("#lang racket

" 0 5 (fontified t face font-lock-keyword-face) 5 12 (fontified t) 12 14 (fontified t)) . 1) (undo-tree-id95 . -13) (t 25250 7473 0 0)) nil (25279 7774 758811 0) 0 nil])
([nil nil ((27 . 28)) nil (25279 7774 758808 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -27) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 28) nil (25279 7774 758807 0) 0 nil])
([nil nil ((25 . 29)) nil (25279 7774 758805 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t face font-lock-string-face)) . -28) (undo-tree-id90 . -1) (undo-tree-id91 . 1) (undo-tree-id92 . -1) 29) nil (25279 7774 758803 0) 0 nil])
([nil nil ((28 . 29)) nil (25279 7774 758800 0) 0 nil])
([nil nil ((29 . 30)) nil (25279 7774 758799 0) 0 nil])
([nil nil ((30 . 31)) nil (25279 7774 758798 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-string-face)) . -29) (undo-tree-id82 . -1) (undo-tree-id83 . 1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -30) (undo-tree-id87 . -1) (undo-tree-id88 . 1) (undo-tree-id89 . -1) 31) nil (25279 7774 758796 0) 0 nil])
([nil nil ((29 . 30)) nil (25279 7774 758789 0) 0 nil])
([nil nil ((30 . 31)) nil (25279 7774 758788 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-string-face)) . -29) (undo-tree-id74 . -1) (undo-tree-id75 . 1) (undo-tree-id76 . -1) (undo-tree-id77 . 1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -30) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 31) nil (25279 7774 758786 0) 0 nil])
([nil nil ((29 . 33)) nil (25279 7774 758779 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-string-face)) . -27) (undo-tree-id8 . -1) (undo-tree-id9 . 1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("3" 0 1 (fontified t face font-lock-string-face)) . -28) (undo-tree-id31 . -1) (undo-tree-id32 . 1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -29) (undo-tree-id50 . -1) (undo-tree-id51 . 1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("5" 0 1 (fontified t face font-lock-string-face)) . -30) (undo-tree-id59 . -1) (undo-tree-id60 . 1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -31) (undo-tree-id66 . -1) (undo-tree-id67 . 1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -32) (undo-tree-id71 . -1) (undo-tree-id72 . 1) (undo-tree-id73 . -1) 33) nil (25279 7774 758774 0) 0 nil])
([nil nil ((27 . 28)) nil (25279 7774 758723 0) 0 nil])
([nil nil ((28 . 33)) nil (25279 7774 758722 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face font-lock-string-face)) . -31) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -32) (undo-tree-id5 . -1) (undo-tree-id6 . 1) (undo-tree-id7 . -1) 33) nil (25279 7774 758719 0) 0 nil])
([nil nil ((31 . 34)) nil (25279 7774 758702 0) 0 nil])
([nil nil ((36 . 37) 34) nil (25279 7774 758697 0) 0 nil])
([nil nil ((37 . 38) (t 25279 7774 0 0)) nil (25279 7898 837523 0) 0 nil])
([nil nil ((38 . 40)) nil (25279 7898 837521 0) 0 nil])
([nil nil ((39 . 45)) nil (25279 7898 837519 0) 0 nil])
([nil nil ((46 . 47) 45) nil (25279 7898 837514 0) 0 nil])
([nil nil ((38 . 124) (#("(rand 3)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-1-face)) 8 9 (fontified t)) . -38) (undo-tree-id4 . -9) (undo-tree-id5 . -9) (undo-tree-id6 . -9) (undo-tree-id7 . -9) (undo-tree-id8 . -9) (undo-tree-id9 . -9) (undo-tree-id10 . -9) (undo-tree-id11 . -9) (undo-tree-id12 . -9) (undo-tree-id13 . -9) (t 25279 7898 0 0)) nil (25279 8227 714394 0) 0 nil])
([nil nil ((124 . 125) (t 25279 8190 0 0)) nil (25279 8227 714385 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-comment-face)) . -124) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . 1) (undo-tree-id3 . -1) 125) nil (25279 8230 697836 0) 0 nil])
([nil nil ((124 . 125)) nil (25279 8234 649285 0) 0 nil] [nil nil ((130 . 131) (38 . 43) (124 . 125)) ((#("
" 0 1 (fontified nil face font-lock-comment-face)) . 124) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("					" 0 5 (fontified t)) . 38) (#("
" 0 1 (fontified t)) . 130) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . 1) (undo-tree-id27 . -1)) (25279 8230 697711 0) 0 nil] [nil nil ((38 . 43) (124 . 125)) ((#("
" 0 1 (fontified nil face font-lock-comment-face)) . 124) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . 1) (undo-tree-id18 . -1) (#("					" 0 5 (fontified t)) . 38)) (25279 8227 714362 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil face font-lock-comment-face)) . 80) (undo-tree-id279 . -1) (38 . 43) (76 . 77)) nil (25279 8473 591783 0) 0 nil] [nil nil ((#(" " 0 1 (fontified nil face font-lock-comment-face)) . 129) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . 1) (undo-tree-id31 . -1) (38 . 43) (125 . 126)) ((#("
" 0 1 (fontified nil face font-lock-comment-face)) . 125) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . 1) (undo-tree-id36 . -1) (#("					" 0 5 (fontified nil)) . 38) (129 . 130)) (25279 8234 649150 0) 0 nil])
nil
nil
([nil nil ((81 . 82)) nil (25279 8473 591781 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -42) (undo-tree-id270 . -1) (#(" " 0 1 (fontified t)) . -43) (undo-tree-id271 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id272 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id273 . -1) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id274 . -1) (#(" " 0 1 (fontified t)) . -47) (undo-tree-id275 . -1) (#(" " 0 1 (fontified t)) . -48) (undo-tree-id276 . -1) (#(" " 0 1 (fontified nil)) . -49) (undo-tree-id277 . -1) (#("	" 0 1 (fontified nil)) . 50) (undo-tree-id278 . -1) (42 . 50) 43) nil (25279 8473 591779 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -41) (undo-tree-id261 . -1) (#(" " 0 1 (fontified t)) . -42) (undo-tree-id262 . -1) (#(" " 0 1 (fontified t)) . -43) (undo-tree-id263 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id265 . -1) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id266 . -1) (#(" " 0 1 (fontified t)) . -47) (undo-tree-id267 . -1) (#(" " 0 1 (fontified nil)) . -48) (undo-tree-id268 . -1) (#("	" 0 1 (fontified nil)) . 49) (undo-tree-id269 . -1) (41 . 49) 42) nil (25279 8473 591769 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -43) (undo-tree-id255 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id256 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id257 . -1) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id258 . -1) (#(" " 0 1 (fontified nil)) . -47) (undo-tree-id259 . -1) (#("	" 0 1 (fontified nil)) . 48) (undo-tree-id260 . -1) (40 . 48) 41) nil (25279 8473 591759 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -40) (undo-tree-id252 . -1) (#(" " 0 1 (fontified t)) . -41) (undo-tree-id253 . -1) (#(" " 0 1 (fontified t)) . -42) (undo-tree-id254 . -1) 43) nil (25279 8473 591752 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -39) (undo-tree-id243 . -1) (#(" " 0 1 (fontified t)) . -40) (undo-tree-id244 . -1) (#(" " 0 1 (fontified t)) . -41) (undo-tree-id245 . -1) (#(" " 0 1 (fontified t)) . -42) (undo-tree-id246 . -1) (#(" " 0 1 (fontified t)) . -43) (undo-tree-id247 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id248 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id249 . -1) (#(" " 0 1 (fontified nil)) . -46) (undo-tree-id250 . -1) (#("	" 0 1 (fontified nil)) . 47) (undo-tree-id251 . -1) (39 . 47) 40) nil (25279 8473 591748 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -38) (undo-tree-id234 . -1) (#(" " 0 1 (fontified t)) . -39) (undo-tree-id235 . -1) (#(" " 0 1 (fontified t)) . -40) (undo-tree-id236 . -1) (#(" " 0 1 (fontified t)) . -41) (undo-tree-id237 . -1) (#(" " 0 1 (fontified t)) . -42) (undo-tree-id238 . -1) (#(" " 0 1 (fontified t)) . -43) (undo-tree-id239 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id240 . -1) (#(" " 0 1 (fontified nil)) . -45) (undo-tree-id241 . -1) (#("	" 0 1 (fontified nil)) . 46) (undo-tree-id242 . -1) (38 . 46) 39) nil (25279 8473 591737 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil face font-lock-comment-face)) . 130) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (76 . 81) (126 . 127)) nil (25279 8473 591728 0) 0 nil])
([nil nil ((130 . 134)) nil (25279 8473 591725 0) 0 nil])
([nil nil ((132 . 133)) nil (25279 8473 591724 0) 0 nil])
([nil nil ((133 . 135)) nil (25279 8473 591723 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 133) (#("(" 0 1 (fontified t)) . -133) (undo-tree-id230 . -1) 134) nil (25279 8473 591722 0) 0 nil])
([nil nil ((133 . 136) (#("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 133)) nil (25279 8473 591720 0) 0 nil])
([nil nil ((136 . 138)) nil (25279 8473 591719 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 136) (undo-tree-id228 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -136) (undo-tree-id229 . -1) 137) nil (25279 8473 591718 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -80) (undo-tree-id219 . -1) (#(" " 0 1 (fontified t)) . -81) (undo-tree-id220 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id221 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id222 . -1) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id223 . -1) (#(" " 0 1 (fontified t)) . -85) (undo-tree-id224 . -1) (#(" " 0 1 (fontified t)) . -86) (undo-tree-id225 . -1) (#(" " 0 1 (fontified nil)) . -87) (undo-tree-id226 . -1) (#("	" 0 1 (fontified nil)) . 88) (undo-tree-id227 . -1) (80 . 88) 81) nil (25279 8473 591713 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -79) (undo-tree-id210 . -1) (#(" " 0 1 (fontified t)) . -80) (undo-tree-id211 . -1) (#(" " 0 1 (fontified t)) . -81) (undo-tree-id212 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id213 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id214 . -1) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id215 . -1) (#(" " 0 1 (fontified t)) . -85) (undo-tree-id216 . -1) (#(" " 0 1 (fontified nil)) . -86) (undo-tree-id217 . -1) (#("	" 0 1 (fontified nil)) . 87) (undo-tree-id218 . -1) (79 . 87) 80) nil (25279 8473 591703 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -81) (undo-tree-id204 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id205 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id206 . -1) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id207 . -1) (#(" " 0 1 (fontified nil)) . -85) (undo-tree-id208 . -1) (#("	" 0 1 (fontified nil)) . 86) (undo-tree-id209 . -1) (78 . 86) 79) nil (25279 8473 591684 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -78) (undo-tree-id201 . -1) (#(" " 0 1 (fontified t)) . -79) (undo-tree-id202 . -1) (#(" " 0 1 (fontified t)) . -80) (undo-tree-id203 . -1) 81) nil (25279 8473 591677 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -77) (undo-tree-id192 . -1) (#(" " 0 1 (fontified t)) . -78) (undo-tree-id193 . -1) (#(" " 0 1 (fontified t)) . -79) (undo-tree-id194 . -1) (#(" " 0 1 (fontified t)) . -80) (undo-tree-id195 . -1) (#(" " 0 1 (fontified t)) . -81) (undo-tree-id196 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id197 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id198 . -1) (#(" " 0 1 (fontified nil)) . -84) (undo-tree-id199 . -1) (#("	" 0 1 (fontified nil)) . 85) (undo-tree-id200 . -1) (77 . 85) 78) nil (25279 8473 591672 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -75) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#(" " 0 1 (fontified t)) . -76) (undo-tree-id181 . -1) (#(" " 0 1 (fontified t)) . -77) (undo-tree-id182 . -1) (#(" " 0 1 (fontified t)) . -78) (undo-tree-id183 . -1) (#(" " 0 1 (fontified t)) . -79) (undo-tree-id184 . -1) (#(" " 0 1 (fontified t)) . -80) (undo-tree-id185 . -1) (#(" " 0 1 (fontified t)) . -81) (undo-tree-id186 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id187 . -1) (#(" " 0 1 (fontified nil)) . -83) (undo-tree-id188 . -1) (#("	" 0 1 (fontified nil)) . 84) (undo-tree-id189 . 1) (undo-tree-id190 . 1) (undo-tree-id191 . -1) (76 . 84) 77) nil (25279 8473 591661 0) 0 nil])
([nil nil ((81 . 86) (38 . 43) (75 . 76)) nil (25279 8473 591648 0) 0 nil])
([nil nil ((39 . 44) (#("					" 0 5 (fontified nil)) . -38) (undo-tree-id176 . -5) (43 . 44)) nil (25279 8473 591646 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -43) (undo-tree-id167 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id169 . -1) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t)) . -47) (undo-tree-id171 . -1) (#(" " 0 1 (fontified t)) . -48) (undo-tree-id172 . -1) (#(" " 0 1 (fontified t)) . -49) (undo-tree-id173 . -1) (#(" " 0 1 (fontified nil)) . -50) (undo-tree-id174 . -1) (#("	" 0 1 (fontified nil)) . 51) (undo-tree-id175 . -1) (43 . 51) 44) nil (25279 8473 591643 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -42) (undo-tree-id158 . -1) (#(" " 0 1 (fontified t)) . -43) (undo-tree-id159 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id160 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id161 . -1) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id162 . -1) (#(" " 0 1 (fontified t)) . -47) (undo-tree-id163 . -1) (#(" " 0 1 (fontified t)) . -48) (undo-tree-id164 . -1) (#(" " 0 1 (fontified nil)) . -49) (undo-tree-id165 . -1) (#("	" 0 1 (fontified nil)) . 50) (undo-tree-id166 . -1) (42 . 50) 43) nil (25279 8473 591633 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -44) (undo-tree-id152 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id153 . -1) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id154 . -1) (#(" " 0 1 (fontified t)) . -47) (undo-tree-id155 . -1) (#(" " 0 1 (fontified nil)) . -48) (undo-tree-id156 . -1) (#("	" 0 1 (fontified nil)) . 49) (undo-tree-id157 . -1) (41 . 49) 42) nil (25279 8473 591623 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -41) (undo-tree-id149 . -1) (#(" " 0 1 (fontified t)) . -42) (undo-tree-id150 . -1) (#(" " 0 1 (fontified t)) . -43) (undo-tree-id151 . -1) 44) nil (25279 8473 591616 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -40) (undo-tree-id140 . -1) (#(" " 0 1 (fontified t)) . -41) (undo-tree-id141 . -1) (#(" " 0 1 (fontified t)) . -42) (undo-tree-id142 . -1) (#(" " 0 1 (fontified t)) . -43) (undo-tree-id143 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id146 . -1) (#(" " 0 1 (fontified nil)) . -47) (undo-tree-id147 . -1) (#("	" 0 1 (fontified nil)) . 48) (undo-tree-id148 . -1) (40 . 48) 41) nil (25279 8473 591612 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -39) (undo-tree-id131 . -1) (#(" " 0 1 (fontified t)) . -40) (undo-tree-id132 . -1) (#(" " 0 1 (fontified t)) . -41) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t)) . -42) (undo-tree-id134 . -1) (#(" " 0 1 (fontified t)) . -43) (undo-tree-id135 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id136 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id137 . -1) (#(" " 0 1 (fontified nil)) . -46) (undo-tree-id138 . -1) (#("	" 0 1 (fontified nil)) . 47) (undo-tree-id139 . -1) (39 . 47) 40) nil (25279 8473 591595 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -81) (undo-tree-id122 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id123 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id124 . -1) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id125 . -1) (#(" " 0 1 (fontified t)) . -85) (undo-tree-id126 . -1) (#(" " 0 1 (fontified t)) . -86) (undo-tree-id127 . -1) (#(" " 0 1 (fontified t)) . -87) (undo-tree-id128 . -1) (#(" " 0 1 (fontified nil)) . -88) (undo-tree-id129 . -1) (#("	" 0 1 (fontified nil)) . 89) (undo-tree-id130 . -1) (81 . 89) 82) nil (25279 8473 591584 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -80) (undo-tree-id113 . -1) (#(" " 0 1 (fontified t)) . -81) (undo-tree-id114 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id115 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id116 . -1) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id117 . -1) (#(" " 0 1 (fontified t)) . -85) (undo-tree-id118 . -1) (#(" " 0 1 (fontified t)) . -86) (undo-tree-id119 . -1) (#(" " 0 1 (fontified nil)) . -87) (undo-tree-id120 . -1) (#("	" 0 1 (fontified nil)) . 88) (undo-tree-id121 . -1) (80 . 88) 81) nil (25279 8473 591574 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -82) (undo-tree-id107 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id108 . -1) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t)) . -85) (undo-tree-id110 . -1) (#(" " 0 1 (fontified nil)) . -86) (undo-tree-id111 . -1) (#("	" 0 1 (fontified nil)) . 87) (undo-tree-id112 . -1) (79 . 87) 80) nil (25279 8473 591564 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -79) (undo-tree-id104 . -1) (#(" " 0 1 (fontified t)) . -80) (undo-tree-id105 . -1) (#(" " 0 1 (fontified t)) . -81) (undo-tree-id106 . -1) 82) nil (25279 8473 591557 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -78) (undo-tree-id95 . -1) (#(" " 0 1 (fontified t)) . -79) (undo-tree-id96 . -1) (#(" " 0 1 (fontified t)) . -80) (undo-tree-id97 . -1) (#(" " 0 1 (fontified t)) . -81) (undo-tree-id98 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id99 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id100 . -1) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id101 . -1) (#(" " 0 1 (fontified nil)) . -85) (undo-tree-id102 . -1) (#("	" 0 1 (fontified nil)) . 86) (undo-tree-id103 . -1) (78 . 86) 79) nil (25279 8473 591552 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -77) (undo-tree-id86 . -1) (#(" " 0 1 (fontified t)) . -78) (undo-tree-id87 . -1) (#(" " 0 1 (fontified t)) . -79) (undo-tree-id88 . -1) (#(" " 0 1 (fontified t)) . -80) (undo-tree-id89 . -1) (#(" " 0 1 (fontified t)) . -81) (undo-tree-id90 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id91 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id92 . -1) (#(" " 0 1 (fontified nil)) . -84) (undo-tree-id93 . -1) (#("	" 0 1 (fontified nil)) . 85) (undo-tree-id94 . -1) (77 . 85) 78) nil (25279 8473 591535 0) 0 nil])
([nil nil ((127 . 129)) nil (25279 8473 591526 0) 0 nil])
([nil nil ((129 . 131)) nil (25279 8473 591525 0) 0 nil])
([nil nil ((130 . 137)) nil (25279 8473 591524 0) 0 nil])
([nil nil ((137 . 139)) nil (25279 8473 591523 0) 0 nil])
([nil nil ((138 . 142)) nil (25279 8473 591522 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-function-name-face)) . -141) (undo-tree-id85 . -1) 142) nil (25279 8473 591521 0) 0 nil])
([nil nil ((141 . 146)) nil (25279 8473 591520 0) 0 nil])
([nil nil ((146 . 147)) nil (25279 8473 591519 0) 0 nil])
([nil nil ((147 . 148)) nil (25279 8473 591518 0) 0 nil])
([nil nil ((149 . 152)) nil (25279 8473 591517 0) 0 nil])
([nil nil ((152 . 154)) nil (25279 8473 591516 0) 0 nil])
([nil nil ((153 . 160)) nil (25279 8473 591515 0) 0 nil])
([nil nil ((160 . 162)) nil (25279 8473 591514 0) 0 nil])
([nil nil ((161 . 171)) nil (25279 8473 591513 0) 0 nil])
([nil nil ((172 . 177)) nil (25279 8473 591512 0) 0 nil])
([nil nil ((177 . 179)) nil (25279 8473 591511 0) 0 nil])
([nil nil ((178 . 183)) nil (25279 8473 591510 0) 0 nil])
([nil nil ((183 . 185)) nil (25279 8473 591509 0) 0 nil])
([nil nil ((184 . 186)) nil (25279 8473 591508 0) 0 nil])
([nil nil ((185 . 188)) nil (25279 8473 591507 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -187) (undo-tree-id84 . -1) 188) nil (25279 8473 591506 0) 0 nil])
([nil nil ((187 . 188)) nil (25279 8473 591505 0) 0 nil])
([nil nil ((188 . 194)) nil (25279 8473 591503 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -192) (undo-tree-id82 . -1) (#("i" 0 1 (fontified t)) . -193) (undo-tree-id83 . -1) 194) nil (25279 8473 591502 0) 0 nil])
([nil nil ((192 . 198)) nil (25279 8473 591499 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -197) (undo-tree-id81 . -1) 198) nil (25279 8473 591498 0) 0 nil])
([nil nil ((197 . 200)) nil (25279 8473 591496 0) 0 nil])
([nil nil ((201 . 210)) nil (25279 8473 591495 0) 0 nil])
([nil nil ((211 . 215)) nil (25279 8473 591495 0) 0 nil])
([nil nil ((215 . 217)) nil (25279 8473 591494 0) 0 nil])
([nil nil ((216 . 218)) nil (25279 8473 591493 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 215) (undo-tree-id65 . 1) (undo-tree-id66 . 1) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -215) (undo-tree-id71 . -1) (undo-tree-id72 . 1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . 216) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -216) (undo-tree-id78 . -1) (undo-tree-id79 . 1) (undo-tree-id80 . -1) 217) nil (25279 8479 388940 0) 0 nil])
([nil nil ((#("((eq? m 'generate) generate)" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 2 (fontified t face (rainbow-delimiters-depth-5-face)) 2 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-5-face)) 18 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-4-face))) . 183) (undo-tree-id311 . -28) (undo-tree-id312 . -28) (undo-tree-id313 . -28)) nil (25279 8637 601232 0) 0 nil] [nil nil ((nil rear-nonsticky nil 218 . 219) (nil fontified nil 216 . 219) (nil fontified nil 215 . 216) (215 . 219)) ((#("
	  " 0 1 (fontified nil) 1 3 (fontified nil) 3 4 (fontified nil rear-nonsticky nil)) . 215) (undo-tree-id280 . -1) (undo-tree-id281 . -4) (undo-tree-id282 . 4) (undo-tree-id283 . -4) (nil fontified t 215 . 216) (nil rear-nonsticky t 218 . 219)) (25279 8479 388693 0) 0 nil] [nil nil ((#("((eq? m 'generate) generate)" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 2 (fontified t face (rainbow-delimiters-depth-5-face)) 2 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-5-face)) 18 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-4-face))) . 183) (undo-tree-id37 . -28) (undo-tree-id38 . -20) (undo-tree-id39 . 1) (undo-tree-id40 . 8) (undo-tree-id41 . -21) (undo-tree-id42 . 1) (undo-tree-id43 . 7) (undo-tree-id44 . -22) (undo-tree-id45 . 1) (undo-tree-id46 . 6) (undo-tree-id47 . -23) (undo-tree-id48 . 1) (undo-tree-id49 . 5) (undo-tree-id50 . -24) (undo-tree-id51 . 1) (undo-tree-id52 . 4) (undo-tree-id53 . -25) (undo-tree-id54 . 1) (undo-tree-id55 . 3) (undo-tree-id56 . -26) (undo-tree-id57 . 1) (undo-tree-id58 . 2) (undo-tree-id59 . -27) (undo-tree-id60 . -28) (undo-tree-id61 . 28) (undo-tree-id62 . 28) (undo-tree-id63 . 28) (undo-tree-id64 . -28)) ((183 . 211)) (25279 8473 591472 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 210 . 211) (nil fontified nil 210 . 211) (nil fontified nil 201 . 210) (nil fontified nil 200 . 201) (nil fontified nil 185 . 200) (nil fontified nil 184 . 185) (nil fontified nil 183 . 184) (183 . 211)) nil (25279 8637 601228 0) 0 nil])
nil
nil
([nil nil ((211 . 212)) nil (25279 8637 601226 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -211) (undo-tree-id310 . -1) 212) nil (25279 8637 601225 0) 0 nil])
([nil nil ((218 . 219)) nil (25279 8637 601223 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -218) (undo-tree-id309 . -1) 219) nil (25279 8637 601222 0) 0 nil])
([nil nil ((218 . 220)) nil (25279 8637 601220 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -218) (undo-tree-id307 . -1) (#("h" 0 1 (fontified t)) . -219) (undo-tree-id308 . -1) 220) nil (25279 8637 601219 0) 0 nil])
([nil nil ((214 . 215)) nil (25279 8637 601216 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -214) (undo-tree-id306 . -1) 215) nil (25279 8637 601215 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 242 . 243) (nil fontified nil 242 . 243) (nil fontified nil 233 . 242) (nil fontified nil 232 . 233) (nil fontified nil 217 . 232) (nil fontified nil 216 . 217) (nil fontified nil 215 . 216) (215 . 243)) nil (25279 8637 601213 0) 0 nil])
([nil nil ((#("generate" 0 8 (fontified t)) . 224)) nil (25279 8637 601210 0) 0 nil])
([nil nil ((224 . 231)) nil (25279 8637 601209 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -228) (undo-tree-id303 . -1) (#("s" 0 1 (fontified t)) . -229) (undo-tree-id304 . -1) (#("t" 0 1 (fontified t)) . -230) (undo-tree-id305 . -1) 231) nil (25279 8637 601207 0) 0 nil])
([nil nil ((228 . 231)) nil (25279 8637 601203 0) 0 nil])
([nil nil ((#("generate" 0 8 (fontified t)) . -233) (undo-tree-id302 . -8) 241) nil (25279 8637 601202 0) 0 nil])
([nil nil ((233 . 240)) nil (25279 8637 601201 0) 0 nil])
([nil nil ((242 . 247)) nil (25279 8637 601200 0) 0 nil])
([nil nil ((241 . 245)) nil (25279 8637 601199 0) 0 nil])
([nil nil ((245 . 247)) nil (25279 8637 601198 0) 0 nil])
([nil nil ((246 . 251)) nil (25279 8637 601197 0) 0 nil])
([nil nil ((251 . 253)) nil (25279 8637 601196 0) 0 nil])
([nil nil ((252 . 258)) nil (25279 8637 601195 0) 0 nil])
([nil nil ((258 . 260)) nil (25279 8637 601194 0) 0 nil])
([nil nil ((259 . 262)) nil (25279 8637 601193 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face font-lock-string-face)) . -261) (undo-tree-id301 . -1) 262) nil (25279 8637 601192 0) 0 nil])
([nil nil ((261 . 264)) nil (25279 8637 601190 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -262) (undo-tree-id299 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -263) (undo-tree-id300 . -1) 264) nil (25279 8637 601188 0) 0 nil])
([nil nil ((262 . 266)) nil (25279 8637 601186 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-string-face)) . -264) (undo-tree-id297 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -265) (undo-tree-id298 . -1) 266) nil (25279 8637 601184 0) 0 nil])
([nil nil ((264 . 280)) nil (25279 8637 601181 0) 0 nil])
([nil nil ((280 . 290)) nil (25279 8637 601180 0) 0 nil])
([nil nil ((291 . 293)) nil (25279 8637 601179 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 296) (#("
" 0 1 (fontified t)) . -296) (undo-tree-id296 . -1)) nil (25279 8637 601177 0) 0 nil])
([nil nil ((297 . 300)) nil (25279 8637 601175 0) 0 nil])
([nil nil ((300 . 302)) nil (25279 8637 601174 0) 0 nil])
([nil nil ((300 . 303) (#("di" 0 2 (fontified t)) . -300) (undo-tree-id295 . -2) 302) nil (25279 8637 601173 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -300) (undo-tree-id292 . -1) (#("i" 0 1 (fontified t)) . -301) (undo-tree-id293 . -1) (#("s" 0 1 (fontified t)) . -302) (undo-tree-id294 . -1) 303) nil (25279 8637 601170 0) 0 nil])
([nil nil ((300 . 308)) nil (25279 8637 601167 0) 0 nil])
([nil nil ((149 . 152)) nil (25279 8637 601166 0) 0 nil])
([nil nil ((152 . 154)) nil (25279 8637 601165 0) 0 nil])
([nil nil ((153 . 160)) nil (25279 8637 601164 0) 0 nil])
([nil nil ((160 . 161)) nil (25279 8637 601163 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face font-lock-function-name-face)) . -160) (undo-tree-id289 . -1) (undo-tree-id290 . 1) (undo-tree-id291 . -1) 161) nil (25279 8637 601161 0) 0 nil])
([nil nil ((160 . 167)) nil (25279 8637 601158 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-function-name-face)) . -166) (undo-tree-id286 . -1) (undo-tree-id287 . 1) (undo-tree-id288 . -1) 167) nil (25279 8637 601156 0) 0 nil])
([nil nil ((166 . 168)) nil (25279 8637 601152 0) 0 nil])
([nil nil ((168 . 170)) nil (25279 8640 486585 0) 0 nil])
([nil nil ((171 . 174)) nil (25279 8705 418716 0) 0 nil] [nil nil ((170 . 175)) ((#("
    " 0 5 (fontified t)) . 170) (undo-tree-id314 . -1) (undo-tree-id315 . -5) (undo-tree-id316 . 5) (undo-tree-id317 . -5)) (25279 8640 486501 0) 0 nil] [nil nil ((#("m" 0 1 (fontified t)) . 192) (undo-tree-id284 . 1) (undo-tree-id285 . -1)) ((192 . 193)) (25279 8637 601146 0) 0 nil])
([nil nil ((174 . 176)) nil (25279 8705 418715 0) 0 nil])
nil
nil
([nil nil ((175 . 182)) nil (25279 8705 418714 0) 0 nil])
([nil nil ((182 . 186)) nil (25279 8705 418714 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-function-name-face)) . -185) (undo-tree-id320 . -1) 186) nil (25279 8705 418713 0) 0 nil])
([nil nil ((185 . 190)) nil (25279 8705 418711 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -189) (undo-tree-id319 . -1) 190) nil (25279 8705 418710 0) 0 nil])
([nil nil ((#("deposit" 0 7 (fontified t)) . 265)) nil (25279 8705 418708 0) 0 nil])
([nil nil ((265 . 269)) nil (25279 8705 418707 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -268) (undo-tree-id318 . -1) 269) nil (25279 8705 418706 0) 0 nil])
([nil nil ((268 . 270)) nil (25279 8705 418698 0) 0 nil])
([nil nil ((#("deposit" 0 7 (fontified t)) . 272)) nil (25279 8705 418696 0) 0 nil])
([nil nil ((272 . 277)) nil (25279 8705 418691 0) 0 nil])
([nil nil ((347 . 348) (t 25279 8705 0 0)) nil (25279 8725 155405 0) 0 nil])
([nil nil ((348 . 350)) nil (25279 8725 155404 0) 0 nil])
([nil nil ((349 . 357)) nil (25279 8725 155403 0) 0 nil])
([nil nil ((357 . 367)) nil (25279 8725 155401 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 388 . 389) (nil fontified nil 388 . 389) (nil fontified nil 370 . 388) (nil fontified nil 369 . 370) (369 . 389)) nil (25279 8725 155484 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 380) (undo-tree-id333 . 1) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . 1) (undo-tree-id337 . 1) (undo-tree-id338 . 1) (undo-tree-id339 . 1) (undo-tree-id340 . 1) (undo-tree-id341 . 1) (undo-tree-id342 . 1) (undo-tree-id343 . 1) (undo-tree-id344 . 1) (undo-tree-id345 . 1) (undo-tree-id346 . 1) (undo-tree-id347 . 1) (undo-tree-id348 . 1) (undo-tree-id349 . 1) (undo-tree-id350 . 1) (#("t" 0 1 (fontified t)) . 380) (undo-tree-id351 . 1) (undo-tree-id352 . 1) (undo-tree-id353 . 1) (undo-tree-id354 . 1) (undo-tree-id355 . 1) (undo-tree-id356 . 1) (undo-tree-id357 . 1) (undo-tree-id358 . 1) (undo-tree-id359 . 1) (undo-tree-id360 . 1) (undo-tree-id361 . 1) (undo-tree-id362 . 1) (undo-tree-id363 . 1) (undo-tree-id364 . 1) (undo-tree-id365 . 1) (undo-tree-id366 . 1) (#("a" 0 1 (fontified t)) . 380) (undo-tree-id367 . 1) (undo-tree-id368 . 1) (undo-tree-id369 . 1) (undo-tree-id370 . 1) (undo-tree-id371 . 1) (undo-tree-id372 . 1) (undo-tree-id373 . 1) (undo-tree-id374 . 1) (undo-tree-id375 . 1) (undo-tree-id376 . 1) (undo-tree-id377 . 1) (undo-tree-id378 . 1) (undo-tree-id379 . 1) (undo-tree-id380 . 1) (#("r" 0 1 (fontified t)) . 380) (undo-tree-id381 . 1) (undo-tree-id382 . 1) (undo-tree-id383 . 1) (undo-tree-id384 . 1) (undo-tree-id385 . 1) (undo-tree-id386 . 1) (undo-tree-id387 . 1) (undo-tree-id388 . 1) (undo-tree-id389 . 1) (undo-tree-id390 . 1) (undo-tree-id391 . 1) (undo-tree-id392 . 1) (#("e" 0 1 (fontified t)) . 380) (undo-tree-id393 . 1) (undo-tree-id394 . 1) (undo-tree-id395 . 1) (undo-tree-id396 . 1) (undo-tree-id397 . 1) (undo-tree-id398 . 1) (undo-tree-id399 . 1) (undo-tree-id400 . 1) (undo-tree-id401 . 1) (undo-tree-id402 . 1) (#("n" 0 1 (fontified t)) . 380) (undo-tree-id403 . 1) (undo-tree-id404 . 1) (undo-tree-id405 . 1) (undo-tree-id406 . 1) (undo-tree-id407 . 1) (undo-tree-id408 . 1) (undo-tree-id409 . 1) (undo-tree-id410 . 1) (#("e" 0 1 (fontified t)) . 380) (undo-tree-id411 . 1) (undo-tree-id412 . 1) (undo-tree-id413 . 1) (undo-tree-id414 . 1) (undo-tree-id415 . 1) (undo-tree-id416 . 1) (#("g" 0 1 (fontified t)) . 380) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . 1) (undo-tree-id420 . 1)) nil (25279 8734 179652 0) 0 nil] [nil nil ((#("(new-rand '" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 11 (fontified t)) . 369) (undo-tree-id321 . -11) (undo-tree-id322 . 11) (undo-tree-id323 . -11) (undo-tree-id324 . -11) 380) ((369 . 380)) (25279 8725 155394 0) 0 nil])
([nil nil ((380 . 384)) nil (25279 8734 179591 0) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t)) . -382) (undo-tree-id325 . -1) (undo-tree-id326 . 1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (#("s" 0 1 (fontified t)) . -383) (undo-tree-id330 . -1) (undo-tree-id331 . 1) (undo-tree-id332 . -1) 384) nil (25279 8734 179589 0) 0 nil])
([nil nil ((382 . 385)) nil (25279 8734 179574 0) 0 nil])
([nil nil ((337 . 340) (t 25279 8734 0 0)) nil (25279 8937 476530 0) 0 nil])
([nil nil ((338 . 339)) nil (25279 8937 476528 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -338) (undo-tree-id529 . -1) 339) nil (25279 8937 476527 0) 0 nil])
([nil nil ((338 . 348)) nil (25279 8937 476524 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -349) (undo-tree-id421 . -1) (undo-tree-id422 . 1) (undo-tree-id423 . 1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#("d" 0 1 (fontified t)) . -350) (undo-tree-id441 . -1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("i" 0 1 (fontified t)) . -351) (undo-tree-id459 . -1) (undo-tree-id460 . 1) (undo-tree-id461 . 1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("s" 0 1 (fontified t)) . -352) (undo-tree-id475 . -1) (undo-tree-id476 . 1) (undo-tree-id477 . 1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("p" 0 1 (fontified t)) . -353) (undo-tree-id489 . -1) (undo-tree-id490 . 1) (undo-tree-id491 . 1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (#("a" 0 1 (fontified t)) . -354) (undo-tree-id501 . -1) (undo-tree-id502 . 1) (undo-tree-id503 . 1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (#("t" 0 1 (fontified t)) . -355) (undo-tree-id511 . -1) (undo-tree-id512 . 1) (undo-tree-id513 . 1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("c" 0 1 (fontified t)) . -356) (undo-tree-id519 . -1) (undo-tree-id520 . 1) (undo-tree-id521 . 1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (#("h" 0 1 (fontified t)) . -357) (undo-tree-id525 . -1) (undo-tree-id526 . 1) (undo-tree-id527 . 1) (undo-tree-id528 . -1) 358) nil (25279 8937 476514 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -169) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) 170 (t 25279 8937 0 0)) nil (25279 9069 555059 0) 0 nil])
([nil nil ((169 . 171)) nil (25279 9069 555055 0) 0 nil])
([nil nil ((170 . 175)) nil (25279 9069 555053 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -174) (undo-tree-id530 . -1) (undo-tree-id531 . 1) (undo-tree-id532 . -1) 175) nil (25279 9069 555051 0) 0 nil])
([nil nil ((174 . 177)) nil (25279 9069 555039 0) 0 nil])
([nil nil ((177 . 179)) nil (25279 9069 555038 0) 0 nil])
([nil nil ((179 . 181)) nil (25279 9069 555032 0) 0 nil])
([nil nil ((178 . 179) (t 25279 9069 0 0)) nil (25279 9119 670594 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -181) (undo-tree-id537 . -1) (undo-tree-id538 . 1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . 1) (undo-tree-id542 . 1) (undo-tree-id543 . 1) (undo-tree-id544 . 1) (undo-tree-id545 . -1) 182) nil (25279 9119 670591 0) 0 nil])
([nil nil ((181 . 183)) nil (25279 9119 670576 0) 0 nil])
([nil nil ((182 . 187)) nil (25279 9119 670571 0) 0 nil])
([nil nil ((371 . 374) (t 25279 9119 0 0)) nil (25279 9166 17694 0) 0 nil])
([nil nil ((372 . 374)) nil (25279 9166 17692 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -372) (undo-tree-id591 . -1) (undo-tree-id592 . 1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (#("l" 0 1 (fontified t)) . -373) (undo-tree-id596 . -1) (undo-tree-id597 . 1) (undo-tree-id598 . -1) 374) nil (25279 9172 746759 0) 0 nil])
([nil nil ((#("(new-rand 'generate)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face))) . 374) (undo-tree-id634 . -20) (undo-tree-id635 . -19) (undo-tree-id636 . -20) (undo-tree-id637 . -20) (undo-tree-id638 . -20) (undo-tree-id639 . 20) (undo-tree-id640 . -20) (undo-tree-id641 . 20) (undo-tree-id642 . 20) (undo-tree-id643 . -20)) nil (25279 9187 572736 0) 0 nil] [nil nil ((#("(new-rand 'generate)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face))) . 374) (undo-tree-id579 . -20) (undo-tree-id580 . -19) (undo-tree-id581 . -20) (undo-tree-id582 . -20) (undo-tree-id583 . -20) (undo-tree-id585 . 20) (undo-tree-id587 . 20) (undo-tree-id589 . 20) (undo-tree-id590 . -20)) ((374 . 394)) (25279 9169 802936 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 391 . 392) (nil fontified nil 391 . 392) (nil fontified nil 373 . 391) (nil fontified nil 372 . 373) (372 . 392)) nil (25279 9192 261831 0) 0 nil] [nil nil ((nil rear-nonsticky nil 390 . 391) (nil fontified nil 390 . 391) (nil fontified nil 372 . 390) (nil fontified nil 371 . 372) (371 . 391)) ((#("(new-rand 'generate)" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 19 (fontified nil) 19 20 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-1-face))) . 371) (undo-tree-id644 . -20) (undo-tree-id645 . 20) (undo-tree-id646 . -20) (nil rear-nonsticky t 390 . 391)) (25279 9187 572611 0) 0 nil])
([nil nil ((#(") " 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t)) . 372) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . 2) (undo-tree-id605 . 2) (undo-tree-id606 . 2) (undo-tree-id607 . 2) (undo-tree-id608 . 2) (undo-tree-id609 . 2) (undo-tree-id610 . 2) (undo-tree-id611 . 2) (undo-tree-id612 . 2) (undo-tree-id613 . 1) (undo-tree-id614 . 2) (undo-tree-id615 . -1) (undo-tree-id616 . 1) (undo-tree-id617 . -2) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -2) (undo-tree-id621 . 1) (undo-tree-id622 . -1) (undo-tree-id623 . 2) (undo-tree-id624 . 1) (undo-tree-id625 . 2) (undo-tree-id626 . -2) (undo-tree-id627 . 1) (undo-tree-id628 . -1) (undo-tree-id629 . 2) (undo-tree-id630 . 1) (undo-tree-id631 . 2) (undo-tree-id632 . 2) (undo-tree-id633 . 2)) ((372 . 374)) (25279 9169 802817 0) 0 nil] [nil nil ((#(") " 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t)) . 372) (undo-tree-id546 . -2) (undo-tree-id547 . -2) (undo-tree-id548 . -2) (undo-tree-id549 . -2) (undo-tree-id550 . -2) (undo-tree-id551 . 2) (undo-tree-id552 . 2) (undo-tree-id553 . 2) (undo-tree-id554 . 2) (undo-tree-id555 . 2) (undo-tree-id556 . 2) (undo-tree-id557 . 2) (undo-tree-id558 . 2) (undo-tree-id559 . 2) (undo-tree-id560 . 1) (undo-tree-id561 . 2) (undo-tree-id562 . -1) (undo-tree-id563 . 1) (undo-tree-id564 . -2) (undo-tree-id565 . -2) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (undo-tree-id568 . 1) (undo-tree-id569 . -1) (undo-tree-id570 . 2) (undo-tree-id571 . 1) (undo-tree-id572 . 2) (undo-tree-id573 . -2) (undo-tree-id574 . 1) (undo-tree-id575 . -1) (undo-tree-id576 . 2) (undo-tree-id577 . 1) (undo-tree-id578 . 2)) ((372 . 374)) (25279 9166 17667 0) 0 nil])
([nil nil ((392 . 394)) nil (25279 9236 955840 0) 0 nil])
nil
nil
nil
([nil nil ((#("(lambda (x) (+ x 4))" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-4-face)) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-4-face)) 11 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-4-face)) 13 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-4-face)) 19 20 (fontified t face (rainbow-delimiters-depth-3-face))) . 169) (undo-tree-id652 . -20) (undo-tree-id653 . -20) (undo-tree-id654 . -20) (t 25279 9192 0 0)) nil (25279 9262 675193 0) 0 nil] [nil nil ((nil rear-nonsticky nil 188 . 189) (nil fontified nil 188 . 189) (nil fontified nil 170 . 188) (nil fontified nil 169 . 170) (169 . 189) (t 25279 9192 0 0)) ((#("(new-rand 'generate)" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 19 (fontified nil) 19 20 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-3-face))) . 169) (undo-tree-id647 . -20) (undo-tree-id648 . 20) (undo-tree-id649 . -20) (nil rear-nonsticky t 188 . 189)) (25279 9236 955160 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 205 . 206) (nil fontified nil 205 . 206) (nil fontified nil 204 . 205) (nil fontified nil 199 . 204) (nil fontified nil 198 . 199) (nil fontified nil 197 . 198) (nil fontified nil 196 . 197) (nil fontified nil 195 . 196) (nil fontified nil 194 . 195) (nil fontified nil 193 . 194) (nil fontified nil 187 . 193) (nil fontified nil 186 . 187) (186 . 206)) nil (25279 9262 675188 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -206) (undo-tree-id650 . -1) (#("4" 0 1 (fontified t)) . -207) (undo-tree-id651 . -1) 208) nil (25279 9262 675267 0) 0 nil])
([nil nil ((186 . 187)) nil (25279 9277 436521 0) 0 nil] [nil nil ((186 . 187)) ((#(" " 0 1 (fontified t)) . 186)) (25279 9262 675171 0) 0 nil])
([nil nil ((169 . 171)) nil (25279 9277 436520 0) 0 nil])
nil
([nil nil ((170 . 174)) nil (25279 9277 436515 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 419) (undo-tree-id679 . -1) (t 25279 9277 0 0)) nil (25279 9303 649729 0) 0 nil])
([nil nil ((419 . 420)) nil (25279 9303 649727 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -419) (undo-tree-id678 . -1) 420) nil (25279 9303 649726 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . 388)) nil (25279 9303 649725 0) 0 nil])
([nil nil ((#("enerate" 0 7 (fontified t)) . 388)) nil (25279 9303 649724 0) 0 nil])
([nil nil ((388 . 390)) nil (25279 9303 649723 0) 0 nil])
([nil nil ((390 . 393)) nil (25279 9303 649722 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -410) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (#("e" 0 1 (fontified t)) . -411) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (#("s" 0 1 (fontified t)) . -412) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#("e" 0 1 (fontified t)) . -413) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (#("t" 0 1 (fontified t)) . -414) (undo-tree-id676 . -1) (undo-tree-id677 . -1) 415) nil (25279 9303 649719 0) 0 nil])
([nil nil ((410 . 412)) nil (25284 27169 216678 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -411) (undo-tree-id51 . -1) 412) nil (25284 27390 184052 0) 0 nil] [nil nil ((#("n" 0 1 (fontified t)) . -411) (undo-tree-id656 . 1) 412) ((411 . 412)) (25284 27169 53153 0) 0 nil])
([nil nil ((411 . 416)) nil (25284 27390 184050 0) 0 nil])
([nil nil ((411 . 418)) ((#("enerate" 0 7 (fontified t)) . 411)) (25284 27168 889516 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -412) (undo-tree-id47 . -1) (#("e" 0 1 (fontified t)) . -413) (undo-tree-id48 . -1) (#("r" 0 1 (fontified t)) . -414) (undo-tree-id49 . -1) (#("a" 0 1 (fontified t)) . -415) (undo-tree-id50 . -1) 416) nil (25284 27390 184048 0) 0 nil])
([nil nil ((132 . 133) (77 . 82) (126 . 127) (t 25279 10586 0 0)) ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . 126) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("					" 0 5 (fontified t)) . 77) (undo-tree-id20 . -5) (#("
" 0 1 (fontified t)) . 132) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1)) (25284 27168 589431 0) 0 nil])
([nil nil ((412 . 417)) nil (25284 27390 184044 0) 0 nil])
([nil nil ((#("

" 0 1 (face font-lock-comment-face fontified t) 1 2 (fontified t)) . 131) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) 133) ((131 . 133)) (25284 27168 589184 0) 0 nil] [nil nil ((nil rear-nonsticky nil 217 . 218) (nil fontified nil 188 . 218) (nil fontified nil 184 . 188) (nil fontified nil 173 . 184) (nil fontified nil 167 . 173) (nil fontified nil 152 . 167) (nil fontified nil 149 . 152) (nil fontified nil 145 . 149) (nil fontified nil 141 . 145) (nil fontified nil 140 . 141) (nil fontified nil 134 . 140) (nil fontified nil 133 . 134) (133 . 218)) ((#("(define rand
  (let ((x 50))
    (lambda ()
      (set! x (rand-update x))
      x)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 12 (face font-lock-function-name-face fontified nil) 12 13 (fontified nil) 13 15 (fontified nil) 15 16 (face (rainbow-delimiters-depth-2-face) fontified nil) 16 19 (face font-lock-keyword-face fontified nil) 19 20 (fontified nil) 20 21 (face (rainbow-delimiters-depth-3-face) fontified nil) 21 22 (face (rainbow-delimiters-depth-4-face) fontified nil) 22 26 (fontified nil) 26 27 (face (rainbow-delimiters-depth-4-face) fontified nil) 27 28 (face (rainbow-delimiters-depth-3-face) fontified nil) 28 29 (fontified nil) 29 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-3-face) fontified nil) 34 40 (face font-lock-keyword-face fontified nil) 40 41 (fontified nil) 41 42 (face (rainbow-delimiters-depth-4-face) fontified nil) 42 43 (face (rainbow-delimiters-depth-4-face) fontified nil) 43 44 (fontified nil) 44 50 (fontified nil) 50 51 (face (rainbow-delimiters-depth-4-face) fontified nil) 51 55 (face font-lock-keyword-face fontified nil) 55 58 (fontified nil) 58 59 (face (rainbow-delimiters-depth-5-face) fontified nil) 59 72 (fontified nil) 72 73 (face (rainbow-delimiters-depth-5-face) fontified nil) 73 74 (face (rainbow-delimiters-depth-4-face) fontified nil) 74 75 (fontified nil) 75 82 (fontified nil) 82 83 (face (rainbow-delimiters-depth-3-face) fontified nil) 83 84 (face (rainbow-delimiters-depth-2-face) fontified nil) 84 85 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky nil)) . 133) (nil fontified t 145 . 146) (nil fontified t 161 . 162) (nil fontified t 160 . 161) (nil fontified t 159 . 160) (nil fontified t 155 . 159) (nil fontified t 154 . 155) (nil fontified t 153 . 154) (nil fontified t 152 . 153) (nil fontified t 176 . 177) (nil fontified t 175 . 176) (nil fontified t 174 . 175) (nil fontified t 173 . 174) (nil fontified t 207 . 208) (nil fontified t 206 . 207) (nil fontified t 205 . 206) (nil fontified t 192 . 205) (nil fontified t 191 . 192) (nil fontified t 188 . 191) (nil rear-nonsticky t 217 . 218) (t 25284 27149 0 0)) (25284 27162 834309 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -414) (undo-tree-id44 . -1) (#("r" 0 1 (fontified t)) . -415) (undo-tree-id45 . -1) (#("a" 0 1 (fontified t)) . -416) (undo-tree-id46 . -1) 417) nil (25284 27390 184042 0) 0 nil])
nil
([nil nil ((#("
					" 0 1 (face font-lock-comment-face fontified t) 1 6 (fontified t)) . 76) (undo-tree-id0 . -6) (undo-tree-id1 . -1) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) 82 (t 25284 27149 0 0)) ((76 . 82)) (25284 27162 661597 0) 0 nil])
([nil nil ((414 . 418)) nil (25284 27390 184038 0) 0 nil])
([nil nil ((82 . 87) (39 . 44) (76 . 77)) ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . 76) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . 1) (undo-tree-id8 . -1) (#("					" 0 5 (fontified t)) . 39) (#("					" 0 5 (fontified t)) . 82) (undo-tree-id9 . -5) (undo-tree-id10 . -5)) (25284 27162 661461 0) 0 nil])
([nil nil ((127 . 128)) nil (25284 27390 184037 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 212 . 213) (nil fontified nil 183 . 213) (nil fontified nil 179 . 183) (nil fontified nil 168 . 179) (nil fontified nil 162 . 168) (nil fontified nil 147 . 162) (nil fontified nil 144 . 147) (nil fontified nil 140 . 144) (nil fontified nil 136 . 140) (nil fontified nil 135 . 136) (nil fontified nil 129 . 135) (nil fontified nil 128 . 129) (128 . 213)) nil (25284 27390 184218 0) 0 nil])
([nil nil ((214 . 216)) nil (25284 27559 31863 0) 0 nil] [nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -136) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -137) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -138) (undo-tree-id37 . -1) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -139) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 140) ((136 . 140)) (25284 27390 184027 0) 0 nil])
([nil nil ((nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil fontified nil 289 . 297) (nil fontified nil 288 . 289) (nil fontified nil 287 . 288) (nil fontified nil 274 . 287) (nil fontified nil 273 . 274) (nil fontified nil 270 . 273) (nil fontified nil 266 . 270) (nil fontified nil 265 . 266) (nil fontified nil 258 . 265) (nil fontified nil 257 . 258) (nil fontified nil 256 . 257) (nil fontified nil 255 . 256) (nil fontified nil 249 . 255) (nil fontified nil 248 . 249) (nil fontified nil 243 . 248) (nil fontified nil 242 . 243) (nil fontified nil 241 . 242) (nil fontified nil 237 . 241) (nil fontified nil 236 . 237) (nil fontified nil 235 . 236) (nil fontified nil 234 . 235) (nil fontified nil 231 . 234) (nil fontified nil 230 . 231) (nil fontified nil 228 . 230) (nil fontified nil 227 . 228) (nil fontified nil 226 . 227) (nil fontified nil 225 . 226) (nil fontified nil 224 . 225) (nil fontified nil 223 . 224) (nil fontified nil 222 . 223) (nil fontified nil 216 . 222) (nil fontified nil 215 . 216) (215 . 300)) nil (25284 27559 31935 0) 0 nil])
nil
([nil nil ((223 . 226)) nil (25284 27611 858126 0) 0 nil] [nil nil ((223 . 224)) ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 223) (undo-tree-id52 . -1) (undo-tree-id53 . 1) (undo-tree-id54 . -1)) (25284 27559 31850 0) 0 nil])
([nil nil ((224 . 225)) nil (25284 27611 858125 0) 0 nil])
nil
([nil nil ((225 . 238)) nil (25284 27611 858124 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -239) (undo-tree-id57 . -1) (#("r" 0 1 (fontified t)) . -240) (undo-tree-id58 . 1) (undo-tree-id59 . 1) (undo-tree-id60 . -1) (#("a" 0 1 (fontified t)) . -241) (undo-tree-id61 . -1) (#("n" 0 1 (fontified t)) . -242) (undo-tree-id62 . -1) (#("d" 0 1 (fontified t)) . -243) (undo-tree-id63 . -1) 244) nil (25284 27611 858122 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -251) (undo-tree-id55 . -1) (#("0" 0 1 (fontified t)) . -252) (undo-tree-id56 . -1) 253) nil (25284 27611 858116 0) 0 nil])
([nil nil ((251 . 255)) nil (25284 28282 974349 0) 0 nil])
([nil nil ((608 . 610) (t 25284 28285 0 0)) nil (25284 29013 679242 0) 0 nil] [nil nil ((#("(define rand
  (let ((x 50))
    (lambda ()
      (set! x (rand-update x))
      x)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 9 (face font-lock-function-name-face fontified t) 9 10 (face font-lock-function-name-face fontified t) 10 11 (face font-lock-function-name-face fontified t) 11 12 (face font-lock-function-name-face fontified t) 12 13 (fontified t) 13 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) fontified t) 16 19 (face font-lock-keyword-face fontified t) 19 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-3-face) fontified t) 21 22 (face (rainbow-delimiters-depth-4-face) fontified t) 22 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-4-face) fontified t) 27 28 (face (rainbow-delimiters-depth-3-face) fontified t) 28 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-3-face) fontified t) 34 40 (face font-lock-keyword-face fontified t) 40 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-4-face) fontified t) 42 43 (face (rainbow-delimiters-depth-4-face) fontified t) 43 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-4-face) fontified t) 51 55 (face font-lock-keyword-face fontified t) 55 58 (fontified t) 58 59 (face (rainbow-delimiters-depth-5-face) fontified t) 59 72 (fontified t) 72 73 (face (rainbow-delimiters-depth-5-face) fontified t) 73 74 (face (rainbow-delimiters-depth-4-face) fontified t) 74 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-3-face) fontified t) 83 84 (face (rainbow-delimiters-depth-2-face) fontified t) 84 85 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 128) (undo-tree-id78 . -85) (undo-tree-id79 . -13) (undo-tree-id81 . -85) (undo-tree-id83 . 85) (undo-tree-id85 . 85) (undo-tree-id87 . 85) (undo-tree-id89 . -85)) ((128 . 213)) (25284 28282 300258 0) 0 nil] [nil nil ((nil fontified nil 212 . 213) (nil fontified nil 211 . 212) (nil fontified nil 210 . 211) (nil fontified nil 202 . 210) (nil fontified nil 201 . 202) (nil fontified nil 200 . 201) (nil fontified nil 187 . 200) (nil fontified nil 186 . 187) (nil fontified nil 183 . 186) (nil fontified nil 179 . 183) (nil fontified nil 178 . 179) (nil fontified nil 171 . 178) (nil fontified nil 170 . 171) (nil fontified nil 169 . 170) (nil fontified nil 168 . 169) (nil fontified nil 162 . 168) (nil fontified nil 161 . 162) (nil fontified nil 156 . 161) (nil fontified nil 155 . 156) (nil fontified nil 154 . 155) (nil fontified nil 150 . 154) (nil fontified nil 149 . 150) (nil fontified nil 148 . 149) (nil fontified nil 147 . 148) (nil fontified nil 144 . 147) (nil fontified nil 143 . 144) (nil fontified nil 141 . 143) (nil fontified nil 140 . 141) (nil fontified nil 139 . 140) (nil fontified nil 138 . 139) (nil fontified nil 137 . 138) (nil fontified nil 136 . 137) (nil fontified nil 135 . 136) (nil fontified nil 129 . 135) (nil fontified nil 128 . 129) (128 . 213)) ((#("(define rand
  (let ((x 50))
    (lambda ()
      (set! x (rand-update x))
      x)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 9 (face font-lock-function-name-face fontified nil) 9 10 (face font-lock-function-name-face fontified nil) 10 11 (face font-lock-function-name-face fontified nil) 11 12 (face font-lock-function-name-face fontified nil) 12 13 (fontified nil) 13 15 (fontified nil) 15 16 (face (rainbow-delimiters-depth-2-face) fontified nil) 16 19 (face font-lock-keyword-face fontified nil) 19 20 (fontified nil) 20 21 (face (rainbow-delimiters-depth-3-face) fontified nil) 21 22 (face (rainbow-delimiters-depth-4-face) fontified nil) 22 26 (fontified nil) 26 27 (face (rainbow-delimiters-depth-4-face) fontified nil) 27 28 (face (rainbow-delimiters-depth-3-face) fontified nil) 28 29 (fontified nil) 29 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-3-face) fontified nil) 34 40 (face font-lock-keyword-face fontified nil) 40 41 (fontified nil) 41 42 (face (rainbow-delimiters-depth-4-face) fontified nil) 42 43 (face (rainbow-delimiters-depth-4-face) fontified nil) 43 44 (fontified nil) 44 50 (fontified nil) 50 51 (face (rainbow-delimiters-depth-4-face) fontified nil) 51 55 (face font-lock-keyword-face fontified nil) 55 58 (fontified nil) 58 59 (face (rainbow-delimiters-depth-5-face) fontified nil) 59 72 (fontified nil) 72 73 (face (rainbow-delimiters-depth-5-face) fontified nil) 73 74 (face (rainbow-delimiters-depth-4-face) fontified nil) 74 75 (fontified nil) 75 82 (fontified nil) 82 83 (face (rainbow-delimiters-depth-3-face) fontified nil) 83 84 (face (rainbow-delimiters-depth-2-face) fontified nil) 84 85 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky t)) . 128) (undo-tree-id64 . -75) (undo-tree-id65 . -85) (undo-tree-id66 . 85) (undo-tree-id67 . -85) (nil fontified t 140 . 141) (nil fontified t 156 . 157) (nil fontified t 171 . 172) (nil fontified t 202 . 203) (nil fontified t 212 . 213)) (25284 27611 858101 0) 0 nil])
([nil nil ((609 . 611)) nil (25284 29013 679240 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 128) (undo-tree-id68 . -1) (undo-tree-id70 . 1) (undo-tree-id72 . 1) (undo-tree-id74 . 1) (undo-tree-id76 . 1)) ((128 . 129)) (25284 28281 974379 0) 0 nil])
nil
([nil nil ((610 . 622)) nil (25284 29037 834343 0) 0 nil])
([nil nil ((522 . 524) (t 25284 27617 0 0)) ((#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 522) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -1) (undo-tree-id560 . -2) (undo-tree-id561 . -2) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2) (undo-tree-id565 . -2) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (undo-tree-id570 . -2) (undo-tree-id571 . -2) (undo-tree-id572 . -2) (undo-tree-id573 . -2) (undo-tree-id574 . -2) (undo-tree-id575 . -2) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (undo-tree-id581 . -2) (undo-tree-id582 . -2) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . 2) (undo-tree-id595 . 2) (undo-tree-id596 . 2) (undo-tree-id597 . 2) (undo-tree-id598 . 2) (undo-tree-id599 . 2) (undo-tree-id600 . 2) (undo-tree-id601 . 2) (undo-tree-id602 . 2) (undo-tree-id603 . 1) (undo-tree-id604 . 2) (undo-tree-id605 . -1) (undo-tree-id606 . 1) (undo-tree-id607 . 1) (undo-tree-id608 . -1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . -1)) (25284 28281 646980 0) 0 nil])
([nil nil ((624 . 625)) nil (25284 29050 403345 0) 0 nil] [nil nil ((624 . 625) 622) ((#("
" 0 1 (fontified t)) . 624) (undo-tree-id612 . -1) (t 25284 29013 0 0)) (25284 29013 679234 0) 0 nil])
([nil nil ((523 . 527)) ((#("rand" 0 4 (fontified t)) . 523) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4)) (25284 28281 277417 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 640 . 641) (nil fontified nil 640 . 641) (nil fontified nil 639 . 640) (nil fontified nil 627 . 639) (nil fontified nil 626 . 627) (nil fontified nil 625 . 626) (625 . 641)) nil (25284 29050 403343 0) 0 nil])
nil
([nil nil ((527 . 534)) ((#("-seed 5" 0 6 (fontified t) 6 7 (fontified t)) . 527) (undo-tree-id552 . -7) (undo-tree-id553 . -7)) (25284 28280 918219 0) 0 nil])
([nil nil ((641 . 642)) nil (25284 29910 931713 0) 0 nil])
([nil nil ((535 . 536) 534) ((#("
" 0 1 (fontified t)) . 535) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . 1) (undo-tree-id533 . -1) (undo-tree-id534 . 1) (undo-tree-id535 . 1) (undo-tree-id536 . 1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1)) (25284 28280 675884 0) 0 nil])
([nil nil ((156 . 161) (t 25284 29913 0 0)) nil (25285 45800 171952 0) 0 nil] [nil nil ((#("  " 0 2 (fontified nil)) . -305) (#("  " 0 2 (fontified t)) . -276) (#("  " 0 2 (fontified t)) . -261) (undo-tree-id647 . 2) (undo-tree-id649 . -1) (undo-tree-id651 . -2) (257 . 258) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -312) 243 (t 25284 29050 0 0)) ((312 . 313) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 257) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . 1) (undo-tree-id805 . 1) (undo-tree-id806 . 1) (undo-tree-id807 . -1) (261 . 263) (276 . 278) (305 . 307) (t 25284 29903 0 0)) (25284 29902 185122 0) 0 nil])
([nil nil ((522 . 525) (t 25284 27631 0 0)) ((#("() " 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 3 (fontified t)) . 522) (undo-tree-id504 . -2) (undo-tree-id505 . 1) (undo-tree-id506 . -1) (undo-tree-id507 . 1) (undo-tree-id508 . 1) (undo-tree-id509 . 1) (undo-tree-id510 . 1) (undo-tree-id511 . -1) (undo-tree-id512 . 1) (undo-tree-id513 . 2) (undo-tree-id514 . -2)) (25284 28280 334012 0) 0 nil])
([nil nil ((161 . 163)) nil (25285 45800 171951 0) 0 nil])
([nil nil ((270 . 274)) ((#("seed" 0 4 (fontified t)) . 270)) (25284 29901 663824 0) 0 nil] [nil nil ((#("(let ((x seed)))" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-3-face) fontified t) 6 7 (face (rainbow-delimiters-depth-4-face) fontified t) 7 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-4-face) fontified t) 14 15 (face (rainbow-delimiters-depth-3-face) fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) fontified t)) . 242) (undo-tree-id736 . -16) (undo-tree-id738 . -8) (undo-tree-id740 . 9) (undo-tree-id742 . 10) (undo-tree-id744 . -6) (undo-tree-id746 . 10) (undo-tree-id748 . 12) (undo-tree-id750 . -4) (undo-tree-id752 . 12) (undo-tree-id754 . 14) (undo-tree-id756 . -2) (undo-tree-id758 . 14) (undo-tree-id760 . 14) (undo-tree-id762 . 15) (undo-tree-id764 . 15) (undo-tree-id766 . 15) (undo-tree-id768 . -1) (undo-tree-id770 . 15) (undo-tree-id772 . -16) (undo-tree-id773 . -1) (undo-tree-id775 . 15) (undo-tree-id776 . -16) (undo-tree-id778 . 15) (undo-tree-id780 . -1) (undo-tree-id782 . 15)) ((242 . 258)) (25284 29624 796192 0) 0 nil] [nil nil ((#("let ((x seed)))" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-3-face) fontified t) 5 6 (face (rainbow-delimiters-depth-4-face) fontified t) 6 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-4-face) fontified t) 13 14 (face (rainbow-delimiters-depth-3-face) fontified t) 14 15 (face (rainbow-delimiters-depth-2-face) fontified t)) . 243) (undo-tree-id613 . -15) (undo-tree-id614 . 8) (undo-tree-id615 . -7) (undo-tree-id616 . 8) (undo-tree-id617 . 9) (undo-tree-id618 . -6) (undo-tree-id619 . 10) (undo-tree-id620 . 9) (undo-tree-id621 . -5) (undo-tree-id622 . 11) (undo-tree-id623 . 10) (undo-tree-id624 . -4) (undo-tree-id625 . 12) (undo-tree-id626 . 11) (undo-tree-id627 . -3) (undo-tree-id628 . 13) (undo-tree-id629 . 12) (undo-tree-id630 . -2) (undo-tree-id631 . 14) (undo-tree-id632 . 13) (undo-tree-id633 . -1) (undo-tree-id634 . 15) (undo-tree-id635 . 14) (undo-tree-id636 . 15) (undo-tree-id637 . 14) (undo-tree-id638 . -1) (undo-tree-id639 . 15) (undo-tree-id640 . 14) (undo-tree-id641 . 15) (undo-tree-id642 . 15) (undo-tree-id643 . 15) (undo-tree-id644 . -15) (undo-tree-id645 . 15)) ((243 . 258)) (25284 29456 108519 0) 0 nil])
([nil nil ((523 . 524) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -523)) ((523 . 524) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 523) (undo-tree-id500 . -1) (undo-tree-id501 . 1) (undo-tree-id502 . 1) (undo-tree-id503 . 1)) (25284 28280 14872 0) 0 nil])
([nil nil ((162 . 166)) nil (25285 45800 171950 0) 0 nil])
([nil nil ((312 . 314) (281 . 283) (260 . 262) (310 . 311) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -257) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . 1) (undo-tree-id800 . 1) (undo-tree-id801 . 1) (t 25284 29855 0 0)) ((257 . 258) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 310) (#("  " 0 2 (fontified t)) . 260) (#("  " 0 2 (fontified t)) . 281) (#("  " 0 2 (fontified t)) . 312) (t 25284 29883 0 0)) (25284 29883 716193 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 242) (undo-tree-id699 . -1) (undo-tree-id701 . 1) (undo-tree-id703 . 1) (undo-tree-id705 . 1) (undo-tree-id707 . 1) (undo-tree-id709 . 1) (undo-tree-id711 . 1) (undo-tree-id713 . 1) (undo-tree-id715 . 1) (undo-tree-id717 . 1) (undo-tree-id719 . 1) (undo-tree-id721 . 1) (undo-tree-id723 . 1) (undo-tree-id725 . 1) (undo-tree-id727 . 1) (undo-tree-id729 . 1) (undo-tree-id731 . 1) (undo-tree-id733 . 1) (undo-tree-id735 . -1)) ((242 . 243)) (25284 29624 332639 0) 0 nil])
nil
([nil nil ((522 . 523) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 522) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id173 . -1) (undo-tree-id175 . -1) (undo-tree-id177 . -1) (undo-tree-id179 . -1) (undo-tree-id181 . -1) 523) ((522 . 523) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 522) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1)) (25284 28279 734940 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -165) (undo-tree-id0 . -1) 166) nil (25285 45800 171948 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -242) (undo-tree-id652 . -1) (undo-tree-id654 . 1) (undo-tree-id656 . 1) (undo-tree-id658 . 1) (undo-tree-id660 . 1) (undo-tree-id662 . 1) (undo-tree-id664 . 1) (undo-tree-id666 . 1) (undo-tree-id668 . 1) (undo-tree-id670 . -1) (undo-tree-id672 . 1) (undo-tree-id674 . 1) (undo-tree-id676 . 1) (undo-tree-id678 . 1) (undo-tree-id680 . 1) (undo-tree-id682 . 1) (undo-tree-id684 . 1) (undo-tree-id686 . 1) (undo-tree-id688 . 1) (undo-tree-id690 . 1) (undo-tree-id692 . 1) (undo-tree-id694 . -1) (#(" " 0 1 (fontified t)) . -243) (undo-tree-id695 . -1) (undo-tree-id697 . -1) 244) ((242 . 244)) (25284 29624 131507 0) 0 nil])
([nil nil ((522 . 523) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 522) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id132 . -1) (undo-tree-id134 . -1) (undo-tree-id136 . -1) (undo-tree-id138 . -1) (undo-tree-id140 . -1) (undo-tree-id142 . -1) (undo-tree-id144 . -1) (undo-tree-id146 . -1) (522 . 523) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 522) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id157 . -1) (undo-tree-id159 . -1) (undo-tree-id161 . -1) (undo-tree-id163 . -1) (undo-tree-id165 . -1) (undo-tree-id167 . -1) (undo-tree-id169 . -1) 523) ((522 . 523) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 522) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (522 . 523) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 522) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1)) (25284 28279 531739 0) 0 nil])
([nil nil ((165 . 167)) nil (25285 45800 171932 0) 0 nil])
([nil nil ((286 . 288)) ((#("  " 0 2 (fontified t)) . 286)) (25284 29623 937455 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 523) (undo-tree-id91 . 1) (undo-tree-id93 . 1) (undo-tree-id95 . 1) (undo-tree-id97 . 1) (undo-tree-id99 . 1) (undo-tree-id101 . 1) (undo-tree-id103 . 1) (undo-tree-id105 . 1) (537 . 538) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -523) (undo-tree-id107 . 1) (undo-tree-id109 . 1) (undo-tree-id111 . 1) (undo-tree-id113 . 1) (undo-tree-id115 . 1) (undo-tree-id117 . 1) (undo-tree-id119 . 1) (undo-tree-id121 . 1)) ((523 . 524) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 537) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (523 . 524)) (25284 28279 294079 0) 0 nil])
([nil nil ((167 . 168)) nil (25285 45800 171930 0) 0 nil])
([nil nil ((237 . 238) (t 25284 29612 0 0)) ((#("n" 0 1 (fontified t)) . 237) (undo-tree-id793 . -1) (undo-tree-id794 . 1) (undo-tree-id795 . -1) (undo-tree-id796 . -1)) (25284 29623 708450 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 538 . 539) (nil fontified nil 538 . 539) (538 . 539) (t 25284 27726 0 0)) ((#("5" 0 1 (rear-nonsticky nil fontified nil)) . 538) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (nil rear-nonsticky t 538 . 539)) (25284 28279 100833 0) 0 nil] [nil nil ((#("5" 0 1 (fontified t)) . -534) 538 (t 25284 27726 0 0)) ((534 . 535)) (25284 27756 403988 0) 0 nil] [nil nil ((nil rear-nonsticky nil 607 . 608) (nil fontified nil 607 . 608) (nil fontified nil 606 . 607) (nil fontified nil 605 . 606) (nil fontified nil 604 . 605) (nil fontified nil 596 . 604) (nil fontified nil 595 . 596) (nil fontified nil 594 . 595) (nil fontified nil 581 . 594) (nil fontified nil 580 . 581) (nil fontified nil 577 . 580) (nil fontified nil 573 . 577) (nil fontified nil 572 . 573) (nil fontified nil 565 . 572) (nil fontified nil 564 . 565) (nil fontified nil 563 . 564) (nil fontified nil 562 . 563) (nil fontified nil 556 . 562) (nil fontified nil 555 . 556) (nil fontified nil 550 . 555) (nil fontified nil 549 . 550) (nil fontified nil 548 . 549) (nil fontified nil 544 . 548) (nil fontified nil 543 . 544) (nil fontified nil 542 . 543) (nil fontified nil 541 . 542) (nil fontified nil 538 . 541) (nil fontified nil 537 . 538) (nil fontified nil 535 . 537) (nil fontified nil 534 . 535) (nil fontified nil 533 . 534) (nil fontified nil 532 . 533) (nil fontified nil 531 . 532) (nil fontified nil 530 . 531) (nil fontified nil 529 . 530) (nil fontified nil 523 . 529) (nil fontified nil 522 . 523) (522 . 608) (t 25284 27726 0 0)) ((#("(define rand
  (let ((x 50))
    (lambda ()
      (set! x (rand-update x))
      x)))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 9 (face font-lock-function-name-face fontified nil) 9 10 (face font-lock-function-name-face fontified nil) 10 11 (face font-lock-function-name-face fontified nil) 11 12 (face font-lock-function-name-face fontified nil) 12 13 (fontified nil) 13 15 (fontified nil) 15 16 (face (rainbow-delimiters-depth-2-face) fontified nil) 16 19 (face font-lock-keyword-face fontified nil) 19 20 (fontified nil) 20 21 (face (rainbow-delimiters-depth-3-face) fontified nil) 21 22 (face (rainbow-delimiters-depth-4-face) fontified nil) 22 26 (fontified nil) 26 27 (face (rainbow-delimiters-depth-4-face) fontified nil) 27 28 (face (rainbow-delimiters-depth-3-face) fontified nil) 28 29 (fontified nil) 29 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-3-face) fontified nil) 34 40 (face font-lock-keyword-face fontified nil) 40 41 (fontified nil) 41 42 (face (rainbow-delimiters-depth-4-face) fontified nil) 42 43 (face (rainbow-delimiters-depth-4-face) fontified nil) 43 44 (fontified nil) 44 50 (fontified nil) 50 51 (face (rainbow-delimiters-depth-4-face) fontified nil) 51 55 (face font-lock-keyword-face fontified nil) 55 58 (fontified nil) 58 59 (face (rainbow-delimiters-depth-5-face) fontified nil) 59 72 (fontified nil) 72 73 (face (rainbow-delimiters-depth-5-face) fontified nil) 73 74 (face (rainbow-delimiters-depth-4-face) fontified nil) 74 75 (fontified nil) 75 82 (fontified nil) 82 83 (face (rainbow-delimiters-depth-3-face) fontified nil) 83 84 (face (rainbow-delimiters-depth-2-face) fontified nil) 84 85 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky t) 85 86 (rear-nonsticky nil fontified nil)) . 522) (undo-tree-id183 . -86) (undo-tree-id184 . -86) (undo-tree-id185 . 86) (undo-tree-id186 . -86) (nil fontified t 534 . 535) (nil fontified t 550 . 551) (nil fontified t 565 . 566) (nil fontified t 596 . 597) (nil rear-nonsticky t 607 . 608)) (25284 27747 844181 0) 0 nil])
([nil nil ((168 . 170)) nil (25285 45800 171929 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -236) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (#("n" 0 1 (fontified t)) . -237) (undo-tree-id787 . -1) (undo-tree-id788 . 1) (undo-tree-id789 . -1) 238) ((236 . 238)) (25284 29623 482776 0) 0 nil])
([nil nil ((#("5" 0 1 (rear-nonsticky t fontified t)) . -538) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id194 . -1) 539) ((538 . 539)) (25284 28278 886069 0) 0 nil] [nil nil ((#("5" 0 1 (rear-nonsticky t fontified t)) . -538) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . 1) (undo-tree-id190 . -1) 539) ((538 . 539)) (25284 27761 842331 0) 0 nil])
nil
nil
([nil nil ((169 . 174)) nil (25285 45800 171924 0) 0 nil])
([nil nil ((236 . 237)) ((#("e" 0 1 (fontified t)) . 236) (undo-tree-id790 . 1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (t 25284 29621 0 0)) (25284 29621 678608 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 552 . 553) (nil fontified nil 552 . 553) (nil fontified nil 551 . 552) (nil fontified nil 550 . 551) (nil fontified nil 540 . 550) (nil fontified nil 539 . 540) (nil fontified nil 538 . 539) (538 . 553)) ((#("((rand-seed 5))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil) 2 12 (fontified nil) 12 13 (fontified nil) 13 14 (face (rainbow-delimiters-depth-2-face) fontified nil) 14 15 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky nil)) . 538) (undo-tree-id449 . -15) (undo-tree-id450 . -15) (undo-tree-id451 . -15) (undo-tree-id452 . -15) (undo-tree-id453 . -15) (undo-tree-id454 . -15) (undo-tree-id455 . -15) (undo-tree-id456 . -15) (undo-tree-id457 . -15) (undo-tree-id458 . -15) (undo-tree-id459 . -15) (undo-tree-id460 . -15) (undo-tree-id461 . -15) (undo-tree-id462 . -15) (undo-tree-id463 . -15) (undo-tree-id464 . -15) (undo-tree-id465 . -15) (undo-tree-id466 . -15) (undo-tree-id467 . -15) (undo-tree-id468 . -15) (undo-tree-id469 . -15) (undo-tree-id470 . -15) (undo-tree-id471 . -15) (undo-tree-id472 . -15) (undo-tree-id473 . -15) (undo-tree-id474 . -15) (undo-tree-id475 . -15) (undo-tree-id476 . -15) (undo-tree-id477 . -15) (undo-tree-id478 . -15) (undo-tree-id479 . -15) (nil rear-nonsticky t 552 . 553)) (25284 28278 534705 0) 0 nil])
nil
([nil nil ((#("(print \"hello\")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 7 (fontified t) 7 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face (rainbow-delimiters-depth-3-face))) . 161) (undo-tree-id17 . -15) (undo-tree-id18 . 2) (undo-tree-id19 . 3) (undo-tree-id20 . -13) (undo-tree-id21 . 2) (undo-tree-id22 . 2) (undo-tree-id23 . -13) (undo-tree-id24 . 15) (undo-tree-id25 . 2) (undo-tree-id26 . 15) (undo-tree-id27 . 15) (undo-tree-id28 . 15) (undo-tree-id29 . 15) (undo-tree-id30 . -15) (t 25285 45800 0 0)) nil (25285 45826 56882 0) 0 nil])
nil
([nil nil ((553 . 554)) ((#("
" 0 1 (fontified t)) . 553) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1)) (25284 28278 59475 0) 0 nil] [nil nil ((553 . 554)) ((#("
" 0 1 (fontified t)) . 553) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1) (undo-tree-id269 . -1) (undo-tree-id270 . -1)) (25284 28090 512106 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 161) (undo-tree-id73 . -1) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (undo-tree-id78 . 1) (undo-tree-id79 . 1) (undo-tree-id80 . 1) (undo-tree-id81 . 1) (undo-tree-id82 . 1) (undo-tree-id83 . 1) (undo-tree-id84 . 1) (undo-tree-id85 . 1) (undo-tree-id86 . 1) (undo-tree-id87 . 1) (undo-tree-id88 . 1) (undo-tree-id89 . 1) (undo-tree-id90 . -1)) nil (25285 45834 216682 0) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 161) (undo-tree-id1 . -1) (undo-tree-id2 . 1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (undo-tree-id9 . 1) (undo-tree-id10 . 1) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . 1) (undo-tree-id14 . 1) (undo-tree-id15 . 1) (undo-tree-id16 . -1)) ((161 . 162)) (25285 45826 56606 0) 0 nil])
([nil nil ((554 . 555) (t 25284 28092 0 0)) ((#("
" 0 1 (fontified t)) . 554) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1)) (25284 28277 696366 0) 0 nil])
([nil nil ((nil fontified nil 568 . 569) (nil fontified nil 567 . 568) (nil fontified nil 566 . 567) (nil fontified nil 556 . 566) (nil fontified nil 555 . 556) (nil fontified nil 554 . 555) (554 . 569) (t 25284 27767 0 0)) ((#("((rand-seed 5))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil) 2 12 (fontified nil) 12 13 (fontified nil) 13 14 (face (rainbow-delimiters-depth-2-face) fontified nil) 14 15 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky t)) . 554) (undo-tree-id257 . -15) (undo-tree-id258 . -15) (undo-tree-id259 . -15) (nil fontified t 568 . 569)) (25284 28089 711544 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -157) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#(" " 0 1 (fontified t)) . -158) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(" " 0 1 (fontified t)) . -159) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#(" " 0 1 (fontified t)) . -160) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 161) nil (25285 45834 216752 0) 0 nil])
nil
([nil nil ((555 . 557)) ((#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 555) (undo-tree-id358 . -2) (undo-tree-id359 . -1) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . 2) (undo-tree-id363 . 2) (undo-tree-id364 . 2) (undo-tree-id365 . 2) (undo-tree-id366 . 2) (undo-tree-id367 . 2) (undo-tree-id368 . 1) (undo-tree-id369 . 2) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . 1) (undo-tree-id373 . 1) (undo-tree-id374 . -1) (undo-tree-id375 . 1) (undo-tree-id376 . 1) (undo-tree-id377 . -1) (undo-tree-id378 . 2) (undo-tree-id379 . 1) (undo-tree-id380 . 2) (undo-tree-id381 . 2) (undo-tree-id382 . 1) (undo-tree-id383 . 2) (undo-tree-id384 . -1) (undo-tree-id385 . 1) (undo-tree-id386 . 1) (undo-tree-id387 . -1)) (25284 28277 333786 0) 0 nil])
([nil nil ((569 . 570)) ((#("
" 0 1 (fontified t)) . 569)) (25284 28088 928369 0) 0 nil])
([nil nil ((240 . 241)) nil (25285 45840 280756 0) 0 nil] [nil nil ((240 . 241)) ((#("
" 0 1 (fontified t)) . 240) (undo-tree-id91 . -1) (undo-tree-id92 . 1) (undo-tree-id93 . 1)) (25285 45834 216629 0) 0 nil])
([nil nil ((556 . 570)) ((#("rand-update 3 " 0 13 (fontified t) 13 14 (fontified t)) . 556) (undo-tree-id349 . -14) (undo-tree-id350 . -13) (undo-tree-id351 . -13) (undo-tree-id352 . 2) (undo-tree-id353 . -12) (undo-tree-id354 . 14) (undo-tree-id355 . 2) (undo-tree-id356 . 14) (undo-tree-id357 . -14)) (25284 28277 51626 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -219) (#("  " 0 2 (fontified t)) . -190) (#("  " 0 2 (fontified t)) . -175) (undo-tree-id197 . -2) (171 . 172) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -226) 157 (t 25284 27808 0 0)) ((226 . 227) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 171) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (175 . 177) (190 . 192) (219 . 221)) (25284 28088 440378 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -240) (undo-tree-id97 . -1) (undo-tree-id98 . 1) (undo-tree-id99 . -1) 241) nil (25285 45840 280754 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -569) (undo-tree-id271 . -1) (undo-tree-id273 . -1) 570) ((569 . 570)) (25284 28276 852067 0) 0 nil])
([nil nil ((#("(let ((x seed)))" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-3-face) fontified t) 6 7 (face (rainbow-delimiters-depth-4-face) fontified t) 7 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-4-face) fontified t) 14 15 (face (rainbow-delimiters-depth-3-face) fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) fontified t)) . 156) (undo-tree-id234 . -16) (undo-tree-id235 . -16) (undo-tree-id237 . 16) (undo-tree-id239 . 16) (undo-tree-id241 . 16) (undo-tree-id242 . -16)) ((156 . 172)) (25284 28088 16266 0) 0 nil] [nil nil ((nil fontified nil 170 . 171) (nil fontified nil 169 . 170) (nil fontified nil 168 . 169) (nil fontified nil 158 . 168) (nil fontified nil 157 . 158) (nil fontified nil 156 . 157) (156 . 171)) ((#("((rand-seed 5))" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-3-face) fontified nil) 2 12 (fontified nil) 12 13 (fontified nil) 13 14 (face (rainbow-delimiters-depth-3-face) fontified nil) 14 15 (face (rainbow-delimiters-depth-2-face) fontified nil rear-nonsticky t)) . 156) (undo-tree-id198 . -15) (undo-tree-id199 . 15) (undo-tree-id200 . -15) (nil fontified t 170 . 171)) (25284 28010 98616 0) 0 nil])
([nil nil ((240 . 241)) nil (25285 45840 280751 0) 0 nil])
([nil nil ((#("(rand-update 3)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t)) . 555) (undo-tree-id288 . -15) (undo-tree-id289 . -15) (undo-tree-id290 . -15) (undo-tree-id291 . -15) (undo-tree-id292 . 15) (undo-tree-id293 . 15) (undo-tree-id294 . 15) (undo-tree-id295 . 15) (undo-tree-id296 . 15) (undo-tree-id297 . 15) (undo-tree-id298 . 1) (undo-tree-id299 . 15) (undo-tree-id300 . -14) (undo-tree-id301 . -14) (undo-tree-id302 . 2) (undo-tree-id303 . 1) (undo-tree-id304 . -15) (undo-tree-id305 . -13) (undo-tree-id306 . 14) (undo-tree-id307 . 2) (undo-tree-id308 . -1) (undo-tree-id309 . 15) (undo-tree-id310 . 14)) ((555 . 570)) (25284 28276 659062 0) 0 nil] [nil nil ((570 . 571) 569) ((#("
" 0 1 (fontified t)) . 570) (undo-tree-id287 . -1) (t 25284 28183 0 0)) (25284 28208 908156 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 156) (undo-tree-id224 . -1) (undo-tree-id226 . 1) (undo-tree-id228 . 1) (undo-tree-id230 . 1) (undo-tree-id232 . 1)) ((156 . 157)) (25284 28087 629390 0) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -240) (undo-tree-id94 . -1) (undo-tree-id95 . 1) (undo-tree-id96 . -1) 241) nil (25285 45840 280749 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 569 . 570) (nil fontified nil 569 . 570) (nil fontified nil 556 . 569) (nil fontified nil 555 . 556) (555 . 570)) ((#("(rand-update 3)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 14 (fontified nil) 14 15 (face (rainbow-delimiters-depth-1-face) rear-nonsticky nil fontified nil)) . 555) (undo-tree-id338 . -15) (undo-tree-id339 . -15) (undo-tree-id340 . -15) (undo-tree-id341 . -15) (undo-tree-id342 . -15) (undo-tree-id343 . -15) (undo-tree-id344 . -15) (undo-tree-id345 . -15) (undo-tree-id346 . -15) (undo-tree-id347 . -15) (undo-tree-id348 . -15) (nil rear-nonsticky t 569 . 570)) (25284 28276 445837 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 571 . 572) (nil fontified nil 571 . 572) (nil fontified nil 570 . 571) (nil fontified nil 569 . 570) (nil fontified nil 568 . 569) (nil fontified nil 562 . 568) (nil fontified nil 561 . 562) (nil fontified nil 560 . 561) (nil fontified nil 559 . 560) (nil fontified nil 556 . 559) (nil fontified nil 555 . 556) (555 . 572) (t 25284 28183 0 0)) ((#("(let ((x seed)))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 4 (face font-lock-keyword-face fontified nil) 4 5 (fontified nil) 5 6 (face (rainbow-delimiters-depth-2-face) fontified nil) 6 7 (face (rainbow-delimiters-depth-3-face) fontified nil) 7 13 (fontified nil) 13 14 (face (rainbow-delimiters-depth-3-face) fontified nil) 14 15 (face (rainbow-delimiters-depth-2-face) fontified nil) 15 16 (face (rainbow-delimiters-depth-1-face) fontified nil) 16 17 (rear-nonsticky nil fontified nil)) . 555) (undo-tree-id282 . -17) (undo-tree-id283 . -17) (undo-tree-id284 . -17) (undo-tree-id285 . -17) (undo-tree-id286 . -17) (nil rear-nonsticky t 571 . 572)) (25284 28208 781238 0) 0 nil] [nil nil ((nil rear-nonsticky nil 571 . 572) (nil fontified nil 571 . 572) (nil fontified nil 570 . 571) (nil fontified nil 569 . 570) (nil fontified nil 568 . 569) (nil fontified nil 562 . 568) (nil fontified nil 561 . 562) (nil fontified nil 560 . 561) (nil fontified nil 559 . 560) (nil fontified nil 556 . 559) (nil fontified nil 555 . 556) (555 . 572) (t 25284 28183 0 0)) ((#("(let ((x seed)))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 4 (face font-lock-keyword-face fontified nil) 4 5 (fontified nil) 5 6 (face (rainbow-delimiters-depth-2-face) fontified nil) 6 7 (face (rainbow-delimiters-depth-3-face) fontified nil) 7 13 (fontified nil) 13 14 (face (rainbow-delimiters-depth-3-face) fontified nil) 14 15 (face (rainbow-delimiters-depth-2-face) fontified nil) 15 16 (face (rainbow-delimiters-depth-1-face) fontified nil) 16 17 (rear-nonsticky nil fontified nil)) . 555) (undo-tree-id274 . -17) (undo-tree-id275 . -17) (undo-tree-id276 . 17) (undo-tree-id277 . -17) (nil rear-nonsticky t 571 . 572)) (25284 28201 735426 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -154) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id210 . -1) (undo-tree-id212 . -1) (#(" " 0 1 (fontified t)) . -155) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id222 . -1) 156) ((154 . 156)) (25284 28087 216162 0) 0 nil])
([nil nil ((258 . 259)) nil (25285 45840 281021 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 584 . 585) (nil fontified nil 584 . 585) (nil fontified nil 571 . 584) (nil fontified nil 570 . 571) (570 . 585)) ((#("(rand-update 3)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 14 (fontified nil) 14 15 (face (rainbow-delimiters-depth-1-face) rear-nonsticky nil fontified nil)) . 570) (undo-tree-id328 . -15) (undo-tree-id329 . -15) (undo-tree-id330 . -15) (undo-tree-id331 . -15) (undo-tree-id332 . -15) (undo-tree-id333 . -15) (undo-tree-id334 . -15) (undo-tree-id335 . 15) (undo-tree-id336 . 15) (undo-tree-id337 . -15) (nil rear-nonsticky t 584 . 585)) (25284 28276 254173 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 588 . 589) (nil fontified nil 588 . 589) (nil fontified nil 587 . 588) (nil fontified nil 586 . 587) (nil fontified nil 585 . 586) (nil fontified nil 579 . 585) (nil fontified nil 578 . 579) (nil fontified nil 577 . 578) (nil fontified nil 576 . 577) (nil fontified nil 573 . 576) (nil fontified nil 572 . 573) (572 . 589)) ((#("(let ((x seed)))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 4 (face font-lock-keyword-face fontified nil) 4 5 (fontified nil) 5 6 (face (rainbow-delimiters-depth-2-face) fontified nil) 6 7 (face (rainbow-delimiters-depth-3-face) fontified nil) 7 13 (fontified nil) 13 14 (face (rainbow-delimiters-depth-3-face) fontified nil) 14 15 (face (rainbow-delimiters-depth-2-face) fontified nil) 15 16 (face (rainbow-delimiters-depth-1-face) fontified nil) 16 17 (rear-nonsticky nil fontified nil)) . 572) (undo-tree-id278 . -17) (undo-tree-id279 . -17) (undo-tree-id280 . 17) (undo-tree-id281 . -17) (nil rear-nonsticky t 588 . 589)) (25284 28208 780967 0) 0 nil])
nil
([nil nil ((#("x" 0 1 (fontified t)) . -177) (undo-tree-id250 . -1) (undo-tree-id251 . 1) (undo-tree-id252 . 1) (undo-tree-id253 . -1) 178 (t 25284 28021 0 0)) ((177 . 178)) (25284 28086 735515 0) 0 nil])
([nil nil ((258 . 262)) nil (25285 45860 660281 0) 0 nil] [nil nil ((nil rear-nonsticky nil 258 . 259) (nil fontified nil 258 . 259) (258 . 259)) ((#("
" 0 1 (fontified nil rear-nonsticky nil)) . 258) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . 1) (undo-tree-id103 . -1) (nil rear-nonsticky t 258 . 259)) (25285 45840 280731 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 599 . 600) (nil fontified nil 599 . 600) (nil fontified nil 586 . 599) (nil fontified nil 585 . 586) (585 . 600)) ((#("(rand-update 3)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 14 (fontified nil) 14 15 (face (rainbow-delimiters-depth-1-face) rear-nonsticky nil fontified nil)) . 585) (undo-tree-id318 . -15) (undo-tree-id319 . 15) (undo-tree-id320 . 15) (undo-tree-id321 . 15) (undo-tree-id322 . 15) (undo-tree-id323 . 15) (undo-tree-id324 . 15) (undo-tree-id325 . 15) (undo-tree-id326 . 15) (undo-tree-id327 . 15) (nil rear-nonsticky t 599 . 600)) (25284 28275 732063 0) 0 nil])
nil
([nil nil ((177 . 181)) ((#("seed" 0 4 (fontified t)) . 177)) (25284 28086 365939 0) 0 nil])
([nil nil ((262 . 264)) nil (25285 45860 660280 0) 0 nil])
nil
([nil nil ((570 . 571)) ((#("
" 0 1 (fontified t)) . 570) (undo-tree-id317 . -1)) (25284 28275 277615 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -195) (undo-tree-id245 . -1) (undo-tree-id246 . 1) (undo-tree-id247 . 1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) 196) ((195 . 196)) (25284 28085 959613 0) 0 nil])
([nil nil ((263 . 264)) nil (25285 45860 660279 0) 0 nil])
([nil nil ((586 . 587)) ((#("
" 0 1 (fontified t)) . 586) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . 1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1)) (25284 28274 818781 0) 0 nil])
([nil nil ((195 . 199)) ((#("seed" 0 4 (fontified t)) . 195)) (25284 28085 607633 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -263) (undo-tree-id118 . -1) (undo-tree-id119 . 1) (undo-tree-id120 . -1) 264) nil (25285 45860 660278 0) 0 nil])
([nil nil ((602 . 603) 587) ((#("
" 0 1 (fontified t)) . 602) (t 25284 28224 0 0)) (25284 28224 808551 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -206) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 207) ((206 . 207)) (25284 28085 238899 0) 0 nil])
([nil nil ((263 . 265)) nil (25285 45860 660275 0) 0 nil])
nil
([nil nil ((206 . 210)) ((#("seed" 0 4 (fontified t)) . 206) (undo-tree-id254 . -4) (t 25284 28046 0 0)) (25284 28046 419741 0) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 263) (undo-tree-id113 . 1) (undo-tree-id114 . 1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -263) (undo-tree-id115 . -1) (undo-tree-id116 . 1) (undo-tree-id117 . -1) 264) nil (25285 45860 660273 0) 0 nil])
nil
([nil nil ((263 . 270)) nil (25285 45860 660268 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -269) (undo-tree-id110 . -1) (undo-tree-id111 . 1) (undo-tree-id112 . -1) 270) nil (25285 45860 660267 0) 0 nil])
([nil nil ((269 . 271)) nil (25285 45860 660263 0) 0 nil])
([nil nil ((270 . 291)) nil (25285 45860 660262 0) 0 nil])
([nil nil ((291 . 295)) nil (25285 45860 660261 0) 0 nil])
([nil nil ((295 . 298)) nil (25285 45860 660260 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-string-face)) . -297) (undo-tree-id107 . -1) (undo-tree-id108 . 1) (undo-tree-id109 . -1) 298) nil (25285 45860 660520 0) 0 nil])
([nil nil ((298 . 300)) nil (25285 45865 560846 0) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 314) (undo-tree-id104 . -1) (undo-tree-id105 . 1) (undo-tree-id106 . -1)) ((314 . 315)) (25285 45860 660250 0) 0 nil])
([nil nil ((268 . 269) (t 25285 45865 0 0)) nil (25285 45933 222635 0) 0 nil])
nil
([nil nil ((298 . 300)) nil (25285 45933 222630 0) 0 nil])
([nil nil ((300 . 301) (t 25285 45933 0 0)) nil (25285 45966 563982 0) 0 nil])
([nil nil ((301 . 303)) nil (25285 45987 937742 0) 0 nil])
([nil nil ((262 . 263) (t 25285 45966 0 0)) nil (25285 46035 980688 0) 0 nil] [nil nil ((nil rear-nonsticky nil 262 . 263) (nil fontified nil 262 . 263) (262 . 263) (t 25285 45966 0 0)) ((#("
" 0 1 (fontified nil rear-nonsticky nil)) . 262) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . 1) (undo-tree-id124 . -1) (nil rear-nonsticky t 262 . 263)) (25285 45987 936957 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -262) (undo-tree-id135 . -1) 263) nil (25285 46035 980687 0) 0 nil])
nil
([nil nil ((353 . 360)) nil (25285 46035 980685 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 404 . 405) (nil fontified nil 404 . 405) (nil fontified nil 402 . 404) (nil fontified nil 401 . 402) (nil fontified nil 400 . 401) (nil fontified nil 399 . 400) (nil fontified nil 368 . 399) (nil fontified nil 361 . 368) (nil fontified nil 360 . 361) (360 . 405)) nil (25285 46035 980684 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -373) (undo-tree-id128 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -374) (undo-tree-id129 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -375) (undo-tree-id130 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -376) (undo-tree-id131 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -377) (undo-tree-id132 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -378) (undo-tree-id133 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -379) (undo-tree-id134 . -1) 380) nil (25285 46035 980680 0) 0 nil])
([nil nil ((373 . 376)) nil (25285 46035 980672 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-string-face)) . -373) (undo-tree-id125 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -374) (undo-tree-id126 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -375) (undo-tree-id127 . -1) 376) nil (25285 46035 980669 0) 0 nil])
([nil nil ((373 . 376)) nil (25285 46035 980653 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -249) (undo-tree-id147 . -1) 250 (t 25285 46035 0 0)) nil (25285 46604 858917 0) 0 nil])
([nil nil ((249 . 257)) nil (25285 46604 858915 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -258) (undo-tree-id143 . -1) (#("e" 0 1 (fontified t)) . -259) (undo-tree-id144 . -1) (#("e" 0 1 (fontified t)) . -260) (undo-tree-id145 . -1) (#("d" 0 1 (fontified t)) . -261) (undo-tree-id146 . -1) 262) nil (25285 46604 858913 0) 0 nil])
([nil nil ((258 . 260)) nil (25285 46604 858908 0) 0 nil])
([nil nil ((317 . 318)) nil (25285 46604 858907 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 364 . 365) (nil fontified nil 317 . 365) (317 . 365)) nil (25285 46604 858906 0) 0 nil])
([nil nil ((363 . 364) (#(" " 0 1 (fontified nil)) . 362) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (363 . 364)) nil (25285 46604 859009 0) 0 nil])
([nil nil ((336 . 337) (#(" " 0 1 (fontified nil)) . 335) (undo-tree-id245 . -1) (undo-tree-id246 . 1) (undo-tree-id247 . 1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (336 . 337)) nil (25285 46630 957023 0) 0 nil] [nil nil ((#("(if " 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . 317) (undo-tree-id136 . 4) (undo-tree-id137 . -4) (undo-tree-id138 . 4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) 321) ((317 . 321)) (25285 46604 858896 0) 0 nil])
([nil nil ((#("(printf \"The new value of x is: ~a \\n\" x)" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 8 (fontified t) 8 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 40 (fontified t) 40 41 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face))) . 416) (undo-tree-id234 . -41) (undo-tree-id235 . 39) (undo-tree-id236 . -2) (undo-tree-id237 . 40) (undo-tree-id238 . 39) (undo-tree-id239 . -1) (undo-tree-id240 . 41) (undo-tree-id241 . 40) (undo-tree-id242 . 41) (undo-tree-id243 . 41) (undo-tree-id244 . -41)) nil (25285 46630 957011 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 416) (undo-tree-id223 . -1) (undo-tree-id224 . 1) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . 1) (undo-tree-id228 . 1) (undo-tree-id229 . 1) (undo-tree-id230 . 1) (undo-tree-id231 . 1) (undo-tree-id232 . 1) (undo-tree-id233 . -1)) nil (25285 46630 957001 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -410) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#(" " 0 1 (fontified t)) . -411) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#(" " 0 1 (fontified t)) . -412) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#(" " 0 1 (fontified t)) . -413) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#(" " 0 1 (fontified t)) . -414) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#(" " 0 1 (fontified t)) . -415) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 416) nil (25285 46630 956984 0) 0 nil])
([nil nil ((#("      x" 0 7 (fontified t)) . 410) (undo-tree-id359 . 7) (undo-tree-id360 . 7) (undo-tree-id361 . 7) (undo-tree-id362 . 7) (undo-tree-id363 . 7) (undo-tree-id364 . 7) (undo-tree-id365 . 7) (undo-tree-id366 . 7) (undo-tree-id367 . 7) (undo-tree-id368 . 7) (undo-tree-id369 . 7) (undo-tree-id370 . 7) (undo-tree-id371 . 7) (undo-tree-id372 . -7) (t 25285 46630 0 0)) nil (25285 46664 929627 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -409) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) 410) nil (25285 46664 929615 0) 0 nil])
([nil nil ((#("(printf \"The initial value of x is: ~a \\n\" x)" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 8 (fontified t) 8 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-3-face))) . 267) (undo-tree-id323 . -45) (undo-tree-id324 . -45) (undo-tree-id325 . -45) (undo-tree-id326 . 19) (undo-tree-id327 . -26) (undo-tree-id328 . 19) (undo-tree-id329 . 19) (undo-tree-id330 . 19) (undo-tree-id331 . 19) (undo-tree-id332 . -26) (undo-tree-id333 . 19) (undo-tree-id334 . 19) (undo-tree-id335 . -26) (undo-tree-id336 . 19) (undo-tree-id337 . 45) (undo-tree-id338 . -45)) nil (25285 46664 929598 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 267) (undo-tree-id310 . -1) (undo-tree-id311 . 1) (undo-tree-id312 . 1) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . 1) (undo-tree-id316 . 1) (undo-tree-id317 . 1) (undo-tree-id318 . 1) (undo-tree-id319 . 1) (undo-tree-id320 . 1) (undo-tree-id321 . 1) (undo-tree-id322 . -1)) nil (25285 46664 929575 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -264) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#(" " 0 1 (fontified t)) . -265) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (#(" " 0 1 (fontified t)) . -266) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) 267) nil (25285 46670 608907 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -273) (undo-tree-id437 . -1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (#("o" 0 1 (fontified t)) . -274) (undo-tree-id463 . -1) (undo-tree-id464 . 1) (undo-tree-id465 . 1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("s" 0 1 (fontified t)) . -275) (undo-tree-id487 . -1) (undo-tree-id488 . 1) (undo-tree-id489 . 1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("i" 0 1 (fontified t)) . -276) (undo-tree-id509 . -1) (undo-tree-id510 . 1) (undo-tree-id511 . 1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (#("t" 0 1 (fontified t)) . -277) (undo-tree-id529 . -1) (undo-tree-id530 . 1) (undo-tree-id531 . 1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("i" 0 1 (fontified t)) . -278) (undo-tree-id547 . -1) (undo-tree-id548 . 1) (undo-tree-id549 . 1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (#("v" 0 1 (fontified t)) . -279) (undo-tree-id563 . -1) (undo-tree-id564 . 1) (undo-tree-id565 . 1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (#("e" 0 1 (fontified t)) . -280) (undo-tree-id577 . -1) (undo-tree-id578 . 1) (undo-tree-id579 . 1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (#("?" 0 1 (fontified t)) . -281) (undo-tree-id589 . -1) (undo-tree-id590 . 1) (undo-tree-id591 . 1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#(" " 0 1 (fontified t)) . -282) (undo-tree-id599 . -1) (undo-tree-id600 . 1) (undo-tree-id601 . 1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (#("-" 0 1 (fontified t)) . -283) (undo-tree-id607 . -1) (undo-tree-id608 . 1) (undo-tree-id609 . 1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (#("5" 0 1 (fontified t)) . -284) (undo-tree-id613 . -1) (undo-tree-id614 . 1) (undo-tree-id615 . 1) (undo-tree-id616 . -1) 285) nil (25285 46724 507795 0) 0 nil] [nil nil ((nil rear-nonsticky nil 364 . 365) (nil fontified nil 364 . 365) (nil fontified nil 363 . 364) (nil fontified nil 361 . 363) (nil fontified nil 360 . 361) (nil fontified nil 359 . 360) (nil fontified nil 358 . 359) (nil fontified nil 327 . 358) (nil fontified nil 320 . 327) (nil fontified nil 319 . 320) (319 . 365)) ((#("(printf \"The initial value of x is: ~a \\n\" x)
" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 8 (fontified nil) 8 39 (fontified nil face font-lock-string-face) 39 40 (fontified nil face font-lock-string-face) 40 41 (fontified nil face font-lock-string-face) 41 42 (fontified nil face font-lock-string-face) 42 44 (fontified nil) 44 45 (fontified nil face (rainbow-delimiters-depth-3-face)) 45 46 (fontified nil rear-nonsticky nil)) . 319) (undo-tree-id375 . -46) (undo-tree-id376 . -46) (undo-tree-id377 . 46) (undo-tree-id378 . -46) (nil rear-nonsticky t 364 . 365)) (25285 46670 608638 0) 0 nil] [nil nil ((#("    " 0 4 (fontified nil)) . 263) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . 4) (undo-tree-id261 . 4) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (264 . 267) (264 . 265)) ((#("
" 0 1 (fontified nil)) . 264) (undo-tree-id373 . -1) (undo-tree-id374 . 1) (#("   " 0 3 (fontified nil)) . 264) (263 . 267)) (25285 46664 929525 0) 0 nil])
([nil nil ((273 . 281)) nil (25285 46724 507685 0) 0 nil])
nil
nil
([nil nil ((#("n" 0 1 (fontified t)) . -279) (undo-tree-id429 . -1) (undo-tree-id430 . 1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (#("r" 0 1 (fontified t)) . -280) (undo-tree-id434 . -1) (undo-tree-id435 . 1) (undo-tree-id436 . -1) 281) nil (25285 46724 507683 0) 0 nil])
([nil nil ((279 . 286)) nil (25285 46724 507677 0) 0 nil])
([nil nil ((#("(lambda ()
      (set! x (rand-update x)))" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-4-face)) 9 10 (fontified t face (rainbow-delimiters-depth-4-face)) 10 11 (fontified t) 11 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-4-face)) 18 22 (fontified t face font-lock-keyword-face) 22 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-5-face)) 26 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-5-face)) 40 41 (fontified t face (rainbow-delimiters-depth-4-face)) 41 42 (fontified t face (rainbow-delimiters-depth-3-face))) . 320) (undo-tree-id417 . -42) (undo-tree-id418 . -11) (undo-tree-id419 . -41) (undo-tree-id420 . -41) (undo-tree-id421 . -41) (undo-tree-id422 . -42) (undo-tree-id423 . 42) (undo-tree-id424 . 42) (undo-tree-id425 . 42) (undo-tree-id426 . 42) (undo-tree-id427 . 42) (undo-tree-id428 . -42)) nil (25285 46724 507676 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -319) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) 320) nil (25285 46724 508044 0) 0 nil])
([nil nil ((#("(error \"doesn't get here\")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 7 (fontified t) 7 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (rainbow-delimiters-depth-4-face))) . 289) (undo-tree-id637 . -26) (undo-tree-id638 . -26)) nil (25285 46796 857874 0) 0 nil] [nil nil ((#("	(error \"doesn't get here\")
	2)" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-4-face)) 2 8 (fontified t) 8 26 (fontified t face font-lock-string-face) 26 27 (fontified t face (rainbow-delimiters-depth-4-face)) 27 28 (fontified t) 28 30 (fontified t) 30 31 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-3-face))) . 288) (undo-tree-id379 . -31) (undo-tree-id380 . -28) (undo-tree-id381 . -31) (undo-tree-id382 . -31) (undo-tree-id383 . -31) (undo-tree-id384 . -31) (undo-tree-id385 . -31) (undo-tree-id386 . -31) (undo-tree-id387 . -31) (undo-tree-id388 . -31) (undo-tree-id389 . -31) (undo-tree-id390 . -31) (undo-tree-id391 . -31) (undo-tree-id392 . -31) (undo-tree-id393 . 28) (undo-tree-id394 . -3) (undo-tree-id395 . 29) (undo-tree-id396 . 28) (undo-tree-id397 . -2) (undo-tree-id398 . 29) (undo-tree-id399 . 16) (undo-tree-id400 . -15) (undo-tree-id401 . 31) (undo-tree-id402 . 16)) ((288 . 319)) (25285 46724 507651 0) 0 nil])
([nil nil ((288 . 289)) nil (25285 46796 857872 0) 0 nil])
nil
([nil nil ((#("f" 0 1 (fontified t)) . -288) (undo-tree-id636 . -1) 289) nil (25285 46796 857871 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 338 . 339) (nil fontified nil 338 . 339) (nil fontified nil 330 . 338) (nil fontified nil 329 . 330) (nil fontified nil 328 . 329) (nil fontified nil 315 . 328) (nil fontified nil 314 . 315) (nil fontified nil 311 . 314) (nil fontified nil 307 . 311) (nil fontified nil 306 . 307) (nil fontified nil 300 . 306) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil fontified nil 296 . 297) (nil fontified nil 290 . 296) (nil fontified nil 289 . 290) (289 . 339)) nil (25285 46796 857869 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -294) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (#(" " 0 1 (fontified nil)) . -295) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (#("	" 0 1 (fontified nil)) . 296) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (288 . 296) 289) nil (25285 46796 857864 0) 0 nil])
([nil nil ((294 . 296)) nil (25285 46796 857855 0) 0 nil])
([nil nil ((307 . 310) (#("      " 0 6 (fontified t)) . 307) 315) nil (25285 46796 857854 0) 0 nil])
([nil nil ((335 . 338) (#("      " 0 6 (fontified t)) . 335) 343) nil (25285 46796 857853 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -331) (undo-tree-id623 . -1) 332) nil (25285 46796 857852 0) 0 nil])
([nil nil ((331 . 335)) nil (25285 46796 857850 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -316) (undo-tree-id622 . -1) 317) nil (25285 46796 857849 0) 0 nil])
([nil nil ((316 . 320)) nil (25285 46796 857848 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -319) (undo-tree-id621 . -1) 320) nil (25285 46796 857847 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -316) (undo-tree-id618 . -1) (#("e" 0 1 (fontified t)) . -317) (undo-tree-id619 . -1) (#("e" 0 1 (fontified t)) . -318) (undo-tree-id620 . -1) 319) nil (25285 46796 857845 0) 0 nil])
([nil nil ((316 . 324)) nil (25285 46796 857841 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -348) (undo-tree-id617 . -1) 349) nil (25285 46796 857839 0) 0 nil])
([nil nil ((348 . 356)) nil (25285 46796 857828 0) 0 nil])
([nil nil ((287 . 288) (#(" " 0 1 (fontified nil)) . -267) (287 . 288) (t 25285 46796 0 0)) nil (25285 46870 413097 0) 0 nil])
([nil nil ((288 . 290)) nil (25285 46870 413096 0) 0 nil])
([nil nil ((289 . 295)) nil (25285 46870 413095 0) 0 nil])
([nil nil ((295 . 297)) nil (25285 46870 413094 0) 0 nil])
([nil nil ((296 . 307)) nil (25285 46870 413093 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -306) (undo-tree-id675 . -1) (undo-tree-id676 . 1) (undo-tree-id677 . -1) 307) nil (25285 46870 413092 0) 0 nil])
([nil nil ((306 . 321)) nil (25285 46870 413089 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -320) (undo-tree-id672 . -1) (undo-tree-id673 . 1) (undo-tree-id674 . -1) 321) nil (25285 46870 413088 0) 0 nil])
([nil nil ((320 . 321)) nil (25285 46870 413085 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -317) (undo-tree-id642 . -1) (undo-tree-id643 . 1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -318) (undo-tree-id653 . -1) (undo-tree-id654 . 1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -319) (undo-tree-id662 . -1) (undo-tree-id663 . 1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -320) (undo-tree-id669 . -1) (undo-tree-id670 . 1) (undo-tree-id671 . -1) 321) nil (25285 46870 413082 0) 0 nil])
([nil nil ((317 . 318)) nil (25285 46870 413059 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-string-face)) . -317) (undo-tree-id639 . -1) (undo-tree-id640 . 1) (undo-tree-id641 . -1) 318) nil (25285 46870 413057 0) 0 nil])
([nil nil ((317 . 321)) nil (25285 46870 413046 0) 0 nil])
([nil nil ((322 . 331)) nil (25285 46870 413042 0) 0 nil])
([nil nil ((286 . 288) (t 25285 46870 0 0)) nil (25285 46910 423891 0) 0 nil])
([nil nil ((288 . 290)) nil (25285 46910 423889 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -288) (undo-tree-id685 . -1) (undo-tree-id686 . 1) (undo-tree-id687 . -1) (undo-tree-id688 . 1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("e" 0 1 (fontified t)) . -289) (undo-tree-id691 . -1) (undo-tree-id692 . 1) (undo-tree-id693 . -1) 290) nil (25285 46910 423888 0) 0 nil])
([nil nil ((288 . 290)) nil (25285 46910 423880 0) 0 nil])
([nil nil ((289 . 295)) nil (25285 46910 423878 0) 0 nil])
([nil nil ((408 . 410) (368 . 370) (352 . 354) (413 . 414) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -343) (297 . 299) (341 . 342) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -295) (undo-tree-id678 . 1) (undo-tree-id679 . 1) (undo-tree-id680 . 1) (undo-tree-id681 . 1) (undo-tree-id682 . 1) (undo-tree-id683 . 1) (undo-tree-id684 . 1)) nil (25285 46910 423872 0) 0 nil])
([nil nil ((305 . 306) (t 25285 46910 0 0)) nil (25285 46941 907939 0) 0 nil])
([nil nil ((333 . 334) (t 25285 46941 0 0)) nil (25285 46965 590158 0) 0 nil])
([nil nil ((334 . 336)) nil (25285 46965 590153 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -426) (undo-tree-id698 . -1) 427 (t 25285 46965 0 0)) nil (25285 47171 327170 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 561 . 562) (nil fontified nil 561 . 562) (nil fontified nil 560 . 561) (nil fontified nil 547 . 560) (nil fontified nil 546 . 547) (nil fontified nil 545 . 546) (nil fontified nil 544 . 545) (nil fontified nil 528 . 544) (nil fontified nil 527 . 528) (nil fontified nil 517 . 527) (nil fontified nil 513 . 517) (nil fontified nil 512 . 513) (nil fontified nil 507 . 512) (nil fontified nil 506 . 507) (nil fontified nil 505 . 506) (nil fontified nil 504 . 505) (nil fontified nil 503 . 504) (nil fontified nil 497 . 503) (nil fontified nil 496 . 497) (nil fontified nil 486 . 496) (nil fontified nil 485 . 486) (nil fontified nil 484 . 485) (nil fontified nil 475 . 484) (nil fontified nil 474 . 475) (nil fontified nil 473 . 474) (nil fontified nil 472 . 473) (nil fontified nil 445 . 472) (nil fontified nil 438 . 445) (nil fontified nil 437 . 438) (nil fontified nil 434 . 437) (nil fontified nil 433 . 434) (nil fontified nil 432 . 433) (nil fontified nil 427 . 432) (nil fontified nil 426 . 427) (426 . 562)) nil (25285 47171 327167 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -540) (undo-tree-id694 . -1) (#("e" 0 1 (fontified t)) . -541) (undo-tree-id695 . -1) (#("e" 0 1 (fontified t)) . -542) (undo-tree-id696 . -1) (#("d" 0 1 (fontified t)) . -543) (undo-tree-id697 . -1) 544) nil (25285 47171 327161 0) 0 nil])
([nil nil ((540 . 543)) nil (25285 47171 327147 0) 0 nil])
([nil current ((543 . 548)) nil (25285 47171 327143 0) 0 nil])
nil
